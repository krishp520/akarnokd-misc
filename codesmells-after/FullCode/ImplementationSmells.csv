Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
akarnokd-misc,hu.akarnokd.rxjava3,RangeDelayedRange,main,Long Statement,The length of the statement "Flowable.range(0`20).doOnNext(run -> System.out.println("run: " + run)).concatMap(run -> Flowable.range(0`1000).flatMap(RangeDelayedRange::stubFunction).doOnNext(iteration -> System.out.println("iteration: " + iteration)).subscribeOn(Schedulers.io())).count().blockingSubscribe(v -> System.out.printf("%n%n---------%n%s"`v));" is 325.,9
akarnokd-misc,hu.akarnokd.rxjava3,RangeDelayedRange,main,Magic Number,The method contains a magic number: 20,9
akarnokd-misc,hu.akarnokd.rxjava3,RangeDelayedRange,main,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava3,RangeDelayedRange,stubFunction,Magic Number,The method contains a magic number: 100,21
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Long Statement,The length of the statement "return Flowable.range(0`10_000_000).subscribeOn(Schedulers.io()).filter(item -> item % 5 == partition).delay(10`TimeUnit.MILLISECONDS).map(item -> new Container(partition`item));" is 178.,14
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Magic Number,The method contains a magic number: 10_000_000,14
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.rxjava3,SomeGroupBy1,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Long Statement,The length of the statement "integerFlowable.concatMap(main -> delayedFlowable.map(other -> Integer.sum(main`other))).test().awaitDone(5`TimeUnit.SECONDS).assertResult(11`12`13);" is 149.,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 11,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 12,11
akarnokd-misc,hu.akarnokd.rxjava3,ZipWithOne,test,Magic Number,The method contains a magic number: 13,11
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Long Statement,The length of the statement "Observable.fromArray(1`2`3`5`20`21`22`23`24`25`26`27`28`29`30`31).flatMap(v -> Observable.timer(v * 100`TimeUnit.MILLISECONDS).map(w -> v)).compose(BufferWithTimeout.create(700`TimeUnit.MILLISECONDS`Schedulers.computation())).blockingSubscribe(System.out::println);" is 265.,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 3,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 5,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 20,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 21,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 22,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 23,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 24,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 25,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 26,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 27,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 28,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 29,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 30,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 31,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 100,16
akarnokd-misc,hu.akarnokd.rxjava3,BufferStartStop,test,Magic Number,The method contains a magic number: 700,16
akarnokd-misc,hu.akarnokd.rxjava3,SomeBlocking,test,Magic Number,The method contains a magic number: 20,10
akarnokd-misc,hu.akarnokd.rxjava3,SomeBlocking,test,Magic Number,The method contains a magic number: 5,10
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Long Statement,The length of the statement "Observable.zip(Observable.just(-1L).concatWith(Observable.interval(10`5`TimeUnit.SECONDS))`Observable.range(1`5)`(aLong`integer1) -> {" is 134.,12
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Long Statement,The length of the statement "return Observable.just(longIntegerPair.getValue()).delay(longIntegerPair.getKey() < 0 ? 10 : 5`TimeUnit.SECONDS).flatMap(value -> {" is 131.,12
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava3,ZipPattern,test,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava3,NestedUsing,test,Long Statement,The length of the statement "Single.using(() -> 1`v -> Single.using(() -> 2`w -> Single.just(1)`w -> System.out.println("Inner release` eager: " + (j0 == 0))`j0 == 0)`v -> System.out.println("Outer release` eager: " + (i0 == 0))`i == 0).blockingSubscribe();" is 228.,9
akarnokd-misc,hu.akarnokd.rxjava3,NestedUsing,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava3,NestedUsing,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava3,NestedUsing,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava3,CompletableAndThenNoError,main,Long Statement,The length of the statement "Completable.error(new Exception()).toObservable().flatMap(v -> Observable.<Boolean>never()`e -> Observable.just(false)`() -> Observable.just(true)).subscribe(System.out::println);" is 179.,8
akarnokd-misc,hu.akarnokd.rxjava3,RepeatWhenSO,test,Long Statement,The length of the statement ").repeatWhen(o -> o.delay(5`TimeUnit.SECONDS`testScheduler)).takeUntil(item -> !item.equals("PENDING")).doOnNext(item -> System.out.println("doOnNext called")).lastElement().toSingle().test();" is 192.,14
akarnokd-misc,hu.akarnokd.rxjava3,RepeatWhenSO,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava3,RepeatWhenSO,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava3,FlatMapLatest,someTest,Long Statement,The length of the statement "`false`1`1).observeOn(Schedulers.from(Executors.newCachedThreadPool())`false`1).filter(value -> value == maxint).blockingFirst();" is 129.,12
akarnokd-misc,hu.akarnokd.rxjava3,FlatMapLatest,someTest,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava3,FlatMapLatest,someTest,Magic Number,The method contains a magic number: 100,12
akarnokd-misc,hu.akarnokd.rxjava3,FlatMapLatest,someTest,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava3,MarblesAddBackground,main,Magic Number,The method contains a magic number: 0xFF000000,11
akarnokd-misc,hu.akarnokd.rxjava3,MarblesAddBackground,main,Magic Number,The method contains a magic number: 0xFF000000,11
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Long Statement,The length of the statement "Single<List<Item>> remoteListSource=Single.just(List.of(new Item(0`false`false)`new Item(1`false`false)`new Item(2`false`true)`new Item(3`true`false)`new Item(4`true`false)));" is 175.,9
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Long Statement,The length of the statement "Single<List<Item>> localListSource=Single.just(List.of(new Item(0`false`false)`new Item(1`true`false)`new Item(2`false`false)`new Item(3`false`false)));" is 152.,9
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava3,SomeCombine,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava3,OnErrorResumeNextInSequence,main,Long Statement,The length of the statement "sources.add(Observable.<Integer>error(new Exception("" + i)).doOnSubscribe(d -> System.out.println("Subscribed: " + j)));" is 121.,12
akarnokd-misc,hu.akarnokd.rxjava3,OnErrorResumeNextInSequence,main,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava3,OnErrorResumeNextInSequence,main,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava3,OnErrorResumeNextInSequence,main,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava3,UsingWhen,usingWhen,Long Statement,The length of the statement "return Maybe.fromPublisher(resource).flatMapPublisher(res -> Flowable.using(() -> res`use`resc -> Flowable.fromPublisher(cleanup.apply(resc)).subscribe()`false));" is 162.,28
akarnokd-misc,hu.akarnokd.rxjava3,UsingWhen,usingWhen,Long Statement,The length of the statement "return Maybe.fromPublisher(params.resource).flatMapPublisher(res -> Flowable.fromPublisher(use.apply(res)).flatMap(v -> Flowable.just(v)`e -> Flowable.fromPublisher(params.onError.apply(res)).ignoreElements().toFlowable()`() -> Flowable.fromPublisher(params.onComplete.apply(res)).ignoreElements().toFlowable()).doOnCancel(() -> Flowable.fromPublisher(params.onCancel.apply(res)).subscribe()));" is 394.,46
akarnokd-misc,hu.akarnokd.rxjava3,ConcatGroupTest,main,Long Statement,The length of the statement "values.groupBy(e -> e.departmentId).flatMapSingle(v -> v.toList()).concatMapIterable(v -> v).subscribe(System.out::println);" is 124.,29
akarnokd-misc,hu.akarnokd.rxjava3,ConcatGroupTest,main,Magic Number,The method contains a magic number: 10,29
akarnokd-misc,hu.akarnokd.rxjava3,ConcatGroupTest,main,Magic Number,The method contains a magic number: 5,29
akarnokd-misc,hu.akarnokd.rxjava3,ShareExample,main,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.rxjava2,Timeout800Test,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava2,Timeout800Test,test,Magic Number,The method contains a magic number: 800,12
akarnokd-misc,hu.akarnokd.rxjava2,Timeout800Test,test,Magic Number,The method contains a magic number: 800,12
akarnokd-misc,hu.akarnokd.rxjava2,Timeout800Test,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,Timeout800Test,test,Magic Number,The method contains a magic number: 2000,12
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test,Long Statement,The length of the statement "Flowable.just(Ix.range(0`300)`Ix.range(0`300)).flatMapIterable(x -> x).doOnNext(System.out::println).share().share().count().doOnEvent((a`b) -> {" is 145.,10
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test,Magic Number,The method contains a magic number: 300,10
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test,Magic Number,The method contains a magic number: 300,10
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test,Magic Number,The method contains a magic number: 600L,10
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test2,Long Statement,The length of the statement "Flowable.just(Ix.range(0`600)).flatMapIterable(x -> x).doOnNext(System.out::println).share().share().count().doOnEvent((a`b) -> {" is 129.,29
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test2,Magic Number,The method contains a magic number: 600,29
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapIterableSharedTest,test2,Magic Number,The method contains a magic number: 600L,29
akarnokd-misc,hu.akarnokd.rxjava2,SubjectRaceTest,subscribeToSubject,Long Statement,The length of the statement "io.reactivex.Observable.range(1`10).subscribeOn(Schedulers.newThread()).subscribe(value -> getAndObserve(valueToObserve).subscribe(observedValue -> System.out.println(" Value Received " + observedValue + " By "+ Thread.currentThread())));" is 238.,29
akarnokd-misc,hu.akarnokd.rxjava2,SubjectRaceTest,subscribeToSubject,Magic Number,The method contains a magic number: 10,29
akarnokd-misc,hu.akarnokd.rxjava2,SubjectRaceTest,getAndObserve,Long Statement,The length of the statement "final io.reactivex.Observable<String> observable=singlePropertyUpdateSubject.filter(v -> v.equals(value)).doOnSubscribe(c -> System.out.println("Consumer subscribed " + c));" is 173.,40
akarnokd-misc,hu.akarnokd.rxjava2,SubjectRaceTest,sendEvents,Long Statement,The length of the statement "io.reactivex.Observable.interval(1`TimeUnit.MILLISECONDS).takeUntil((Predicate<Long>)(key) -> key.toString().equals(valueToObserve)).subscribe(value -> {" is 153.,50
akarnokd-misc,hu.akarnokd.rxjava2,SubjectRaceTest,sendEvents,Magic Number,The method contains a magic number: 1998,50
akarnokd-misc,hu.akarnokd.rxjava2,SubjectRaceTest,sendEvents,Magic Number,The method contains a magic number: 100,50
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapCompletableThread,test,Magic Number,The method contains a magic number: 1000,14
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Long Statement,The length of the statement "Flowable.range(1`10).doOnCancel(() -> calls[0]++).publish().refCount().publish(v -> v).take(5).test().assertResult(1`2`3`4`5);" is 126.,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Long Statement,The length of the statement "Flux.range(1`10).doOnCancel(() -> calls[0]++).publish().refCount().publish(v -> v).take(5).subscribeWith(new TestSubscriber<Integer>()).assertResult(1`2`3`4`5);" is 160.,27
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Magic Number,The method contains a magic number: 10,27
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Magic Number,The method contains a magic number: 5,27
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Magic Number,The method contains a magic number: 2,27
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Magic Number,The method contains a magic number: 3,27
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Magic Number,The method contains a magic number: 4,27
akarnokd-misc,hu.akarnokd.rxjava2,PublishRefCountPublishTest,test2,Magic Number,The method contains a magic number: 5,27
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint2,main,Long Statement,The length of the statement "Observable.interval(10`TimeUnit.MILLISECONDS).doOnNext(System.out::println).observeOn(Schedulers.computation()`false`10).subscribe(new Subscriber<Long>(){" is 154.,10
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint2,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint2,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint2,main,Magic Number,The method contains a magic number: 30,10
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint2,main,Magic Number,The method contains a magic number: 100000,10
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint2,onNext,Magic Number,The method contains a magic number: 30,21
akarnokd-misc,hu.akarnokd.rxjava2,RefCountTrackingTest,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,RefCountTrackingTest,test,Magic Number,The method contains a magic number: 3,12
akarnokd-misc,hu.akarnokd.rxjava2,RefCountTrackingTest,test,Magic Number,The method contains a magic number: 4,12
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenTest,test,Magic Number,The method contains a magic number: 1000,15
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenTest,apply,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenTest,test,Magic Number,The method contains a magic number: 2,46
akarnokd-misc,hu.akarnokd.rxjava2,ErrorRemap,test,Long Statement,The length of the statement "Observable.error(new IOException()).onErrorResumeNext(( Throwable e) -> Observable.error(new IllegalArgumentException())).test().assertFailure(IllegalArgumentException.class);" is 175.,11
akarnokd-misc,hu.akarnokd.rxjava2,RefCountRace,replayRefCountShallBeThreadSafe,Magic Number,The method contains a magic number: 10000,12
akarnokd-misc,hu.akarnokd.rxjava2,RefCountRace,replayRefCountShallBeThreadSafe,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,RefCountRace,replayRefCountShallBeThreadSafe,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeSharedFlow,test,Long Statement,The length of the statement "Flowable<Long> flowable=Flowable.interval(1`TimeUnit.MILLISECONDS).onBackpressureLatest().take(10_000).observeOn(s1).map(v -> {" is 127.,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeSharedFlow,test,Long Statement,The length of the statement "flowable.observeOn(s2).doOnNext(v -> Thread.sleep(10)).subscribe(v -> System.out.println(v + " " + Thread.currentThread().getName())`Throwable::printStackTrace);" is 161.,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeSharedFlow,test,Magic Number,The method contains a magic number: 10_000,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeSharedFlow,test,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeSharedFlow,test,Magic Number,The method contains a magic number: 10000,12
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Long Statement,The length of the statement "Flowable.concatDelayError(Flowable.just(Flowable.just(1`2)`Flowable.error(new Exception("test"))`Flowable.just(3`4))).test().assertFailure(Exception.class`1`2`3`4);" is 164.,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Magic Number,The method contains a magic number: 3,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Magic Number,The method contains a magic number: 4,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Magic Number,The method contains a magic number: 3,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX,Magic Number,The method contains a magic number: 4,8
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Long Statement,The length of the statement "Observable.concatDelayError(Observable.just(Observable.just(1`2)`Observable.error(new Exception("test"))`Observable.just(3`4))).test().assertFailure(Exception.class`1`2`3`4);" is 174.,19
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Magic Number,The method contains a magic number: 2,19
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Magic Number,The method contains a magic number: 2,19
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.rxjava2,ConcatMapDelayTest,publisherOfPublisherDelayErrorX2,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.rxjava2,ZipCrash,testUncaughtException,Magic Number,The method contains a magic number: 2000,13
akarnokd-misc,hu.akarnokd.rxjava2,ZipCrash,testUncaughtExceptionWithFlatMap,Long Statement,The length of the statement "Observable<Object> testObservable=Observable.create(e -> e.onNext("")).flatMap((Function<Object`ObservableSource<?>>)o -> {" is 123.,40
akarnokd-misc,hu.akarnokd.rxjava2,ZipCrash,testUncaughtExceptionWithFlatMap,Magic Number,The method contains a magic number: 2000,40
akarnokd-misc,hu.akarnokd.rxjava2,ParallelFileProcessing,test,Long Statement,The length of the statement "Flowable.<Path`Stream<Path>>using(() -> Files.list(Paths.get("/my/dir/with/files"))`files -> Flowable.fromIterable((Iterable<Path>)() -> files.iterator())`AutoCloseable::close).parallel(2).runOn(Schedulers.computation()).filter(Files::isRegularFile);" is 250.,13
akarnokd-misc,hu.akarnokd.rxjava2,ParallelFileProcessing,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 4,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 3,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 3,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 3,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 9,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,simple,Magic Number,The method contains a magic number: 9,21
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Long Statement,The length of the statement "Flowable<String> f=Flowable.range(100`10).map(Object::toString).doOnCancel(() -> calls.incrementAndGet()).subscribeOn(Schedulers.computation()).delay(10`TimeUnit.MILLISECONDS);" is 176.,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Magic Number,The method contains a magic number: 10000,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Magic Number,The method contains a magic number: 100,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Magic Number,The method contains a magic number: 10,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Magic Number,The method contains a magic number: 10,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Magic Number,The method contains a magic number: 3,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,async,Magic Number,The method contains a magic number: 3,115
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,asyncCancel,Magic Number,The method contains a magic number: 10000,138
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,asyncCancel,Magic Number,The method contains a magic number: 500,138
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,interruptAsync,Empty catch clause,The method has an empty catch block.,153
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,interruptAsync,Magic Number,The method contains a magic number: 500,153
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Empty catch clause,The method has an empty catch block.,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Empty catch clause,The method has an empty catch block.,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Empty catch clause,The method has an empty catch block.,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Empty catch clause,The method has an empty catch block.,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 2,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 2,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 2,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 2,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 3,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 2,175
akarnokd-misc,hu.akarnokd.rxjava2,FlowableStringInputStreamTest,indexVerify,Magic Number,The method contains a magic number: 2,175
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test1,Long Statement,The length of the statement "Observable<Object> mixedSource=Observable.<Object>just("a"`1`"b"`2`"c"`3).doOnSubscribe(s -> System.out.println("Subscribed!"));" is 128.,9
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test1,Long Statement,The length of the statement "mixedSource.compose(f -> Observable.merge(f.ofType(Integer.class).compose(g -> g.map(v -> v + 1))`f.ofType(String.class).compose(g -> g.map(v -> v.toUpperCase())))).subscribe(System.out::println);" is 196.,9
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test1,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test1,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test2,Long Statement,The length of the statement "Observable<Object> mixedSource=Observable.<Object>just("a"`1`"b"`2`"c"`3).doOnSubscribe(s -> System.out.println("Subscribed!"));" is 128.,24
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test2,Long Statement,The length of the statement "mixedSource.publish(f -> Observable.merge(f.ofType(Integer.class).compose(g -> g.map(v -> v + 1))`f.ofType(String.class).compose(g -> g.map(v -> v.toUpperCase())))).subscribe(System.out::println);" is 196.,24
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test2,Magic Number,The method contains a magic number: 2,24
akarnokd-misc,hu.akarnokd.rxjava2,PublishExamples,test2,Magic Number,The method contains a magic number: 3,24
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Long Statement,The length of the statement ").subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()).doOnDispose(() -> System.out.println("Local Unsubscribed: " + integer)).doOnSubscribe(subscription -> System.out.println("Local Subscribed: " + integer));" is 221.,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Long Statement,The length of the statement "Completable globalCompletable=Completable.merge(completables.toFlowable(BackpressureStrategy.MISSING)`10).doOnDispose(() -> System.out.println("Global Unsubscribed")).timeout(1`TimeUnit.SECONDS);" is 195.,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Magic Number,The method contains a magic number: 20,9
akarnokd-misc,hu.akarnokd.rxjava2,MergeCompletablesTest,main,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava2,LockstepObserveOnTest,test,Magic Number,The method contains a magic number: 500,15
akarnokd-misc,hu.akarnokd.rxjava2,LockstepObserveOnTest,test,Magic Number,The method contains a magic number: 250,15
akarnokd-misc,hu.akarnokd.rxjava2,LockstepObserveOnTest,test,Magic Number,The method contains a magic number: 250,15
akarnokd-misc,hu.akarnokd.rxjava2,LockstepObserveOnTest,test,Magic Number,The method contains a magic number: 50,15
akarnokd-misc,hu.akarnokd.rxjava2,TestDoAfterTerminate,test,Long Statement,The length of the statement ").doAfterTerminate(doAfterTerminate).doOnCancel(() -> System.out.println("Cancelled")).firstOrError().doAfterTerminate(doAfterTerminate2).test().awaitTerminalEvent();" is 166.,12
akarnokd-misc,hu.akarnokd.rxjava2,TestDoAfterTerminate,test,Magic Number,The method contains a magic number: 123,12
akarnokd-misc,hu.akarnokd.rxjava2,TestDoAfterTerminate,test,Magic Number,The method contains a magic number: 345,12
akarnokd-misc,hu.akarnokd.rxjava2,TestDoAfterTerminate,test,Magic Number,The method contains a magic number: 456,12
akarnokd-misc,hu.akarnokd.rxjava2,TestDoAfterTerminate,test,Magic Number,The method contains a magic number: 345,12
akarnokd-misc,hu.akarnokd.rxjava2,TestDoAfterTerminate,test,Magic Number,The method contains a magic number: 345,12
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRange,test,Magic Number,The method contains a magic number: 10000,11
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRange,test,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.rxjava2,ObsMergeWithCompTest,test,Long Statement,The length of the statement "Observable.just(1).delay(500`TimeUnit.MILLISECONDS).mergeWith(c).subscribe(System.out::println`Throwable::printStackTrace`() -> System.out.println("Done"));" is 156.,11
akarnokd-misc,hu.akarnokd.rxjava2,ObsMergeWithCompTest,test,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.rxjava2,ObsMergeWithCompTest,test,Magic Number,The method contains a magic number: 500,11
akarnokd-misc,hu.akarnokd.rxjava2,ObsMergeWithCompTest,main,Long Statement,The length of the statement "Observable.just(1).delay(500`TimeUnit.MILLISECONDS).mergeWith(c).subscribe(System.out::println`Throwable::printStackTrace`() -> System.out.println("Done"));" is 156.,30
akarnokd-misc,hu.akarnokd.rxjava2,ObsMergeWithCompTest,main,Magic Number,The method contains a magic number: 1000,30
akarnokd-misc,hu.akarnokd.rxjava2,ObsMergeWithCompTest,main,Magic Number,The method contains a magic number: 500,30
akarnokd-misc,hu.akarnokd.rxjava2,FlowableMergeTest,nameLoop,Magic Number,The method contains a magic number: 10000,14
akarnokd-misc,hu.akarnokd.rxjava2,FlowableMergeTest,nameLoop,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,FlowableMergeTest,name,Magic Number,The method contains a magic number: 1000,24
akarnokd-misc,hu.akarnokd.rxjava2,FlowableMergeTest,name,Magic Number,The method contains a magic number: 1000,24
akarnokd-misc,hu.akarnokd.rxjava2,RetryEmptyErrorTest,emptyError,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,RetryEmptyErrorTest,nonEmptyError,Long Statement,The length of the statement "Observable.just(1).concatWith(Observable.error(new Exception())).compose(retryEmpty(2)).take(4).test().assertResult(1`1`1`1);" is 125.,20
akarnokd-misc,hu.akarnokd.rxjava2,RetryEmptyErrorTest,nonEmptyError,Magic Number,The method contains a magic number: 2,20
akarnokd-misc,hu.akarnokd.rxjava2,RetryEmptyErrorTest,nonEmptyError,Magic Number,The method contains a magic number: 4,20
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Long Statement,The length of the statement "Flowable.interval(100`TimeUnit.MILLISECONDS`ts).onBackpressureLatest().doOnNext(v -> state.put(v`new Long[4])).observeOn(ts`false`1).doOnNext(v -> {" is 148.,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 50,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 500,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 200,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 2000,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Long Statement,The length of the statement "Disposable d=Flowable.interval(100`TimeUnit.MILLISECONDS`ts).onBackpressureLatest().doOnNext(v -> state.put(v`new Long[]{0L`0L`0L`0L})).delay(0`TimeUnit.MILLISECONDS`ts).doOnNext(v -> {" is 185.,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 100,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 50,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 500,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 2,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 200,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 3,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 5000,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 200,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 100,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 2,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 2,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 3,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 3,57
akarnokd-misc,hu.akarnokd.rxjava2,StageDelays,test2,Magic Number,The method contains a magic number: 2,57
akarnokd-misc,hu.akarnokd.rxjava2,JustFlatMapCallableNull,test1,Long Statement,The length of the statement "Observable.just(1).hide().flatMap(i -> Observable.fromCallable(() -> null)).test().assertFailure(NullPointerException.class);" is 125.,16
akarnokd-misc,hu.akarnokd.rxjava2,RepeatThread,main,Magic Number,The method contains a magic number: 100,8
akarnokd-misc,hu.akarnokd.rxjava2,RepeatThread,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.rxjava2,RepeatThread,main,Magic Number,The method contains a magic number: 10,8
akarnokd-misc,hu.akarnokd.rxjava2,BufferWithConditionAndTime,test,Long Statement,The length of the statement "Function<Flowable<String>`Flowable<List<String>>> f=o -> o.buffer(o.filter(v -> v.contains("Start"))`v -> Flowable.merge(o.filter(w -> w.contains("End"))`Flowable.timer(5`TimeUnit.MINUTES`scheduler)));" is 201.,15
akarnokd-misc,hu.akarnokd.rxjava2,BufferWithConditionAndTime,test,Magic Number,The method contains a magic number: 5,15
akarnokd-misc,hu.akarnokd.rxjava2,BufferWithConditionAndTime,test,Magic Number,The method contains a magic number: 5,15
akarnokd-misc,hu.akarnokd.rxjava2,OnErrorCrash,test,Magic Number,The method contains a magic number: 50000,10
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint,main,Long Statement,The length of the statement "Flowable.interval(10`TimeUnit.MILLISECONDS).doOnNext(System.out::println).observeOn(Schedulers.computation()`false`10).subscribe(new ResourceSubscriber<Long>(){" is 160.,11
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint,main,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint,main,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint,main,Magic Number,The method contains a magic number: 30,11
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint,main,Magic Number,The method contains a magic number: 100000,11
akarnokd-misc,hu.akarnokd.rxjava2,BasicPrint,onNext,Magic Number,The method contains a magic number: 30,22
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryZero,Long Statement,The length of the statement "Observable.range(1`5).concatWith(Observable.<Integer>error(new IOException())).retry(0).test().assertFailure(IOException.class`1`2`3`4`5);" is 138.,11
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryZero,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryZero,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryZero,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryZero,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryZero,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Long Statement,The length of the statement "Observable.range(1`5).concatWith(Observable.<Integer>error(new IOException())).retry(1).test().assertFailure(IOException.class`1`2`3`4`5`1`2`3`4`5);" is 148.,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 5,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 2,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 5,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 2,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,retryOne,Magic Number,The method contains a magic number: 5,19
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatZero,Magic Number,The method contains a magic number: 5,27
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatOne,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatOne,Magic Number,The method contains a magic number: 2,35
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatOne,Magic Number,The method contains a magic number: 3,35
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatOne,Magic Number,The method contains a magic number: 4,35
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatOne,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 4,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 4,43
akarnokd-misc,hu.akarnokd.rxjava2,RedoCountTest,repeatTwo,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.rxjava2,JavaCompilerBugTest,test,Long Statement,The length of the statement "Map<Long`Object> someWeirdMapWithObject=com.google.common.collect.ImmutableMap.of(1L`new BrandBuilder(1)`2L`new BrandBuilder(2));" is 129.,12
akarnokd-misc,hu.akarnokd.rxjava2,JavaCompilerBugTest,test,Long Statement,The length of the statement "Observable.fromIterable(observables).flatMap(task -> task.observeOn(Schedulers.computation())).lastOrError().flattenAsObservable(x -> someWeirdMapWithObject.values()).<BrandBuilder>cast(BrandBuilder.class).map(BrandBuilder::build).toList().blockingGet();" is 254.,12
akarnokd-misc,hu.akarnokd.rxjava2,JavaCompilerBugTest,test,Magic Number,The method contains a magic number: 250,12
akarnokd-misc,hu.akarnokd.rxjava2,JavaCompilerBugTest,test,Magic Number,The method contains a magic number: 350,12
akarnokd-misc,hu.akarnokd.rxjava2,JavaCompilerBugTest,test,Magic Number,The method contains a magic number: 2L,12
akarnokd-misc,hu.akarnokd.rxjava2,JavaCompilerBugTest,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,CustomFlowableTest,test,Long Statement,The length of the statement "new CustomFlowable().distinctUntilChanged((integer`integer2) -> integer.intValue() == integer2.intValue()).subscribe(integer -> System.out.println("Consumer | Value: " + integer.intValue()));" is 191.,10
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,test,Long Statement,The length of the statement "results.timeout(1000`TimeUnit.MILLISECONDS`Schedulers.single()`Flowable.error(new TimeoutException("Timed out"))).doOnTerminate(() -> System.out.println("Finished")).subscribe(r -> System.out.println("Got " + r)`e -> System.out.println("Error " + e));" is 251.,13
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,test,Magic Number,The method contains a magic number: 10,13
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,test,Magic Number,The method contains a magic number: 30000,13
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,test,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,test,Magic Number,The method contains a magic number: 200000,13
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,hasNext,Magic Number,The method contains a magic number: 30000,21
akarnokd-misc,hu.akarnokd.rxjava2,CustomSchedulerTimeout,next,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Long Statement,The length of the statement "return Flowables.<Pair>orderedMerge(a.<Pair>map(Left::new)`b.<Pair>map(Right::new)).distinctUntilChanged().buffer(2`1).flatMapIterable(buf -> {" is 143.,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 2,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 3,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 6,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 2,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 3,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 4,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 5,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 6,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 2,67
akarnokd-misc,hu.akarnokd.rxjava2,JoinPairwise,test,Magic Number,The method contains a magic number: 2,67
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Long Statement,The length of the statement "ps.compose(bufferDebounce(200`TimeUnit.MILLISECONDS`sch)).subscribe(v -> System.out.println(sch.now(TimeUnit.MILLISECONDS) + ": " + v)`Throwable::printStackTrace`() -> System.out.println("Done"));" is 196.,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 200,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 150,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 400,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 450,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 6,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 800,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 7,14
akarnokd-misc,hu.akarnokd.rxjava2,BufferDebounce,test,Magic Number,The method contains a magic number: 850,14
akarnokd-misc,hu.akarnokd.rxjava2,LatestObserveOnTest,test,Magic Number,The method contains a magic number: 1000,14
akarnokd-misc,hu.akarnokd.rxjava2,LatestObserveOnTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,LatestObserveOnTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,LatestObserveOnTest,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava2,LatestObserveOnTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,LatestObserveOnTest,test,Magic Number,The method contains a magic number: 1000,14
akarnokd-misc,hu.akarnokd.rxjava2,Issue5104,main,Long Statement,The length of the statement "vehicleToFetch.delay(2`TimeUnit.SECONDS).window(10`TimeUnit.SECONDS`5).observeOn(Schedulers.io()).subscribe(w -> w.toList().subscribe(ws -> {" is 141.,12
akarnokd-misc,hu.akarnokd.rxjava2,Issue5104,main,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,Issue5104,main,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava2,Issue5104,main,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,Issue5104,main,Magic Number,The method contains a magic number: 15000,12
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutTask,test,Long Statement,The length of the statement ").concatMap(call -> Observable.fromCallable(call).subscribeOn(Schedulers.computation()).timeout(1`TimeUnit.SECONDS`Observable.just("timeout")));" is 144.,12
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutTask,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,AssemblyHooksExample,test,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,AssemblyHooksExample,test,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,AssemblyHooksExample,test,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,AssemblyHooksExample,test,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.rxjava2,AssemblyHooksExample,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,AssemblyHooksExample,test,Magic Number,The method contains a magic number: 6,11
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectSignals,test,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectSignals,test,Magic Number,The method contains a magic number: 3,10
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectSignals,startListening,Long Statement,The length of the statement "Disposable d=bs.doOnNext(v -> System.out.println("After subject " + v)).skip(1).doOnNext(v -> System.out.println("After skip " + v)).take(1).doOnNext(v -> System.out.println("After take " + v)).doOnDispose(() -> System.out.println("doOnDispose")).subscribe(v -> {" is 263.,28
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Long Statement,The length of the statement "Observable.range(1`4).buffer(2`1).filter(list -> list.size() == 2).map(list -> list.get(0) + list.get(1)).test().assertResult(3`5`7);" is 133.,9
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava2,SlidingWindowTest,test,Magic Number,The method contains a magic number: 7,9
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatest,click,Long Statement,The length of the statement "Observable.combineLatest(subject1`subject2`(a`b) -> "biFun call " + a + "` "+ b).subscribe(v -> System.out.println("Combined latest: " + v));" is 141.,31
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Long Statement,The length of the statement "Single<List<Integer>> subject=Observable.fromIterable(Arrays.asList(first`second`third`fourth)).concatMapSingle(single -> single).reduce(new ArrayList<>()`(seed`items) -> {" is 172.,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleConcatTest,test,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava2,ParallelInterrupt,main,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.rxjava2,ParallelInterrupt,main,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,ParallelInterrupt,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,ParallelInterrupt,main,Magic Number,The method contains a magic number: 2000,14
akarnokd-misc,hu.akarnokd.rxjava2,ParallelInterrupt,main,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.rxjava2,NotInFirst,test,Long Statement,The length of the statement "obs1.collect(HashSet::new`(a`b) -> a.add(b)).flatMapObservable(set -> obs2.filter(set::contains)).subscribe(System.out::println);" is 129.,11
akarnokd-misc,hu.akarnokd.rxjava2,NotInFirst,test,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,NotInFirst,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,NotInFirst,test,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,PagingFeedbackLoop,service,Magic Number,The method contains a magic number: 20,13
akarnokd-misc,hu.akarnokd.rxjava2,PagingFeedbackLoop,testPager,Magic Number,The method contains a magic number: 20,35
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,main,Empty catch clause,The method has an empty catch block.,13
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,main,Empty catch clause,The method has an empty catch block.,13
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,main,Magic Number,The method contains a magic number: 500,13
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,main,Magic Number,The method contains a magic number: 50,13
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,main,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,apply,Empty catch clause,The method has an empty catch block.,18
akarnokd-misc,hu.akarnokd.rxjava2,MyClass,apply,Magic Number,The method contains a magic number: 500,18
akarnokd-misc,hu.akarnokd.rxjava2,BufferDelayErrorTest,test,Magic Number,The method contains a magic number: 10,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferDelayErrorTest,test,Magic Number,The method contains a magic number: 7,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferDelayErrorTest,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,GroupByOOME,test,Magic Number,The method contains a magic number: 10_000,10
akarnokd-misc,hu.akarnokd.rxjava2,GroupByOOME,test,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.rxjava2,GroupByOOME,test,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.rxjava2,GroupByOOME,test,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava2,GroupByOOME,test,Magic Number,The method contains a magic number: 100_000,10
akarnokd-misc,hu.akarnokd.rxjava2,GroupByOOME,onNext,Magic Number,The method contains a magic number: 100_000,30
akarnokd-misc,hu.akarnokd.rxjava2,MergeAmbTest,testMergeOperator,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastLeak,main,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastLeak,main,Magic Number,The method contains a magic number: 10000,10
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastLeak,main,Magic Number,The method contains a magic number: 1000000,10
akarnokd-misc,hu.akarnokd.rxjava2,DelayBetween,test,Long Statement,The length of the statement "Flowable.fromArray(ids).zipWith(Flowable.interval(0`5`TimeUnit.SECONDS).onBackpressureBuffer()`(id`time) -> id).flatMapMaybe(( String id) -> getId(id)`false`1).blockingSubscribe(( String v) -> {" is 194.,16
akarnokd-misc,hu.akarnokd.rxjava2,DelayBetween,test,Magic Number,The method contains a magic number: 5,16
akarnokd-misc,hu.akarnokd.rxjava2,WindowBoundaryIssue,test,Long Statement,The length of the statement "Flowable<Flowable<String>> boundary=restProcessor.window(delay`TimeUnit.MILLISECONDS`scheduler`count`true).mergeWith(flush);" is 124.,13
akarnokd-misc,hu.akarnokd.rxjava2,WindowBoundaryIssue,test,Long Statement,The length of the statement "restProcessor.window(tempBoundary).concatMapSingle(Flowable::toList).filter(it -> !it.isEmpty()).subscribe(strings -> System.out.println("emit REST call >>> " + strings));" is 171.,13
akarnokd-misc,hu.akarnokd.rxjava2,WindowBoundaryIssue,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,WindowBoundaryIssue,test,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,ReplayOOM,test,Magic Number,The method contains a magic number: 5000,11
akarnokd-misc,hu.akarnokd.rxjava2,ReplayOOM,test,Magic Number,The method contains a magic number: 1024,11
akarnokd-misc,hu.akarnokd.rxjava2,ReplayOOM,test,Magic Number,The method contains a magic number: 1024,11
akarnokd-misc,hu.akarnokd.rxjava2,ReplayOOM,test,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastTest,main,Magic Number,The method contains a magic number: 10000,14
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastTest,test,Long Statement,The length of the statement "Flowable<Integer> fa=Flowable.<Integer>generate(emitter -> emitter.onNext(1)).doOnSubscribe(v -> System.out.println("Sub A " + tag)).observeOn(Schedulers.computation()).throttleLast(1`TimeUnit.SECONDS`Schedulers.single()).doOnNext(v -> System.out.println("a: " + v + " "+ tag));" is 278.,23
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastTest,test,Long Statement,The length of the statement "Flowable<Integer> fb=Flowable.<Integer>generate(emitter -> emitter.onNext(2)).doOnSubscribe(v -> System.out.println("Sub B " + tag)).observeOn(Schedulers.computation()).throttleLast(1`TimeUnit.SECONDS`Schedulers.single()).doOnNext(v -> System.out.println("b: " + v + " "+ tag));" is 278.,23
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastTest,test,Magic Number,The method contains a magic number: 2,23
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,simulateHeavyWork,Magic Number,The method contains a magic number: 2000,11
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,deferObservable,Long Statement,The length of the statement "Disposable disposable=Observable.defer(() -> Observable.just(simulateHeavyWork())).subscribeOn(Schedulers.io()).subscribe(System.out::println`throwable -> System.out.println(throwable.getMessage()));" is 199.,16
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,deferObservable,Magic Number,The method contains a magic number: 1000,16
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,deferObservable,Magic Number,The method contains a magic number: 5000,16
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,deferFlowable,Long Statement,The length of the statement "Disposable disposable=Flowable.defer(() -> Flowable.just(simulateHeavyWork())).subscribeOn(Schedulers.io()).subscribe(System.out::println`throwable -> System.out.println(throwable.getMessage()));" is 195.,27
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,deferFlowable,Magic Number,The method contains a magic number: 1000,27
akarnokd-misc,hu.akarnokd.rxjava2,LazyUndeliverable,deferFlowable,Magic Number,The method contains a magic number: 5000,27
akarnokd-misc,hu.akarnokd.rxjava2,WindowInterrupted,test,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,WindowInterrupted,test,Magic Number,The method contains a magic number: 1500,11
akarnokd-misc,hu.akarnokd.rxjava2,SquareSequenceTest,test,Magic Number,The method contains a magic number: 15,23
akarnokd-misc,hu.akarnokd.rxjava2,SquareSequenceTest,test,Magic Number,The method contains a magic number: 30,23
akarnokd-misc,hu.akarnokd.rxjava2,SquareSequenceTest,singleJoint,Magic Number,The method contains a magic number: 1024,55
akarnokd-misc,hu.akarnokd.rxjava2,SquareSequenceTest,singleJoint,Magic Number,The method contains a magic number: 1024,55
akarnokd-misc,hu.akarnokd.rxjava2,SquareSequenceTest,singleJoint,Magic Number,The method contains a magic number: 2,55
akarnokd-misc,hu.akarnokd.rxjava2,MatchIndex,test,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,MatchIndex,test,Magic Number,The method contains a magic number: 5,10
akarnokd-misc,hu.akarnokd.rxjava2,MatchIndex,test,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,MatchIndex,test,Magic Number,The method contains a magic number: 12,10
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 11,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 12,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 20,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 21,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 22,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 11,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 12,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 20,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 21,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchFlatMapTest,main,Magic Number,The method contains a magic number: 22,14
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Long Statement,The length of the statement "Observable.range(1`5).compose(switchIfFewer(Observable.range(1`8)`10)).compose(switchIfFewer(Observable.range(1`15)`10)).test().assertResult(1`2`3`4`5`6`7`8`9`10`11`12`13`14`15);" is 178.,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 8,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 15,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 6,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 7,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 8,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 9,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 11,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 12,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 13,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 14,9
akarnokd-misc,hu.akarnokd.rxjava2,SwitchIfFewerTest,test,Magic Number,The method contains a magic number: 15,9
akarnokd-misc,hu.akarnokd.rxjava2,ShareRace,test,Magic Number,The method contains a magic number: 10_000,13
akarnokd-misc,hu.akarnokd.rxjava2,ShareRace,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,ShareRace,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Long Statement,The length of the statement "Flowable.fromArray(100`110`120`130`150`250`260`400).flatMap(v -> Flowable.timer(v`TimeUnit.MILLISECONDS`tsch).map(w -> v)).compose(throttleFirstSample(100`TimeUnit.MILLISECONDS`tsch)).subscribe(v -> System.out.println(v + " at T=" + tsch.now(TimeUnit.MILLISECONDS)));" is 267.,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 100,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 110,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 120,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 130,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 150,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 250,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 260,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 400,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,test,Magic Number,The method contains a magic number: 100,16
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Long Statement,The length of the statement "Observable.fromArray(100`110`120`130`150`250`260`400).flatMap(v -> Observable.timer(v`TimeUnit.MILLISECONDS`tsch).map(w -> v)).compose(throttleFirstSampleObservable(100`TimeUnit.MILLISECONDS`tsch)).subscribe(v -> System.out.println(v + " at T=" + tsch.now(TimeUnit.MILLISECONDS)));" is 281.,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 100,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 110,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 120,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 130,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 150,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 250,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 260,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 400,56
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleSampleTest,testObservable,Magic Number,The method contains a magic number: 100,56
akarnokd-misc,hu.akarnokd.rxjava2,GroupSumExample,test,Magic Number,The method contains a magic number: 20,9
akarnokd-misc,hu.akarnokd.rxjava2,GroupSumExample,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,RxJavaFuseTest,main,Long Statement,The length of the statement "Flowable.range(0`10).observeOn(RxJavaPlugins.createSingleScheduler(r -> new Thread(r`"producer"))`false`1).doOnNext(aLong -> {" is 126.,9
akarnokd-misc,hu.akarnokd.rxjava2,RxJavaFuseTest,main,Long Statement,The length of the statement ").hide().parallel(2`1).runOn(Schedulers.computation()`1).doOnNext(aLong -> System.out.println(aLong + " processing on " + Thread.currentThread().getName())).sequential().subscribe(sequentialSubscriber);" is 202.,9
akarnokd-misc,hu.akarnokd.rxjava2,RxJavaFuseTest,main,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,RxJavaFuseTest,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,RxJavaFuseTest,main,Magic Number,The method contains a magic number: 5000,9
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 6,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 7,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 8,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 8,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 9,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 10,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 11,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 4,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 6,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 6,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 7,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 8,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 8,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 9,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 10,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 11,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 4,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 6,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 6,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 7,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 8,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 8,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 9,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 10,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 11,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 4,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 6,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 6,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 7,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 8,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 8,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 9,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 10,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 11,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 4,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 6,51
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipSingleZero,test2,Magic Number,The method contains a magic number: 5,51
akarnokd-misc,hu.akarnokd.rxjava2,DoOnErrorInside,test,Long Statement,The length of the statement "Observable.just(1).flatMap(v -> single(v).toObservable().doOnError(w -> System.out.println("Error2 " + w))).subscribe(v -> System.out.println(v)`e -> System.out.println("Error " + e));" is 184.,11
akarnokd-misc,hu.akarnokd.rxjava2,LastZipped,test,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,LastZipped,test,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,LastZipped,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Long Statement,The length of the statement ")).subscribe(v -> System.out.println("Passed: " + v + " @ T="+ scheduler.now(TimeUnit.MILLISECONDS))`Throwable::printStackTrace`() -> System.out.println("Done " + " @ T=" + scheduler.now(TimeUnit.MILLISECONDS)));" is 212.,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 10,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 10,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 20,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 3,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 4,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 5,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 10,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 20,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 6,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 10,16
akarnokd-misc,hu.akarnokd.rxjava2,DebounceTimeDrop,test,Magic Number,The method contains a magic number: 20,16
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Long Statement,The length of the statement "Flowable.just(1`2`3).filter(s -> s > 4).zipWith(Flowable.defer(() -> Flowable.just(get1()`get2()`get3()))`(a`b) -> a + b).subscribe(System.out::println);" is 153.,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Long Statement,The length of the statement "Flowable.just(1`2`3).filter(s -> s > 4).flatMap(a -> Flowable.defer(() -> Flowable.just(fromFlatMap()))).subscribe(System.out::println);" is 136.,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Magic Number,The method contains a magic number: 2,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Magic Number,The method contains a magic number: 3,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Magic Number,The method contains a magic number: 4,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Magic Number,The method contains a magic number: 2,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Magic Number,The method contains a magic number: 3,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,main,Magic Number,The method contains a magic number: 4,5
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,get2,Magic Number,The method contains a magic number: 2,27
akarnokd-misc,hu.akarnokd.rxjava2,TestLazy,get3,Magic Number,The method contains a magic number: 3,32
akarnokd-misc,hu.akarnokd.rxjava2,ShareRetry,testIntervalMapShareRetry,Magic Number,The method contains a magic number: 250,11
akarnokd-misc,hu.akarnokd.rxjava2,ShareRetry,testIntervalMapShareRetry,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,ShareRetry,testIntervalMapShareRetry,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,ShareRetry,testIntervalMapShareRetry,Magic Number,The method contains a magic number: 5_000,11
akarnokd-misc,hu.akarnokd.rxjava2,ShareRetry,report,Long Statement,The length of the statement "return flux -> flux.doOnSubscribe(s -> System.out.println("onSubscribe " + name + " "+ s)).doOnEach(s -> System.out.println(s)).doOnCancel(() -> System.out.println("onCancel " + name));" is 185.,30
akarnokd-misc,hu.akarnokd.rxjava2,InterruptFlow2,testInterrupt,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.rxjava2,InterruptFlow2,testInterrupt,Magic Number,The method contains a magic number: 3000,11
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenTimedTest,test,Long Statement,The length of the statement "Observable.error(new IOException()).retryWhen(new RetryWhenObservable(5`1)).test().awaitTerminalEvent().assertFailure(IOException.class);" is 137.,33
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenTimedTest,test,Magic Number,The method contains a magic number: 5,33
akarnokd-misc,hu.akarnokd.rxjava2,SingleTimeout7514,test,Magic Number,The method contains a magic number: 10000000,13
akarnokd-misc,hu.akarnokd.rxjava2,SingleTimeout7514,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,MaxByTest,test,Long Statement,The length of the statement "Flowable.fromArray("a"`"bb"`"ccc"`"d"`"eee"`"ffff").reduce((last`current) -> Integer.compare(last.length()`current.length()) >= 0 ? last : current).subscribe(System.out::println);" is 179.,9
akarnokd-misc,hu.akarnokd.rxjava2,ParallelProducing,main,Long Statement,The length of the statement "maybeSource.repeat().parallel(30`1).runOn(Schedulers.io()`1).map(Object::toString).sequential(1).take(100).blockingSubscribe(v -> System.out.println(j.incrementAndGet() + " - " + v));" is 183.,9
akarnokd-misc,hu.akarnokd.rxjava2,ParallelProducing,main,Magic Number,The method contains a magic number: 30,9
akarnokd-misc,hu.akarnokd.rxjava2,ParallelProducing,main,Magic Number,The method contains a magic number: 100,9
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,test,Long Statement,The length of the statement "final TestObserver<Long> test=Single.timer(1000`TimeUnit.MILLISECONDS`Schedulers.computation()).observeOn(Schedulers.single()).doOnSuccess(new Consumer<Long>(){" is 160.,17
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,test,Magic Number,The method contains a magic number: 1000,17
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,test,Magic Number,The method contains a magic number: 1000,17
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,test,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,race,Magic Number,The method contains a magic number: 1000,47
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,race,Magic Number,The method contains a magic number: 2,47
akarnokd-misc,hu.akarnokd.rxjava2,SingleObserveOnRaceTest,race,Magic Number,The method contains a magic number: 2,47
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntil,test,Long Statement,The length of the statement "Disposable disposable=Single.timer(1000 * 2`TimeUnit.MILLISECONDS).takeUntil(publishSubject.firstOrError()).subscribe(data -> System.out.println("ted")`throwable -> System.err.println("ted" + throwable.toString()));" is 215.,13
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntil,test,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntil,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,RxWeakRef,test,Magic Number,The method contains a magic number: 123456789,11
akarnokd-misc,hu.akarnokd.rxjava2,RxWeakRef,test,Magic Number,The method contains a magic number: 200,11
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 1000,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,CacheParallel,testParallelism,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,PeriodicSchedule,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava2,PeriodicSchedule,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava2,PeriodicSchedule,test,Magic Number,The method contains a magic number: 2500,12
akarnokd-misc,hu.akarnokd.rxjava2,PeriodicSchedule,test,Magic Number,The method contains a magic number: 2500,12
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Long Statement,The length of the statement "Observable<Integer> INTEGERS=Observable.fromArray(10`20`200`250`300`550`600`650`700`1200).flatMap(v -> Observable.timer(v`TimeUnit.MILLISECONDS).map(w -> counter.incrementAndGet()));" is 182.,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Long Statement,The length of the statement "INTEGERS.publish(o -> o.buffer(Observable.defer(() -> o.debounce(debounceTime.get()`TimeUnit.MILLISECONDS)).take(1).repeatWhen(v -> v.zipWith(mayRepeat`(a`b) -> b)))).map(list -> {" is 180.,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 10,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 20,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 200,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 250,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 300,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 550,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 600,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 650,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 700,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 1200,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,AdaptiveDebounce,test,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,ConcatEagerDebounceTest,test,Long Statement,The length of the statement "Observable.concatArrayEagerDelayError(Observable.just(1).delay(100`TimeUnit.MILLISECONDS)`Observable.<Integer>error(new IOException()).delay(200`TimeUnit.MILLISECONDS`true)).onErrorResumeNext((Function<Throwable`Observable<Integer>>)(error -> Observable.<Integer>error(error).delay(500`TimeUnit.MILLISECONDS`true))).doOnEach(System.out::println).debounce(400`TimeUnit.MILLISECONDS).blockingSubscribe(System.out::println`Throwable::printStackTrace);" is 448.,13
akarnokd-misc,hu.akarnokd.rxjava2,ConcatEagerDebounceTest,test,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,ConcatEagerDebounceTest,test,Magic Number,The method contains a magic number: 200,13
akarnokd-misc,hu.akarnokd.rxjava2,ConcatEagerDebounceTest,test,Magic Number,The method contains a magic number: 500,13
akarnokd-misc,hu.akarnokd.rxjava2,ConcatEagerDebounceTest,test,Magic Number,The method contains a magic number: 400,13
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Long Statement,The length of the statement "Flux.<Object>concat(Flux.just("#").delayElements(Duration.ofMillis(20))`Flux.range(1`10)`Flux.range(11`5).delayElements(Duration.ofMillis(15))).subscribeWith(new TestSubscriber<>()).awaitDone(5`TimeUnit.SECONDS).assertResult("#"`1`2`3`4`5`6`7`8`9`10`11`12`13`14`15);" is 266.,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Long Statement,The length of the statement "Flux.concat(Flux.just("#").delayElements(Duration.ofMillis(20))`Flux.range(1`10)`Flux.range(11`5).delayElements(Duration.ofMillis(15))).windowTimeout(10`Duration.ofMillis(1)).subscribe(flx -> flx.subscribe(System.out::println));" is 228.,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 20,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 11,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 15,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 6,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 7,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 8,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 9,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 11,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 12,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 13,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 14,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 15,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 20,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 11,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 15,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,UnicastSingleTest,main,Magic Number,The method contains a magic number: 5000,11
akarnokd-misc,hu.akarnokd.rxjava2,CombineLatestError,test,Long Statement,The length of the statement "final int result=Observable.combineLatestDelayError(Arrays.asList(Observable.just(41).concatWith(Observable.error(new Exception("Failure")))`Observable.just(1).delay(1`TimeUnit.SECONDS))`ints -> {" is 196.,12
akarnokd-misc,hu.akarnokd.rxjava2,CombineLatestError,test,Magic Number,The method contains a magic number: 41,12
akarnokd-misc,hu.akarnokd.rxjava2,CombineLatestError,test,Magic Number,The method contains a magic number: 42,12
akarnokd-misc,hu.akarnokd.rxjava2,FlowableIfNonEmptyComposeTest,simple,Magic Number,The method contains a magic number: 10,19
akarnokd-misc,hu.akarnokd.rxjava2,FlowableIfNonEmptyComposeTest,simple2,Long Statement,The length of the statement "Mono<Integer> source=Flux.range(1`5).publish(f -> f.take(1`true).concatMap(first -> transform.apply(f.startWith(first)))).ignoreElements();" is 139.,30
akarnokd-misc,hu.akarnokd.rxjava2,FlowableIfNonEmptyComposeTest,simple2,Magic Number,The method contains a magic number: 5,30
akarnokd-misc,hu.akarnokd.rxjava2,FlowableIfNonEmptyComposeTest,simpleDedicated,Magic Number,The method contains a magic number: 10,56
akarnokd-misc,hu.akarnokd.rxjava2,FlowableIfNonEmptyComposeTest,simpleRx,Magic Number,The method contains a magic number: 10,77
akarnokd-misc,hu.akarnokd.rxjava2,LatestSuccessTest,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,LatestSuccessTest,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,LatestSuccessTest,latestSuccess,Long Statement,The length of the statement "return Observable.fromArray(sources).concatMap(source -> source.doOnSuccess(last::lazySet).toObservable().onErrorResumeNext(Observable.empty())).ignoreElements().andThen(Single.fromCallable(() -> {" is 197.,20
akarnokd-misc,hu.akarnokd.rxjava2,VehicleToFetch,test,Long Statement,The length of the statement "vehicleToFetch.doOnNext(e -> System.out.println("Got: " + e)).delay(2`TimeUnit.SECONDS).window(10`TimeUnit.SECONDS`5`true).observeOn(Schedulers.io()).subscribe(w -> w.toList().subscribe(ws -> {" is 193.,13
akarnokd-misc,hu.akarnokd.rxjava2,VehicleToFetch,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,VehicleToFetch,test,Magic Number,The method contains a magic number: 10,13
akarnokd-misc,hu.akarnokd.rxjava2,VehicleToFetch,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,VehicleToFetch,test,Magic Number,The method contains a magic number: 600000,13
akarnokd-misc,hu.akarnokd.rxjava2,FromIterableFlatMap,test,Magic Number,The method contains a magic number: 2L,22
akarnokd-misc,hu.akarnokd.rxjava2,FromIterableFlatMap,test,Magic Number,The method contains a magic number: 3L,22
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutExample,test,Long Statement,The length of the statement "source.timeout(1`TimeUnit.SECONDS).subscribe(item -> System.out.println("onNext: " + item)`error -> System.out.println("onError: " + error)`() -> System.out.println("onComplete will not be printed!"));" is 201.,11
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutExample,test,Magic Number,The method contains a magic number: 800,11
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutExample,test,Magic Number,The method contains a magic number: 400,11
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutExample,test,Magic Number,The method contains a magic number: 1200,11
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,test,Magic Number,The method contains a magic number: 4,14
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,test,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,subscribe,Magic Number,The method contains a magic number: 2,17
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,subscribe,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,subscribe,Magic Number,The method contains a magic number: 4,17
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,apply,Magic Number,The method contains a magic number: 3,27
akarnokd-misc,hu.akarnokd.rxjava2,CreateFlatFlat,apply,Magic Number,The method contains a magic number: 3,27
akarnokd-misc,hu.akarnokd.rxjava2,SortZip,testRx,Long Statement,The length of the statement "Flowable.range(1`i).map(v -> j - v).sorted().zipWith(Flowable.range(1`Integer.MAX_VALUE)`(a`b) -> Tuples.of(a`b)).toList().map(list -> list.size()).test().assertResult(i);" is 171.,13
akarnokd-misc,hu.akarnokd.rxjava2,SortZip,testRx,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava2,SortZip,testReactor,Long Statement,The length of the statement "int k=Flux.range(1`i).map(v -> j - v).sort().zipWith(Flux.range(1`Integer.MAX_VALUE)`(a`b) -> Tuples.of(a`b)).collectList().map(list -> list.size()).block();" is 157.,27
akarnokd-misc,hu.akarnokd.rxjava2,SortZip,testReactor,Magic Number,The method contains a magic number: 1000,27
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapFatal,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,FlatMapFatal,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Long Statement,The length of the statement "Observable.just(10.0`10.1`10.15`10.162`11.0).distinctUntilChanged((prev`curr) -> Math.abs(prev - curr) < 0.09).subscribe(System.out::println);" is 142.,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Magic Number,The method contains a magic number: 10.0,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Magic Number,The method contains a magic number: 10.1,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Magic Number,The method contains a magic number: 10.15,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Magic Number,The method contains a magic number: 10.162,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Magic Number,The method contains a magic number: 11.0,9
akarnokd-misc,hu.akarnokd.rxjava2,DistinctUntilChangedNumericDeltaTest,test,Magic Number,The method contains a magic number: 0.09,9
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Long Statement,The length of the statement "subject.compose(debounceOnly(v -> v.startsWith("A")`100`TimeUnit.MILLISECONDS`sch)).subscribe(System.out::println`Throwable::printStackTrace`() -> System.out.println("Done"));" is 175.,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 50,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 50,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,DebounceRailTest,test,Magic Number,The method contains a magic number: 100,14
akarnokd-misc,hu.akarnokd.rxjava2,PublishFuncExample,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,PublishFuncExample,test,Magic Number,The method contains a magic number: 10000,13
akarnokd-misc,hu.akarnokd.rxjava2,ListGrouping,group,Complex Method,Cyclomatic complexity of the method is 9,23
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Long Statement,The length of the statement "connectableFlux.publishOn(parallel()).log().map(v -> v * 10).publishOn(single()).log().subscribeOn(boundedElastic()).subscribe(v -> {" is 133.,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 5000,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 3,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 4,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 5,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 10,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTest,Magic Number,The method contains a magic number: 100,16
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Long Statement,The length of the statement "connectableFlux.observeOn(Schedulers.computation()).doOnEach(System.out::println).map(v -> v * 10).observeOn(Schedulers.single()).doOnEach(System.out::println).subscribeOn(Schedulers.io()).subscribe(v -> {" is 205.,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 5000,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 3,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 4,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 5,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 10,41
akarnokd-misc,hu.akarnokd.rxjava2,ConnectConnect,schedulerTestRx,Magic Number,The method contains a magic number: 100,41
akarnokd-misc,hu.akarnokd.rxjava2,RightThread,main,Long Statement,The length of the statement "Flowable.generate(RightThread::infiniteGenerator).subscribeOn(genSched`true).observeOn(mapSched`false).concatMapMaybe(RightThread::mapping).subscribeOn(mapSched`true).blockingForEach(RightThread::terminal);" is 206.,17
akarnokd-misc,hu.akarnokd.rxjava2,BufferExactDisposeTest,test,Long Statement,The length of the statement "Flowable.range(1`5).doOnCancel(() -> new Exception().printStackTrace()).takeUntil(v -> v == 4).buffer(5`TimeUnit.SECONDS).blockingLast();" is 137.,11
akarnokd-misc,hu.akarnokd.rxjava2,BufferExactDisposeTest,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,BufferExactDisposeTest,test,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.rxjava2,BufferExactDisposeTest,test,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava2,FileReaderTest,fileReader,Long Statement,The length of the statement "Flowable.<Iterator<String>>fromCallable(() -> Files.lines(Paths.get("files/ospd.txt")).iterator()).flatMapIterable(v -> () -> v).subscribeOn(Schedulers.io()`false).observeOn(Schedulers.io()).doOnNext(v -> System.out.println(Thread.currentThread().getName() + " xxx")).subscribe(System.out::println);" is 299.,15
akarnokd-misc,hu.akarnokd.rxjava2,FileReaderTest,fileReader,Magic Number,The method contains a magic number: 10000,15
akarnokd-misc,hu.akarnokd.rxjava2,FileReaderTest,fileReader2,Long Statement,The length of the statement "`BackpressureStrategy.BUFFER).observeOn(Schedulers.io()`false`8).subscribeOn(Schedulers.io()`false).doOnNext(v -> System.out.println(Thread.currentThread().getName() + " xxx")).subscribe(System.out::println);" is 208.,28
akarnokd-misc,hu.akarnokd.rxjava2,FileReaderTest,fileReader2,Magic Number,The method contains a magic number: 30,28
akarnokd-misc,hu.akarnokd.rxjava2,FileReaderTest,fileReader2,Magic Number,The method contains a magic number: 8,28
akarnokd-misc,hu.akarnokd.rxjava2,FileReaderTest,fileReader2,Magic Number,The method contains a magic number: 10000,28
akarnokd-misc,hu.akarnokd.rxjava2,ZipInfinite,test,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.rxjava2,ZipInfinite,test,Magic Number,The method contains a magic number: 3,10
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTimeout,test,Magic Number,The method contains a magic number: 5,10
akarnokd-misc,hu.akarnokd.rxjava2,SampleTest,test,Magic Number,The method contains a magic number: 50,11
akarnokd-misc,hu.akarnokd.rxjava2,SampleTest,test,Magic Number,The method contains a magic number: 20,11
akarnokd-misc,hu.akarnokd.rxjava2,SampleTest,test,Magic Number,The method contains a magic number: 20,11
akarnokd-misc,hu.akarnokd.rxjava2,SampleTest,test,Magic Number,The method contains a magic number: 200,11
akarnokd-misc,hu.akarnokd.rxjava2,SampleTest,test,Magic Number,The method contains a magic number: 5000,11
akarnokd-misc,hu.akarnokd.rxjava2,DoOnSubscribe2,testFoo,Long Statement,The length of the statement ").subscribeOn(Schedulers.newThread()).doOnSubscribe(s -> printThread("A")).doOnSubscribe(s -> printThread("B")).subscribeOn(Schedulers.newThread()).doOnSubscribe(s -> printThread("C")).subscribeOn(Schedulers.newThread()).doOnSubscribe(s -> printThread("D")).blockingSubscribe();" is 278.,14
akarnokd-misc,hu.akarnokd.rxjava2,DoOnSubscribe2,testFoo,Long Statement,The length of the statement ").subscribeOn(Schedulers.newThread()).doOnSubscribe(a -> printThread("A")).doOnSubscribe(a -> printThread("B")).subscribeOn(Schedulers.newThread()).doOnSubscribe(a -> printThread("C")).subscribeOn(Schedulers.newThread()).doOnSubscribe(a -> printThread("D")).andThen(Completable.fromAction(() -> printThread("E"))).andThen(Completable.fromAction(() -> printThread("F")).subscribeOn(Schedulers.newThread())).blockingAwait();" is 422.,14
akarnokd-misc,hu.akarnokd.rxjava2,DoOnSubscribe2,testFoo,Magic Number,The method contains a magic number: 10_000,14
akarnokd-misc,hu.akarnokd.rxjava2,ConcatAnomalyTest,test,Long Statement,The length of the statement "Flowable.concat(Flowable.just(1`2).concatMap(v -> Flowable.just(3`4)).subscribeOn(Schedulers.single()).observeOn(Schedulers.io()).doOnNext(v -> System.out.println("[1]: " + v))`Single.just("yup").subscribeOn(Schedulers.single()).doOnSuccess(o -> System.out.println("[2] called: " + o)).toFlowable()).observeOn(Schedulers.computation()).subscribe(v -> System.out.println("[3]: " + v)`Throwable::printStackTrace`() -> System.out.println("Done"));" is 444.,10
akarnokd-misc,hu.akarnokd.rxjava2,ConcatAnomalyTest,test,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.rxjava2,ConcatAnomalyTest,test,Magic Number,The method contains a magic number: 3,10
akarnokd-misc,hu.akarnokd.rxjava2,ConcatAnomalyTest,test,Magic Number,The method contains a magic number: 4,10
akarnokd-misc,hu.akarnokd.rxjava2,ConcatAnomalyTest,test,Magic Number,The method contains a magic number: 1000,10
akarnokd-misc,hu.akarnokd.rxjava2,Loading,main,Long Statement,The length of the statement "loadingQueue.toFlowable(BackpressureStrategy.LATEST).delay(0`TimeUnit.MILLISECONDS`Schedulers.single()).map(discarded -> {" is 122.,13
akarnokd-misc,hu.akarnokd.rxjava2,Loading,main,Magic Number,The method contains a magic number: 2000,13
akarnokd-misc,hu.akarnokd.rxjava2,Loading,main,Magic Number,The method contains a magic number: 10000,13
akarnokd-misc,hu.akarnokd.rxjava2,AndThenTest,test,Long Statement,The length of the statement "getFromLocal().switchIfEmpty(getFromNetwork().flatMapCompletable(v -> saveFoo(v)).andThen(getFromLocal())).doOnSuccess(e -> System.out.println("Success: " + e)).test().awaitDone(5`TimeUnit.SECONDS).assertResult(10);" is 215.,13
akarnokd-misc,hu.akarnokd.rxjava2,AndThenTest,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,AndThenTest,test,Magic Number,The method contains a magic number: 10,13
akarnokd-misc,hu.akarnokd.rxjava2,AndThenTest,getFromNetwork,Magic Number,The method contains a magic number: 10,32
akarnokd-misc,hu.akarnokd.rxjava2,AndThenTest,getFromNetwork,Magic Number,The method contains a magic number: 100,32
akarnokd-misc,hu.akarnokd.rxjava2,ItemTestSO,itemTest,Long Statement,The length of the statement "Observable.zip(Observable.interval(1`TimeUnit.SECONDS)`Observable.range(1`10).map(v -> new ItemTest(v))`(a`b) -> b`false`1).concatWith(Observable.<ItemTest>empty().doOnSubscribe(s -> System.out.println("<empty>")).delay(10`TimeUnit.SECONDS)).blockingSubscribe(System.out::println);" is 281.,22
akarnokd-misc,hu.akarnokd.rxjava2,ItemTestSO,itemTest,Magic Number,The method contains a magic number: 10,22
akarnokd-misc,hu.akarnokd.rxjava2,ItemTestSO,itemTest,Magic Number,The method contains a magic number: 10,22
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test,Magic Number,The method contains a magic number: 10,15
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test,Magic Number,The method contains a magic number: 2000,15
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,subscribe,Magic Number,The method contains a magic number: 2,18
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,subscribe,Magic Number,The method contains a magic number: 3,18
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,apply,Magic Number,The method contains a magic number: 3,25
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,apply,Magic Number,The method contains a magic number: 10,25
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test2,Magic Number,The method contains a magic number: 2,47
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test2,Magic Number,The method contains a magic number: 3,47
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test2,Magic Number,The method contains a magic number: 3,47
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,test2,Magic Number,The method contains a magic number: 2000,47
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,subscribe,Magic Number,The method contains a magic number: 2,50
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,subscribe,Magic Number,The method contains a magic number: 3,50
akarnokd-misc,hu.akarnokd.rxjava2,ConcatRange,apply,Magic Number,The method contains a magic number: 3,58
akarnokd-misc,hu.akarnokd.rxjava2,DropBlocking,testCreateBackpressureDrop,Magic Number,The method contains a magic number: 3,31
akarnokd-misc,hu.akarnokd.rxjava2,DropBlocking,testCreateBackpressureDrop,Magic Number,The method contains a magic number: 4,31
akarnokd-misc,hu.akarnokd.rxjava2,DropBlocking,testCreateBackpressureDrop,Magic Number,The method contains a magic number: 3,31
akarnokd-misc,hu.akarnokd.rxjava2,DropBlocking,testCreateBackpressureDrop,Magic Number,The method contains a magic number: 4,31
akarnokd-misc,hu.akarnokd.rxjava2,DropBlocking,subscribe,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.rxjava2,DropBlocking,subscribe,Magic Number,The method contains a magic number: 4,36
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test4,Magic Number,The method contains a magic number: 5L,16
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test4,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test4,Magic Number,The method contains a magic number: 10L,16
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test4,Magic Number,The method contains a magic number: 5L,16
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test4,Magic Number,The method contains a magic number: 10L,16
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test5,Magic Number,The method contains a magic number: 5L,50
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test5,Magic Number,The method contains a magic number: 2,50
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test5,Magic Number,The method contains a magic number: 10L,50
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test5,Magic Number,The method contains a magic number: 5L,50
akarnokd-misc,hu.akarnokd.rxjava2,TimeoutCancelv2Test,test5,Magic Number,The method contains a magic number: 10L,50
akarnokd-misc,hu.akarnokd.rxjava2,RxJava2Test,main,Magic Number,The method contains a magic number: 300,10
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 3,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 4,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,GenerateExampleTest,test,Magic Number,The method contains a magic number: 6,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Long Statement,The length of the statement "Observable.range(1`100000).buffer(10).concatMapEager(value -> Observable.just(value).subscribeOn(Schedulers.io()).doOnNext(it -> Thread.sleep(ThreadLocalRandom.current().nextLong(10`100)))`3`4).blockingSubscribe(it -> System.out.println("Received : " + it));" is 258.,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Magic Number,The method contains a magic number: 100000,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Magic Number,The method contains a magic number: 100,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Magic Number,The method contains a magic number: 3,12
akarnokd-misc,hu.akarnokd.rxjava2,ObservableConcatEagerTest,test,Magic Number,The method contains a magic number: 4,12
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenDelay,test,Long Statement,The length of the statement "call.retryWhen(throwableObservable -> throwableObservable.delay(1`TimeUnit.SECONDS)).subscribe(integer -> System.out.println(integer)`throwable -> System.out.println(throwable.getMessage()));" is 191.,11
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenDelay,test,Magic Number,The method contains a magic number: 10000,11
akarnokd-misc,hu.akarnokd.rxjava2,SomeClicks,test,Long Statement,The length of the statement "`BackpressureStrategy.LATEST).subscribeOn(Schedulers.newThread()`false).observeOn(blocking).subscribe(new Consumer<Integer>(){" is 126.,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeClicks,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava2,SomeClicks,subscribe,Magic Number,The method contains a magic number: 1000,18
akarnokd-misc,hu.akarnokd.rxjava2,ReplayRefCountSubjectTest,test,Long Statement,The length of the statement ").doOnSubscribe(s -> System.out.println("OnSubscribe")).doOnDispose(() -> System.out.println("OnDispose")).replay(1).refCount().doOnNext(e -> {" is 143.,15
akarnokd-misc,hu.akarnokd.rxjava2,ReplayRefCountSubjectTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,ReplayRefCountSubjectTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,ReplayRefCountSubjectTest,test2,Long Statement,The length of the statement ").doOnSubscribe(s -> System.out.println("OnSubscribe")).doOnCancel(() -> System.out.println("OnDispose")).replay(1).refCount().doOnNext(e -> {" is 142.,41
akarnokd-misc,hu.akarnokd.rxjava2,ReplayRefCountSubjectTest,test2,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.rxjava2,ReplayRefCountSubjectTest,test2,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.rxjava2,Amb2Test,test,Long Statement,The length of the statement "Observable<Object> obs1=Observable.<Object>just("obs 1 event").doOnSubscribe(s -> System.out.println("obs1 sub")).doOnDispose(() -> System.out.println("obs1 unsub"));" is 166.,8
akarnokd-misc,hu.akarnokd.rxjava2,Amb2Test,test,Long Statement,The length of the statement "Observable<Object> obs2=Observable.<Object>just("obs 2 event").doOnSubscribe(s -> System.out.println("obs2 sub")).doOnDispose(() -> System.out.println("obs2 unsub"));" is 166.,8
akarnokd-misc,hu.akarnokd.rxjava2,Amb2Test,test,Magic Number,The method contains a magic number: 500,8
akarnokd-misc,hu.akarnokd.rxjava2,FromCallableConcatMapTest,test,Long Statement,The length of the statement "Observable.fromCallable(() -> Thread.currentThread()).concatMap(empty -> Observable.just(empty)).subscribeOn(Schedulers.io()).observeOn(bs).doFinally(() -> bs.shutdown()).subscribe(System.out::println);" is 202.,11
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Long Statement,The length of the statement "new SomeAsyncApiBridge<Integer>(consumer -> r.next(consumer)).test().awaitDone(500`TimeUnit.SECONDS).assertResult(1`2`3`4`5`6`7`8`9`10);" is 136.,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 10,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 500,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 4,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 6,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 7,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 8,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 9,37
akarnokd-misc,hu.akarnokd.rxjava2,SomeAsyncApiBridgeTest,simple,Magic Number,The method contains a magic number: 10,37
akarnokd-misc,hu.akarnokd.rxjava2,RxLosers,test,Magic Number,The method contains a magic number: 3000,13
akarnokd-misc,hu.akarnokd.rxjava2,RxLosers,slowOperation,Magic Number,The method contains a magic number: 1000,40
akarnokd-misc,hu.akarnokd.rxjava2,SwitchMapRace,test,Magic Number,The method contains a magic number: 10_000,20
akarnokd-misc,hu.akarnokd.rxjava2,SwitchMapRace,test,Magic Number,The method contains a magic number: 1000,20
akarnokd-misc,hu.akarnokd.rxjava2,SwitchMapRace,createFlowable,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastSO,test,Long Statement,The length of the statement "TestObserver<Object> to=Observable.error(new RuntimeException()).onErrorReturnItem(0).startWith(-1).throttleLast(50`TimeUnit.MILLISECONDS`ts).test();" is 149.,13
akarnokd-misc,hu.akarnokd.rxjava2,ThrottleLastSO,test,Magic Number,The method contains a magic number: 50,13
akarnokd-misc,hu.akarnokd.rxjava2,BlockingSubscribeOrdering,test,Long Statement,The length of the statement "Flowable.just(1`2).concatWith(Flowable.error(new Exception("whoops"))).blockingSubscribe(v -> System.out.println("received: " + v)`e -> {" is 137.,9
akarnokd-misc,hu.akarnokd.rxjava2,BlockingSubscribeOrdering,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenManyTypeTest,test1,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenManyTypeTest,test2,Magic Number,The method contains a magic number: 3,30
akarnokd-misc,hu.akarnokd.rxjava2,RetryWhenManyTypeTest,test3,Magic Number,The method contains a magic number: 3,47
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Long Statement,The length of the statement "Observable.fromArray(1`1`1`2`2`2`3`3`1`1`5`5).compose(bufferUntilChanged(v -> v)).test().assertResult(Arrays.asList(1`1`1)`Arrays.asList(2`2`2)`Arrays.asList(3`3)`Arrays.asList(1`1)`Arrays.asList(5`5));" is 202.,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,BufferUntilChanged,test,Magic Number,The method contains a magic number: 5,13
akarnokd-misc,hu.akarnokd.rxjava2,ReentrantSubject,testReactive,Long Statement,The length of the statement "publisher.buffer(100`TimeUnit.MILLISECONDS`1).doOnNext(System.out::println).doOnNext(ReentrantSubject::fakeError).subscribe();" is 126.,13
akarnokd-misc,hu.akarnokd.rxjava2,ReentrantSubject,testReactive,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,ReentrantSubject,testReactive,Magic Number,The method contains a magic number: 100000,13
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,observable,Magic Number,The method contains a magic number: 2,7
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,observable,Magic Number,The method contains a magic number: 3,7
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,flowable,Magic Number,The method contains a magic number: 2,17
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,flowable,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,main,Long Statement,The length of the statement "observable(1).window(observable(2).filter(v -> v == 1).doOnDispose(() -> System.out.println("Dispose 2"))`w -> observable(3).filter(v -> v == 1).doOnDispose(() -> System.out.println("Dispose 3"))).doOnNext(System.out::println).subscribe().dispose();" is 249.,27
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,main,Long Statement,The length of the statement "flowable(1).window(flowable(2).filter(v -> v == 1).doOnCancel(() -> System.out.println("Dispose 2"))`w -> flowable(3).filter(v -> v == 1).doOnCancel(() -> System.out.println("Dispose 3"))).doOnNext(System.out::println).subscribe().dispose();" is 241.,27
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,main,Magic Number,The method contains a magic number: 2,27
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,main,Magic Number,The method contains a magic number: 3,27
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,main,Magic Number,The method contains a magic number: 2,27
akarnokd-misc,hu.akarnokd.rxjava2,WindowDisposed,main,Magic Number,The method contains a magic number: 3,27
akarnokd-misc,hu.akarnokd.rxjava2,GroupByFilterTest,test,Long Statement,The length of the statement "Observable.range(1`100).groupBy(n -> n % 3).toMap(g -> g.getKey()).flatMap(m -> m.get(0)).subscribe(System.out::println);" is 121.,8
akarnokd-misc,hu.akarnokd.rxjava2,GroupByFilterTest,test,Magic Number,The method contains a magic number: 100,8
akarnokd-misc,hu.akarnokd.rxjava2,GroupByFilterTest,test,Magic Number,The method contains a magic number: 3,8
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntilTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntilTest,test,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntilTest,test,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntilTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntilTest,test,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,TakeUntilTest,test,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,ExceptionAfterDispose,test,Magic Number,The method contains a magic number: 2000,14
akarnokd-misc,hu.akarnokd.rxjava2,ExceptionAfterDispose,test,Magic Number,The method contains a magic number: 500,14
akarnokd-misc,hu.akarnokd.rxjava2,ExceptionAfterDispose,test,Magic Number,The method contains a magic number: 3000,14
akarnokd-misc,hu.akarnokd.rxjava2,ExceptionAfterDispose,call,Magic Number,The method contains a magic number: 2000,17
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTake5,test,Long Statement,The length of the statement "Observable.range(1`50).groupBy(v -> v / 10).flatMap(group -> group.publish(p -> p.take(5).mergeWith(p.ignoreElements()))).subscribe(System.out::println);" is 153.,9
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTake5,test,Magic Number,The method contains a magic number: 50,9
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTake5,test,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTake5,test,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test1,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test1,Magic Number,The method contains a magic number: 10,11
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test1,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test2,Magic Number,The method contains a magic number: 20,20
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test2,Magic Number,The method contains a magic number: 2,20
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test3,Magic Number,The method contains a magic number: 20,31
akarnokd-misc,hu.akarnokd.rxjava2,GroupByTaken,test3,Magic Number,The method contains a magic number: 2,31
akarnokd-misc,hu.akarnokd.rxjava2,SingleTimeout7515Rx3,test,Magic Number,The method contains a magic number: 10000000,14
akarnokd-misc,hu.akarnokd.rxjava2,SingleTimeout7515Rx3,test,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Long Statement,The length of the statement "Observable<String> combineSource=stringsEmitter.doOnSubscribe(d -> System.out.println("Connected!")).replay(1).refCount().doOnSubscribe(d -> System.out.println("Subscribed!")).doOnDispose(() -> System.out.println("Disposed!"));" is 227.,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Long Statement,The length of the statement "combineSource.subscribe((string) -> System.out.println("A2:" + string)`Throwable::printStackTrace`() -> System.out.println("Done A2"));" is 135.,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Long Statement,The length of the statement "combineSource.subscribe((string) -> System.out.println("B2:" + string)`Throwable::printStackTrace`() -> System.out.println("Done B2"));" is 135.,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Magic Number,The method contains a magic number: 100,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Magic Number,The method contains a magic number: 100,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackedRefcount,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Long Statement,The length of the statement "TestObserver<List<Integer>> testObserver=mainSubject.flatMap(observables -> Observable.combineLatest(observables`this::castObjectsToInts)).test();" is 146.,15
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.rxjava2,BehaviorSubjectCombineLatestTest,test,Magic Number,The method contains a magic number: 4,15
akarnokd-misc,hu.akarnokd.rxjava2,ConcurrentSingleCache,test,Magic Number,The method contains a magic number: 2000,34
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 7,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 8,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 12,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 14,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,InsertHeader,main,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Complex Method,Cyclomatic complexity of the method is 8,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Long Statement,The length of the statement "source.doOnSubscribe(s -> names.get(0).add(Thread.currentThread().getName())).subscribeOn(Schedulers.io()).unsubscribeOn(Schedulers.io()).doFinally(() -> names.get(1).add(Thread.currentThread().getName())).doOnSubscribe(s -> names.get(2).add(Thread.currentThread().getName())).subscribeOn(main).unsubscribeOn(main).observeOn(main).doFinally(() -> names.get(3).add(Thread.currentThread().getName())).subscribe().dispose();" is 421.,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 100,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 4,13
akarnokd-misc,hu.akarnokd.rxjava2,WhichThread,main,Magic Number,The method contains a magic number: 4,13
akarnokd-misc,hu.akarnokd.rxjava2,TrampolineInfinite,main,Long Statement,The length of the statement "Observable.intervalRange(0L`10L`1`1`TimeUnit.SECONDS`Schedulers.trampoline()).subscribe(aLong -> System.out.println(aLong + "; " + Thread.currentThread().getName())`Throwable::printStackTrace`() -> System.out.println("complete1."));" is 232.,10
akarnokd-misc,hu.akarnokd.rxjava2,TrampolineInfinite,main,Long Statement,The length of the statement "Observable.interval(1`TimeUnit.SECONDS`Schedulers.trampoline()).take(10).subscribe(aLong -> System.out.println(aLong + "; " + Thread.currentThread().getName())`Throwable::printStackTrace`() -> System.out.println("complete2."));" is 227.,10
akarnokd-misc,hu.akarnokd.rxjava2,TrampolineInfinite,main,Magic Number,The method contains a magic number: 10L,10
akarnokd-misc,hu.akarnokd.rxjava2,TrampolineInfinite,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,TrampolineInfinite,main,Magic Number,The method contains a magic number: 30000,10
akarnokd-misc,hu.akarnokd.rxjava2,ReduceWhile,main,Magic Number,The method contains a magic number: 10,8
akarnokd-misc,hu.akarnokd.rxjava2,ReduceWhile,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Long Statement,The length of the statement "return Arrays.asList(Arrays.asList(new Person("Sanna1"`59`"EGY")`new Person(null`59`"EGY")`new Person("Sanna3"`59`null))`Arrays.asList(new Person("Mohamed1"`59`"EGY")`new Person(null`59`"EGY"))`Arrays.asList(new Person("Ahmed1"`44`"QTR")`new Person("Ahmed2"`44`"QTR")`new Person(null`null`"QTR"))`Arrays.asList(new Person("Fatma"`29`"KSA"))`Arrays.asList(new Person("Lobna"`24`"EGY")));" is 386.,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 59,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 59,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 59,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 59,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 59,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 44,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 44,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 29,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,getPersons,Magic Number,The method contains a magic number: 24,52
akarnokd-misc,hu.akarnokd.rxjava2,PersonSeq,main,Long Statement,The length of the statement "observables.observeOn(Schedulers.io()).concatMap(list -> Observable.fromIterable(list).map(p -> p.getName().map(r -> r.toUpperCase()).orElse("NULL_VALUE"))).observeOn(Schedulers.io()).blockingSubscribe(new Observer<String>(){" is 225.,60
akarnokd-misc,hu.akarnokd.rxjava2,Counts,main,Long Statement,The length of the statement "Flowable.fromArray(Flowable.class.getMethods()).filter(m -> m.getDeclaringClass() == Flowable.class).map(m -> m.getName()).distinct().count().subscribe(System.out::println);" is 173.,10
akarnokd-misc,hu.akarnokd.rxjava2,Counts,main,Long Statement,The length of the statement "Flowable.fromArray(Flux.class.getMethods()).filter(m -> m.getDeclaringClass() == Flux.class).map(m -> m.getName()).distinct().count().subscribe(System.out::println);" is 165.,10
akarnokd-misc,hu.akarnokd.rxjava2,NoWebMain,main,Long Statement,The length of the statement "Flowable<LongCouple> combined=Flowable.combineLatest(Arrays.asList(flowA.onBackpressureLatest()`flowB.onBackpressureLatest())`a -> new LongCouple((Long)a[0]`(Long)a[1])`1).onBackpressureLatest().observeOn(Schedulers.newThread()`false`1);" is 237.,26
akarnokd-misc,hu.akarnokd.rxjava2,NoWebMain,main,Magic Number,The method contains a magic number: 100,26
akarnokd-misc,hu.akarnokd.rxjava2,NoWebMain,main,Magic Number,The method contains a magic number: 200,26
akarnokd-misc,hu.akarnokd.rxjava2,NoWebMain,main,Magic Number,The method contains a magic number: 1000,26
akarnokd-misc,hu.akarnokd.rxjava2,NoWebMain,main,Magic Number,The method contains a magic number: 10000000,26
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipAsync,main,Long Statement,The length of the statement "share.buffer(numPrevious`1).filter(b -> b.size() < numPrevious || b.get(numPrevious - 1) >= 3).map(v -> v.get(0)).subscribe(System.out::println);" is 145.,9
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipAsync,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipAsync,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,BufferSkipAsync,main,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava2,GroupByParallel,main,Long Statement,The length of the statement "Observable.range(1`10).groupBy(i -> assigner.incrementAndGet() % coreCount).flatMap(grp -> grp.observeOn(Schedulers.io()).map(i2 -> intenseCalculation(i2))).subscribe(i -> System.out.println("Received " + i + " "+ LocalTime.now()+ " on thread "+ Thread.currentThread().getName()));" is 281.,12
akarnokd-misc,hu.akarnokd.rxjava2,GroupByParallel,main,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava2,GroupByParallel,main,Magic Number,The method contains a magic number: 20000,12
akarnokd-misc,hu.akarnokd.rxjava2,GroupByParallel,intenseCalculation,Magic Number,The method contains a magic number: 3000,29
akarnokd-misc,hu.akarnokd.rxjava2,ShiftByCount,main,Long Statement,The length of the statement "Flowable.range(1`7).flatMap(v -> Flowable.timer(v * 200`TimeUnit.MILLISECONDS).map(w -> v)).doOnNext(v -> System.out.println(v)).publish(f -> f.skip(3).zipWith(f`(a`b) -> b).mergeWith(f.takeLast(3))).blockingSubscribe(v -> System.out.println("<-- " + v));" is 255.,9
akarnokd-misc,hu.akarnokd.rxjava2,ShiftByCount,main,Magic Number,The method contains a magic number: 7,9
akarnokd-misc,hu.akarnokd.rxjava2,ShiftByCount,main,Magic Number,The method contains a magic number: 200,9
akarnokd-misc,hu.akarnokd.rxjava2,ShiftByCount,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,ShiftByCount,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,Coincidence,main,Long Statement,The length of the statement "Flowable.interval(100`TimeUnit.MILLISECONDS`sch).onBackpressureBuffer().compose(coincide(Flowable.interval(300`TimeUnit.MILLISECONDS`sch)`sch)).take(7).subscribe(v -> System.out.printf("%d - %d%n"`sch.now(TimeUnit.MILLISECONDS)`v));" is 232.,10
akarnokd-misc,hu.akarnokd.rxjava2,Coincidence,main,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava2,Coincidence,main,Magic Number,The method contains a magic number: 300,10
akarnokd-misc,hu.akarnokd.rxjava2,Coincidence,main,Magic Number,The method contains a magic number: 7,10
akarnokd-misc,hu.akarnokd.rxjava2,Coincidence,main,Magic Number,The method contains a magic number: 1001,10
akarnokd-misc,hu.akarnokd.rxjava2,SubscribeOnFalse,main,Long Statement,The length of the statement "Flowable.range(1`10).subscribeOn(Schedulers.io()`true).doOnNext(v -> System.out.println(Thread.currentThread().getName())).observeOn(Schedulers.single()`false`1).blockingSubscribe();" is 182.,8
akarnokd-misc,hu.akarnokd.rxjava2,SubscribeOnFalse,main,Magic Number,The method contains a magic number: 10,8
akarnokd-misc,hu.akarnokd.rxjava2,RefCountGrace,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,RefCountGrace,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,RefCountGrace,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.rxjava2,FirstAndSample,main,Long Statement,The length of the statement "Flowable.range(0`delay.length).flatMap(v -> Flowable.timer(delay[v]`TimeUnit.MILLISECONDS).map(u -> (v + 1) + " @ " + delay[v]+ " ms")).compose(firstAndSample(200`TimeUnit.MILLISECONDS)).blockingSubscribe(System.out::println);" is 226.,10
akarnokd-misc,hu.akarnokd.rxjava2,FirstAndSample,main,Magic Number,The method contains a magic number: 200,10
akarnokd-misc,hu.akarnokd.rxjava2,FirstAndSample,firstAndSample,Long Statement,The length of the statement "return g.take(1).concatWith(g.sample(delay`unit`s`true).timeout(delay + 1`unit`s)).retry(e -> e instanceof TimeoutException);" is 125.,20
akarnokd-misc,hu.akarnokd.rxjava2,CacheAndBlock,main,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,main,Long Statement,The length of the statement "b.append("at ").append(fn).append(".m(").append(file.getFileName()).append(":").append(countLine(s`kdx)).append(")\r\n");" is 121.,11
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,main,Magic Number,The method contains a magic number: 6,11
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,main,Magic Number,The method contains a magic number: 6,11
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,main,Magic Number,The method contains a magic number: 7,11
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,visitFile,Long Statement,The length of the statement "b.append("at ").append(fn).append(".m(").append(file.getFileName()).append(":").append(countLine(s`kdx)).append(")\r\n");" is 121.,14
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,visitFile,Magic Number,The method contains a magic number: 6,14
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,visitFile,Magic Number,The method contains a magic number: 6,14
akarnokd-misc,hu.akarnokd.rxjava2,FindGT,visitFile,Magic Number,The method contains a magic number: 7,14
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Complex Method,Cyclomatic complexity of the method is 12,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Long Statement,The length of the statement "String s=new String(Files.readAllBytes(Paths.get("..\\RxJava\\src\\main\\java\\io\\reactivex\\Flowable.java"))`StandardCharsets.UTF_8);" is 135.,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava2,JavadocScrape,main,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava2,TrackSubscriber,main,Long Statement,The length of the statement "Observable<Integer> observable=Observable.range(1`5).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()).map(integer -> {" is 134.,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackSubscriber,main,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackSubscriber,main,Magic Number,The method contains a magic number: 3,12
akarnokd-misc,hu.akarnokd.rxjava2,TrackSubscriber,main,Magic Number,The method contains a magic number: 6000L,12
akarnokd-misc,hu.akarnokd.rxjava2,MyRxJava2DirWatcher,main,Long Statement,The length of the statement "System.out.println("1>>Event kind:" + event.kind() + ". File affected: "+ event.context()+ ". "+ Thread.currentThread().getName());" is 131.,46
akarnokd-misc,hu.akarnokd.rxjava2,MyRxJava2DirWatcher,main,Long Statement,The length of the statement "System.out.println("2>>Event kind:" + event.kind() + ". File affected: "+ event.context()+ ". "+ Thread.currentThread().getName());" is 131.,46
akarnokd-misc,hu.akarnokd.rxjava2,MyRxJava2DirWatcher,main,Magic Number,The method contains a magic number: 100000,46
akarnokd-misc,hu.akarnokd.rxjava2,Cartesian,main,Long Statement,The length of the statement "cartesian(Observable.just(Observable.just(0`1)`Observable.just(2`3)`Observable.just(4`5))).subscribe(v -> System.out.println(Arrays.toString(v)));" is 146.,34
akarnokd-misc,hu.akarnokd.rxjava2,Cartesian,main,Magic Number,The method contains a magic number: 2,34
akarnokd-misc,hu.akarnokd.rxjava2,Cartesian,main,Magic Number,The method contains a magic number: 3,34
akarnokd-misc,hu.akarnokd.rxjava2,Cartesian,main,Magic Number,The method contains a magic number: 4,34
akarnokd-misc,hu.akarnokd.rxjava2,Cartesian,main,Magic Number,The method contains a magic number: 5,34
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,setup,Magic Number,The method contains a magic number: 1000,38
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,setup,Magic Number,The method contains a magic number: 1000,38
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,unbounded1k,Magic Number,The method contains a magic number: 1000,55
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,unbounded1m,Magic Number,The method contains a magic number: 1000000,62
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,bounded1k,Magic Number,The method contains a magic number: 1000,75
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,bounded1m,Magic Number,The method contains a magic number: 1000000,82
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,subject1k,Magic Number,The method contains a magic number: 1000,96
akarnokd-misc,hu.akarnokd.rxjava2,PublishProcessorPerf,subject1m,Magic Number,The method contains a magic number: 1000000,103
akarnokd-misc,hu.akarnokd.reactivestreams.tck,EmptyPublisherTckTest,EmptyPublisherTckTest,Magic Number,The method contains a magic number: 50,12
akarnokd-misc,hu.akarnokd.reactive,SubmissionPublisherTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.reactive.nio,BasicNIOTest,readFile,Magic Number,The method contains a magic number: 128,14
akarnokd-misc,hu.akarnokd.reactive.nio,BasicNIOTest,selector,Magic Number,The method contains a magic number: 32,40
akarnokd-misc,hu.akarnokd.reactive.nio,BasicNIOTest,selector,Magic Number,The method contains a magic number: 8080,40
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,setup,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,setup,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,setup,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,setup,Magic Number,The method contains a magic number: 24554,37
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,setup,Magic Number,The method contains a magic number: 24554,37
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,serverLoop,Empty catch clause,The method has an empty catch block.,67
akarnokd-misc,hu.akarnokd.reactive.nio,NIONetworkNotification,send,Magic Number,The method contains a magic number: 1_000_000,90
akarnokd-misc,hu.akarnokd.iterables,SingletonIteratorTest,contract,Empty catch clause,The method has an empty catch block.,11
akarnokd-misc,hu.akarnokd.iterables,LambdaSingletonPerf,main,Magic Number,The method contains a magic number: 500_000_000,131
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,emptyRange,Magic Number,The method contains a magic number: 5,22
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,justRange,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 10,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 5,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 2,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 3,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 4,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 5,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 6,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 7,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 8,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 9,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,smallRange,Magic Number,The method contains a magic number: 10,49
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,longRange,Magic Number,The method contains a magic number: 100,63
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,longRange,Magic Number,The method contains a magic number: 1_000_000,63
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,longRange,Magic Number,The method contains a magic number: 10,63
akarnokd-misc,hu.akarnokd.asyncenum,AxRangeTest,longRange,Magic Number,The method contains a magic number: 5,63
akarnokd-misc,hu.akarnokd.asyncenum,StageCancel,main,Magic Number,The method contains a magic number: 1000,7
akarnokd-misc,hu.akarnokd.asyncenum,TestAsyncConsumer,TestAsyncConsumer,Magic Number,The method contains a magic number: 16,36
akarnokd-misc,hu.akarnokd.asyncenum,PerfAsyncConsumer,PerfAsyncConsumer,Magic Number,The method contains a magic number: 16,42
akarnokd-misc,hu.akarnokd.asyncenum,PerfAsyncConsumer,consume,Magic Number,The method contains a magic number: 1000,50
akarnokd-misc,hu.akarnokd.asyncenum,PerfSyncConsumer,PerfSyncConsumer,Magic Number,The method contains a magic number: 16,40
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (25 * armorRemaining)+ ": "+ damageFormula(baseDamage`25 * armorRemaining) * speedCoeff);" is 127.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (50 * armorRemaining)+ ": "+ damageFormula(baseDamage`50 * armorRemaining) * speedCoeff);" is 127.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (75 * armorRemaining)+ ": "+ damageFormula(baseDamage`75 * armorRemaining) * speedCoeff);" is 127.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (100 * armorRemaining)+ ": "+ damageFormula(baseDamage`100 * armorRemaining) * speedCoeff);" is 129.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (150 * armorRemaining)+ ": "+ damageFormula(baseDamage`150 * armorRemaining) * speedCoeff);" is 129.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (200 * armorRemaining)+ ": "+ damageFormula(baseDamage`200 * armorRemaining) * speedCoeff);" is 129.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Long Statement,The length of the statement "System.out.println(baseDamage + "-" + (300 * armorRemaining)+ ": "+ damageFormula(baseDamage`300 * armorRemaining) * speedCoeff);" is 129.,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 103,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.36,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.5,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 25,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 25,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 50,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 50,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 75,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 75,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 100,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 100,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 150,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 150,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 200,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 200,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 300,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 300,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 48000,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 300,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.36,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.36,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.5,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 1.3,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.36,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.5,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 1.3,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 125,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 120,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.36,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,main,Magic Number,The method contains a magic number: 0.4,5
akarnokd-misc,hu.akarnokd.utils,BallisticResist,damageFormula,Magic Number,The method contains a magic number: 0.99,108
akarnokd-misc,hu.akarnokd.utils,BallisticResist,damageFormula,Magic Number,The method contains a magic number: 0.5,108
akarnokd-misc,hu.akarnokd.utils,BallisticResist,damageFormula,Magic Number,The method contains a magic number: 0.366,108
akarnokd-misc,hu.akarnokd.rxjava,ZipRandomTest,randomTime,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava,ZipRandomTest,test,Long Statement,The length of the statement "Observable<String> delay=Observable.just("").switchMap(dummy -> Observable.timer(randomTime()`TimeUnit.SECONDS)).map(a -> String.valueOf(a)).repeat();" is 150.,15
akarnokd-misc,hu.akarnokd.rxjava,ZipRandomTest,test,Magic Number,The method contains a magic number: 10000,15
akarnokd-misc,hu.akarnokd.rxjava,Ternary,main,Long Statement,The length of the statement "Observable.<String>just("A1"`"A2").flatMap(s -> (s.contains("1")) ? Observable.<String>just(s) : Observable.<String>empty()).flatMap(s -> {" is 139.,9
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,main,Magic Number,The method contains a magic number: 3,13
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,main,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,main,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,main,Magic Number,The method contains a magic number: 10000,13
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,call,Magic Number,The method contains a magic number: 1000,26
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,call,Magic Number,The method contains a magic number: 1000,26
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,call,Magic Number,The method contains a magic number: 1000,29
akarnokd-misc,hu.akarnokd.rxjava,RetryWhenCompile,call,Magic Number,The method contains a magic number: 1000,29
akarnokd-misc,hu.akarnokd.rxjava,ZipRxJava,main,Long Statement,The length of the statement "Observable<CartPlanResponse> o1=Observable.<CartPlanResponse>create(sub -> sub.onNext(createPlanResponse(z))).subscribeOn(Schedulers.io());" is 139.,8
akarnokd-misc,hu.akarnokd.rxjava,ZipRxJava,main,Long Statement,The length of the statement "Observable<CartFeatureResponse> o2=Observable.<CartFeatureResponse>create(sub -> sub.onNext(createFeatureResponse(z))).subscribeOn(Schedulers.io());" is 148.,8
akarnokd-misc,hu.akarnokd.rxjava,ZipRxJava,main,Long Statement,The length of the statement "Observable<CartAccessoriesResponse> o3=Observable.<CartAccessoriesResponse>create(sub -> sub.onNext(createAccessoriesResponse(z))).subscribeOn(Schedulers.io());" is 160.,8
akarnokd-misc,hu.akarnokd.rxjava,ZipRxJava,main,Long Statement,The length of the statement ").subscribe(r1 -> System.out.println("&&&&&&&&&&&" + Thread.currentThread().getName() + "*******"+ r1.getPlanResponse().getPlanId()+ " "+ r1.getFeatureResponse().getFeatureId()+ " "+ r1.getAccesoriesResponse().getAccessoryId())`e1 -> System.out.println("Error"));" is 263.,8
akarnokd-misc,hu.akarnokd.rxjava,ZipRxJava,sleep,Magic Number,The method contains a magic number: 5000,57
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat1,test,Long Statement,The length of the statement ").doOnUnsubscribe(() -> System.out.println("Unsubscribed from " + integer)).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation())).doOnUnsubscribe(() -> System.out.println("Unsubscribed from parent observable"))).subscribe(() -> {" is 241.,10
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat1,test,Magic Number,The method contains a magic number: 5,10
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat1,test,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat1,test,Magic Number,The method contains a magic number: 2000,10
akarnokd-misc,hu.akarnokd.rxjava,ATest,interestingTest,Long Statement,The length of the statement "Observable.concat(memory.getItems()`disk.getItems().filter(items -> items != null && !items.isEmpty()).observeOn(uiScheduler)`cloud.getItems().filter(items -> items != null && !items.isEmpty()).subscribeOn(ioScheduler).observeOn(uiScheduler)).firstOrDefault(defaultList`items -> items != null && !items.isEmpty()).subscribe(subscriber);" is 336.,45
akarnokd-misc,hu.akarnokd.rxjava,DoOnSubscribe1,testFoo,Long Statement,The length of the statement ").subscribeOn(Schedulers.newThread()).doOnSubscribe(() -> printThread("A")).doOnSubscribe(() -> printThread("B")).subscribeOn(Schedulers.newThread()).doOnSubscribe(() -> printThread("C")).subscribeOn(Schedulers.newThread()).doOnSubscribe(() -> printThread("D")).toBlocking().subscribe();" is 287.,14
akarnokd-misc,hu.akarnokd.rxjava,DoOnSubscribe1,testFoo,Long Statement,The length of the statement ").subscribeOn(Schedulers.newThread()).doOnSubscribe(a -> printThread("A")).doOnSubscribe(a -> printThread("B")).subscribeOn(Schedulers.newThread()).doOnSubscribe(a -> printThread("C")).subscribeOn(Schedulers.newThread()).doOnSubscribe(a -> printThread("D")).andThen(Completable.fromAction(() -> printThread("E"))).andThen(Completable.fromAction(() -> printThread("F")).subscribeOn(Schedulers.newThread())).await();" is 414.,14
akarnokd-misc,hu.akarnokd.rxjava,DoOnSubscribe1,testFoo,Magic Number,The method contains a magic number: 10_000,14
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test1x,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test1x,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2x,Long Statement,The length of the statement "io.reactivex.Observable<Integer> source=io.reactivex.Observable.just(3).replay(2`TimeUnit.SECONDS`scheduler).autoConnect();" is 123.,26
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2x,Magic Number,The method contains a magic number: 3,26
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2x,Magic Number,The method contains a magic number: 2,26
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2x,Magic Number,The method contains a magic number: 3,26
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2x,Magic Number,The method contains a magic number: 3,26
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2x,Magic Number,The method contains a magic number: 3,26
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2xf,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2xf,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2xf,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2xf,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.rxjava,ReplayTimeout,test2xf,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.rxjava,StackOverflowDepth,rxjava,Magic Number,The method contains a magic number: 100000,11
akarnokd-misc,hu.akarnokd.rxjava,StackOverflowDepth,rxjava2,Magic Number,The method contains a magic number: 100000,27
akarnokd-misc,hu.akarnokd.rxjava,StackOverflowDepth,reactor3,Magic Number,The method contains a magic number: 100000,44
akarnokd-misc,hu.akarnokd.rxjava,CompleteDos,test,Long Statement,The length of the statement "Completable.fromAction(() -> System.out.println("A1")).doOnSubscribe(s -> System.out.println("---> A1 doOnSubscribe")).doOnCompleted(() -> System.out.println("---> A1 doOnCompleted")).doOnUnsubscribe(() -> System.out.println("---> A1 doOnUnsubscribe")).andThen(Completable.fromAction(() -> System.out.println("B1"))).doOnSubscribe(s -> System.out.println("---> B1 doOnSubscribe")).doOnCompleted(() -> System.out.println("---> B1 doOnCompleted")).doOnUnsubscribe(() -> System.out.println("---> B1 doOnUnsubscribe")).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()).subscribe();" is 592.,10
akarnokd-misc,hu.akarnokd.rxjava,CompleteDos,test,Magic Number,The method contains a magic number: 10000,10
akarnokd-misc,hu.akarnokd.rxjava,FromCallCancel,testLoop,Magic Number,The method contains a magic number: 100000,14
akarnokd-misc,hu.akarnokd.rxjava,FromCallCancel,test,Magic Number,The method contains a magic number: 1000,21
akarnokd-misc,hu.akarnokd.rxjava,FromCallCancel,test,Magic Number,The method contains a magic number: 1000,21
akarnokd-misc,hu.akarnokd.rxjava,AmbTest,test,Long Statement,The length of the statement "Observable<Object> obs1=Observable.<Object>just("obs 1 event").doOnSubscribe(() -> System.out.println("obs1 sub")).doOnUnsubscribe(() -> System.out.println("obs1 unsub"));" is 171.,9
akarnokd-misc,hu.akarnokd.rxjava,AmbTest,test,Long Statement,The length of the statement "Observable<Object> obs2=Observable.<Object>just("obs 2 event").doOnSubscribe(() -> System.out.println("obs2 sub")).doOnUnsubscribe(() -> System.out.println("obs2 unsub"));" is 171.,9
akarnokd-misc,hu.akarnokd.rxjava,AmbTest,test,Magic Number,The method contains a magic number: 500,9
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,mutableStateWithStringConcat,Long Statement,The length of the statement "boolean await=Observable.range(0`1_000_000).reduce(""`(s`integer) -> s + integer).test().awaitTerminalEvent(5_000`TimeUnit.MILLISECONDS);" is 137.,15
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,mutableStateWithStringConcat,Magic Number,The method contains a magic number: 1_000_000,15
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,mutableStateWithStringConcat,Magic Number,The method contains a magic number: 5_000,15
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,mutableStateWithStringConcat2,Magic Number,The method contains a magic number: 1_000_000,26
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,howLong,Long Statement,The length of the statement "Observable.range(0`i).map(v -> v != 0 ? (long)Math.log10(v) + 1 : 1L).compose(v -> hu.akarnokd.rxjava2.math.MathObservable.sumLong(v)).subscribe(System.out::println);" is 166.,41
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,howLong,Magic Number,The method contains a magic number: 1_000_000,41
akarnokd-misc,hu.akarnokd.rxjava,ReduceAnonymous,howLong,Magic Number,The method contains a magic number: 10,41
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest,main,Long Statement,The length of the statement "names.groupBy(s -> s.charAt(0)).flatMap(grp -> grp.publish(o -> o.first().concatWith(o.ignoreElements()))).subscribe(s -> System.out.println(s));" is 145.,8
akarnokd-misc,hu.akarnokd.rxjava,DelayingScheduler,main,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder3,loop,Magic Number,The method contains a magic number: 1000,15
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder3,test,Magic Number,The method contains a magic number: 1000,22
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder3,test,Magic Number,The method contains a magic number: 100,22
akarnokd-misc,hu.akarnokd.rxjava,ListFlatMappingTest,test,Long Statement,The length of the statement "getList().subscribeOn(Schedulers.io()).flatMapObservable(list -> Observable.from(list)).flatMap(each -> getSubdetails(each)).subscribe(new Subscriber<Boolean>(){" is 161.,20
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder,loop,Magic Number,The method contains a magic number: 1000,16
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder,test,Long Statement,The length of the statement "Observable.just(null).doOnRequest(v -> System.out.println(j)).subscribeOn(subscribeScheduler).observeOn(mapScheduler).map(new Func1<Object`Integer>(){" is 150.,23
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder,test,Magic Number,The method contains a magic number: 1000,23
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder,test,Magic Number,The method contains a magic number: 100,23
akarnokd-misc,hu.akarnokd.rxjava,PublishSubjectRaceTest,racy,Magic Number,The method contains a magic number: 1000,16
akarnokd-misc,hu.akarnokd.rxjava,PublishSubjectRaceTest,racy,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.rxjava,PublishSubjectRaceTest,nonRacy,Magic Number,The method contains a magic number: 1000,51
akarnokd-misc,hu.akarnokd.rxjava,PublishSubjectRaceTest,nonRacy,Magic Number,The method contains a magic number: 2,51
akarnokd-misc,hu.akarnokd.rxjava,RecurseWithDefer,test,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.rxjava,RecurseWithDefer,test2,Magic Number,The method contains a magic number: 1000,24
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder2,loop,Magic Number,The method contains a magic number: 1000,15
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder2,test,Magic Number,The method contains a magic number: 1000,22
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder2,test,Magic Number,The method contains a magic number: 100,22
akarnokd-misc,hu.akarnokd.rxjava,Replay1RetentionTest,test,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava,Replay1RetentionTest,test,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava,Replay1RetentionTest,test2,Magic Number,The method contains a magic number: 2,30
akarnokd-misc,hu.akarnokd.rxjava,Replay1RetentionTest,test2,Magic Number,The method contains a magic number: 3,30
akarnokd-misc,hu.akarnokd.rxjava,FromToSingle,test,Long Statement,The length of the statement ").toSingle().subscribeOn(Schedulers.computation()).toObservable().toSingle().onErrorResumeNext(v -> Single.just(1)).subscribe(System.out::println`Throwable::printStackTrace);" is 174.,12
akarnokd-misc,hu.akarnokd.rxjava,FromToSingle,test,Magic Number,The method contains a magic number: 1000,12
akarnokd-misc,hu.akarnokd.rxjava,FromToSingle,plainSubscribeCheck,Long Statement,The length of the statement ").subscribeOn(Schedulers.immediate()).toObservable().onErrorResumeNext(throwable -> Observable.empty()).subscribe(new TestSubscriber<>());" is 138.,25
akarnokd-misc,hu.akarnokd.rxjava,FromToSingle,plainSubscribeCheck,Long Statement,The length of the statement ").subscribeOn(Schedulers.immediate()).onErrorResumeNext(throwable -> Observable.empty()).subscribe(new TestSubscriber<>());" is 123.,25
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testExpectedReplayBehavior,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testExpectedReplayBehavior,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testExpectedReplayBehavior,Magic Number,The method contains a magic number: 6,11
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testFlakyReplayBehavior,Magic Number,The method contains a magic number: 2,31
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testFlakyReplayBehavior,Magic Number,The method contains a magic number: 3,31
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testFlakyReplayBehavior,Magic Number,The method contains a magic number: 6,31
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testFlakyReplayBehavior2,Magic Number,The method contains a magic number: 2,50
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testFlakyReplayBehavior2,Magic Number,The method contains a magic number: 3,50
akarnokd-misc,hu.akarnokd.rxjava,ScanReplay,testFlakyReplayBehavior2,Magic Number,The method contains a magic number: 6,50
akarnokd-misc,hu.akarnokd.rxjava,ConcatReplayTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava,ConcatReplayTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava,ConcatReplayTest,test,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder5,loop,Magic Number,The method contains a magic number: 1000,16
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder5,test,Magic Number,The method contains a magic number: 1000,23
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder5,test,Magic Number,The method contains a magic number: 100,23
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 100,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 4,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 200,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 6,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 300,9
akarnokd-misc,hu.akarnokd.rxjava,PublishBufferZip,normal,Magic Number,The method contains a magic number: 400,9
akarnokd-misc,hu.akarnokd.rxjava,GroupConcat,main,Long Statement,The length of the statement "Observable<GroupedObservable<String`AppInfo>> o=Observable.from(list).groupBy(v -> v.date.format(DateTimeFormatter.ofPattern("MM/yyyy")));" is 138.,19
akarnokd-misc,hu.akarnokd.rxjava,GroupConcat,main,Magic Number,The method contains a magic number: 10,19
akarnokd-misc,hu.akarnokd.rxjava,GroupConcat,main,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.rxjava,GroupConcat,main,Magic Number,The method contains a magic number: 2016,19
akarnokd-misc,hu.akarnokd.rxjava,GroupConcat,main,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.rxjava,SingleUnsubscribe,test,Long Statement,The length of the statement "Single.fromCallable(() -> 42).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()).doOnSubscribe(() -> System.out.println("subscribed")).doOnUnsubscribe(() -> System.out.println("unsubscribed")).subscribe(integer -> System.out.println("got result"));" is 262.,9
akarnokd-misc,hu.akarnokd.rxjava,SingleUnsubscribe,test,Magic Number,The method contains a magic number: 42,9
akarnokd-misc,hu.akarnokd.rxjava,SingleUnsubscribe,test,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat2,test,Long Statement,The length of the statement ").doOnDispose(() -> System.out.println("Unsubscribed from " + integer)).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation())).doOnCancel(() -> System.out.println("Unsubscribed from parent observable"))).subscribe(() -> {" is 232.,10
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat2,test,Magic Number,The method contains a magic number: 5,10
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat2,test,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava,CompletableConcat2,test,Magic Number,The method contains a magic number: 2000,10
akarnokd-misc,hu.akarnokd.rxjava,ObserveOnTest,completeExactRequest,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava,ObserveOnTest,completeExactRequest,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava,ObserveOnTest,completeExactRequest,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,hu.akarnokd.rxjava,InterruptFlow,testInterrupt,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.rxjava,InterruptFlow,testInterrupt,Magic Number,The method contains a magic number: 3000,11
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test2,Long Statement,The length of the statement "initialObservable.doOnUnsubscribe(() -> System.out.println("Unsubscribed")).timeout(1`TimeUnit.SECONDS`timeoutObservable).subscribe(subscriber);" is 144.,29
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test2,Magic Number,The method contains a magic number: 5L,29
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test2,Magic Number,The method contains a magic number: 1500,29
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test2,Magic Number,The method contains a magic number: 10L,29
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test2,Magic Number,The method contains a magic number: 5L,29
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test2,Magic Number,The method contains a magic number: 10L,29
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test3,Long Statement,The length of the statement "initialObservable.doOnUnsubscribe(() -> System.out.println("Unsubscribed")).timeout(1`TimeUnit.SECONDS`timeoutObservable`sch).subscribe(subscriber);" is 148.,58
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test3,Magic Number,The method contains a magic number: 5L,58
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test3,Magic Number,The method contains a magic number: 2,58
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test3,Magic Number,The method contains a magic number: 10L,58
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test3,Magic Number,The method contains a magic number: 5L,58
akarnokd-misc,hu.akarnokd.rxjava,TimeoutCancelTest,test3,Magic Number,The method contains a magic number: 10L,58
akarnokd-misc,hu.akarnokd.rxjava,BufferUntilWithPublish,main,Magic Number,The method contains a magic number: 2000,33
akarnokd-misc,hu.akarnokd.rxjava,PublishExample,main,Long Statement,The length of the statement "Observable.range(1`10).doOnSubscribe(() -> System.out.println("Subscribed")).publish(o -> Observable.zip(o.map(v -> v * 10)`o.map(v -> v * 20)`(a`b) -> a + "-" + b)).subscribe(System.out::println`Throwable::printStackTrace);" is 224.,9
akarnokd-misc,hu.akarnokd.rxjava,PublishExample,main,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava,PublishExample,main,Magic Number,The method contains a magic number: 10,9
akarnokd-misc,hu.akarnokd.rxjava,PublishExample,main,Magic Number,The method contains a magic number: 20,9
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder4,loop,Magic Number,The method contains a magic number: 1000,15
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder4,test,Long Statement,The length of the statement "Flowable.range(1`1000).hide().subscribeOn(subscribeScheduler).observeOn(mapScheduler).map(new Function<Object`Integer>(){" is 121.,22
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder4,test,Magic Number,The method contains a magic number: 1000,22
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder4,test,Magic Number,The method contains a magic number: 1000,22
akarnokd-misc,hu.akarnokd.rxjava,OutOfOrder4,test,Magic Number,The method contains a magic number: 100,22
akarnokd-misc,hu.akarnokd.rxjava,BufferStartEndTest,test,Long Statement,The length of the statement "Function<Flowable<String>`Flowable<List<String>>> f=o -> o.buffer(o.filter(v -> v.contains("Start"))`v -> Flowable.merge(o.filter(w -> w.contains("Start"))`Flowable.timer(5`TimeUnit.MINUTES`scheduler)));" is 203.,15
akarnokd-misc,hu.akarnokd.rxjava,BufferStartEndTest,test,Magic Number,The method contains a magic number: 5,15
akarnokd-misc,hu.akarnokd.rxjava,BufferStartEndTest,test,Magic Number,The method contains a magic number: 5,15
akarnokd-misc,hu.akarnokd.rxjava,ShareLatest,main,Long Statement,The length of the statement "System.out.println(Observable.interval(1`1`TimeUnit.MILLISECONDS).take(2000).share().onBackpressureLatest().subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()`16).doOnNext(System.out::println).toList().toBlocking().last().size());" is 243.,14
akarnokd-misc,hu.akarnokd.rxjava,ShareLatest,main,Magic Number,The method contains a magic number: 2000,14
akarnokd-misc,hu.akarnokd.rxjava,ShareLatest,main,Magic Number,The method contains a magic number: 16,14
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Long Statement,The length of the statement "Observable.just(100`2000`3000`6000`7000`10000).flatMap(time -> Observable.timer(time`TimeUnit.MILLISECONDS).map(v -> time)).throttleFirst(4000`TimeUnit.MILLISECONDS).toBlocking().forEach(System.out::println);" is 208.,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 2000,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 3000,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 6000,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 7000,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 10000,10
akarnokd-misc,hu.akarnokd.rxjava,ThrottleFirstExample,main,Magic Number,The method contains a magic number: 4000,10
akarnokd-misc,hu.akarnokd.rxjava,EmitterTest,main,Long Statement,The length of the statement "obs.subscribeOn(Schedulers.computation()).observeOn(Schedulers.computation()).toBlocking().subscribe(value -> System.out.println("Received " + value));" is 151.,8
akarnokd-misc,hu.akarnokd.rxjava,EmitterTest,main,Magic Number,The method contains a magic number: 1000,8
akarnokd-misc,hu.akarnokd.rxjava,EmitterTest,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.rxjava,EmitterTest,main,Magic Number,The method contains a magic number: 300L,8
akarnokd-misc,hu.akarnokd.rxjava,SingleAsync,main,Magic Number,The method contains a magic number: 2000,9
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Long Statement,The length of the statement "ps.publish(o -> o.mergeWith(o.switchMap(e -> Observable.just(1).delay(200`TimeUnit.MILLISECONDS).ignoreElements().doOnCompleted(() -> System.out.println("Timeout action: " + e))))).subscribe(System.out::println);" is 212.,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 200,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 3,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 250,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 4,10
akarnokd-misc,hu.akarnokd.rxjava,ActionInBetween,main,Magic Number,The method contains a magic number: 250,10
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Long Statement,The length of the statement "Observable.just(0`100`200`1500`1600`1800`2000`10000).flatMap(v -> Observable.timer(v`TimeUnit.MILLISECONDS).map(w -> v)).doOnNext(v -> System.out.println("T=" + v)).compose(debounceFirst(500`TimeUnit.MILLISECONDS)).toBlocking().subscribe(v -> System.out.println("Debounced: " + v));" is 282.,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 100,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 200,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 1500,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 1600,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 1800,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 2000,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 10000,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,main,Magic Number,The method contains a magic number: 500,11
akarnokd-misc,hu.akarnokd.rxjava,DebounceFirst,debounceFirst,Long Statement,The length of the statement "return f -> f.publish(g -> g.take(1).concatWith(g.switchMap(u -> Observable.timer(timeout`unit).map(w -> u)).take(1).ignoreElements()).repeatWhen(h -> h.takeUntil(g.ignoreElements())));" is 185.,20
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,main,Long Statement,The length of the statement "source.doOnRequest(i -> System.out.println("Requested " + i)).groupBy(v -> v % 5).flatMap(g -> g.observeOn(Schedulers.io()).map(GroupByTest2::calculation)`4).subscribe(i -> System.out.println("Got " + i));" is 205.,12
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,main,Magic Number,The method contains a magic number: 10000,12
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,main,Magic Number,The method contains a magic number: 5,12
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,main,Magic Number,The method contains a magic number: 4,12
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,main,Magic Number,The method contains a magic number: 100000,12
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,calculation,Magic Number,The method contains a magic number: 20,22
akarnokd-misc,hu.akarnokd.rxjava,GroupByTest2,sleep,Magic Number,The method contains a magic number: 1000,28
akarnokd-misc,hu.akarnokd.rxjava,MethodDiff,replacepackage,Long Statement,The length of the statement "return s.replace("rx.Observable"`"Rx1").replace("io.reactivex.Flowable"`"Rx2").replace("org.reactivestreams.Publisher"`"Orp");" is 126.,27
akarnokd-misc,hu.akarnokd.rxjava,MethodDiff,main,Complex Method,Cyclomatic complexity of the method is 12,33
akarnokd-misc,hu.akarnokd.rxjava,EmitterTestv2,main,Long Statement,The length of the statement "obs.subscribeOn(Schedulers.computation()).onBackpressureLatest().observeOn(Schedulers.computation()`false`64).blockingSubscribe(new Consumer<Integer>(){" is 152.,9
akarnokd-misc,hu.akarnokd.rxjava,EmitterTestv2,main,Magic Number,The method contains a magic number: 1000,9
akarnokd-misc,hu.akarnokd.rxjava,EmitterTestv2,main,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.rxjava,EmitterTestv2,main,Magic Number,The method contains a magic number: 300L,9
akarnokd-misc,hu.akarnokd.rxjava,EmitterTestv2,main,Magic Number,The method contains a magic number: 64,9
akarnokd-misc,hu.akarnokd.rxjava,TransactionSubjectPlaypen,main,Magic Number,The method contains a magic number: 120000,29
akarnokd-misc,hu.akarnokd.rxjava,TransactionSubjectPlaypen,startPeriodicTransactionRetrieval,Magic Number,The method contains a magic number: 4,51
akarnokd-misc,hu.akarnokd.rxjava,TransactionSubjectPlaypen,randomNetworkDelaySimulation,Magic Number,The method contains a magic number: 8000,90
akarnokd-misc,hu.akarnokd.rxjava,TransactionSubjectPlaypen,getTransactions,Magic Number,The method contains a magic number: 3,96
akarnokd-misc,hu.akarnokd.rxjava,ConditionalCompactedStream,main,Long Statement,The length of the statement "source.lift(new ConditionalCompactor(500`TimeUnit.SECONDS`Schedulers.computation())).subscribe(System.out::println`Throwable::printStackTrace);" is 143.,18
akarnokd-misc,hu.akarnokd.rxjava,ConditionalCompactedStream,main,Magic Number,The method contains a magic number: 500,18
akarnokd-misc,hu.akarnokd.rxjava,TrackSubscriber1,main,Long Statement,The length of the statement "Observable<Integer> observable=Observable.range(1`5).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()).map(integer -> {" is 134.,11
akarnokd-misc,hu.akarnokd.rxjava,TrackSubscriber1,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.rxjava,TrackSubscriber1,main,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.rxjava,TrackSubscriber1,main,Magic Number,The method contains a magic number: 6000L,11
akarnokd-misc,hu.akarnokd.rxjava,ScalarDeferredSubscriber,complete,Complex Conditional,The conditional expression s == NO_REQUEST_HAS_VALUE || s == HAS_REQUEST_HAS_VALUE || a.isUnsubscribed() is complex.,66
akarnokd-misc,hu.akarnokd.rxjava,ScalarDeferredSubscriber,innerRequested,Complex Conditional,The conditional expression s == HAS_REQUEST_NO_VALUE || s == HAS_REQUEST_HAS_VALUE || a.isUnsubscribed() is complex.,105
akarnokd-misc,hu.akarnokd.rxjava,ScalarDeferredSubscriber,innerRequested,Complex Method,Cyclomatic complexity of the method is 8,105
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Long Statement,The length of the statement "Observable<Integer> o2=Observable.merge(o1`Observable.empty()).subscribeOn(Schedulers.newThread()).doOnCompleted(() -> error("a"));" is 131.,8
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Long Statement,The length of the statement "Observable<Integer> o4=Observable.merge(o3`Observable.empty()).subscribeOn(Schedulers.newThread()).doOnCompleted(() -> error("b"));" is 131.,8
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Magic Number,The method contains a magic number: 3,8
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Magic Number,The method contains a magic number: 4,8
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.rxjava,Merge4691,main,Magic Number,The method contains a magic number: 6,8
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Long Statement,The length of the statement "StringObservable.decode(data`StandardCharsets.UTF_8).observeOn(Schedulers.computation()`false`1).toBlocking().subscribe(System.out::println);" is 141.,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 16,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 65,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 16,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 65,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 15,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.rxjava.strings,LinesBackpressure,decode,Magic Number,The method contains a magic number: 500,14
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,atomic,Magic Number,The method contains a magic number: 100000,20
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,atomic,Magic Number,The method contains a magic number: 128,20
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,unsafe,Magic Number,The method contains a magic number: 100000,39
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,unsafe,Magic Number,The method contains a magic number: 128,39
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,race,Complex Method,Cyclomatic complexity of the method is 9,58
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,race,Magic Number,The method contains a magic number: 2,58
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,race,Magic Number,The method contains a magic number: 2,58
akarnokd-misc,hu.akarnokd.queue,MpmcPollTest,race,Magic Number,The method contains a magic number: 5,58
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,simple,Magic Number,The method contains a magic number: 16,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,simple,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,simple,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,simple,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,parallel,Magic Number,The method contains a magic number: 16,39
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,parallel,Magic Number,The method contains a magic number: 100_000,39
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueTest,parallel,Magic Number,The method contains a magic number: 9,39
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 32,19
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 32,19
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 33,19
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 32,19
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 16,19
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 31,19
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 31,19
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 32,19
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 32,19
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 33,19
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueueTest,simpleUse,Magic Number,The method contains a magic number: 32,19
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 16,19
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 31,19
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueueTest,triggerGrowth,Magic Number,The method contains a magic number: 31,19
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueV2Test,simple,Magic Number,The method contains a magic number: 16,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueV2Test,simple,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueV2Test,simple,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueV2Test,simple,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueV2Test,parallel,Magic Number,The method contains a magic number: 16,39
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueueV2Test,parallel,Magic Number,The method contains a magic number: 100_000,39
akarnokd-misc,hu.akarnokd.queue,MpscLinkedArrayQueue,offer,Complex Method,Cyclomatic complexity of the method is 10,35
akarnokd-misc,hu.akarnokd.queue,IntQueue,peek,Magic Number,The method contains a magic number: 0x1_0000_0000L,36
akarnokd-misc,hu.akarnokd.queue,IntQueue,poll,Magic Number,The method contains a magic number: 0x1_0000_0000L,44
akarnokd-misc,hu.akarnokd.queue,ArrayQueue,main,Magic Number,The method contains a magic number: 2,46
akarnokd-misc,hu.akarnokd.queue,ArrayQueue,main,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.queue,ArrayQueue,main,Magic Number,The method contains a magic number: 4,46
akarnokd-misc,hu.akarnokd.queue,ArrayQueue,main,Magic Number,The method contains a magic number: 16,46
akarnokd-misc,hu.akarnokd.queue,ArrayQueue,main,Magic Number,The method contains a magic number: 4,46
akarnokd-misc,hu.akarnokd.queue,ArrayQueue,main,Magic Number,The method contains a magic number: 16,46
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueue,SpscLongArrayQueue,Magic Number,The method contains a magic number: 2,24
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueue,calcOffset,Magic Number,The method contains a magic number: 2,30
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueue,offer,Magic Number,The method contains a magic number: 2,34
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueue,poll,Magic Number,The method contains a magic number: 2,91
akarnokd-misc,hu.akarnokd.queue,SpscLongArrayQueue,poll,Magic Number,The method contains a magic number: 2,112
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 3,64
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 2,64
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 2,64
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueue,peek,Magic Number,The method contains a magic number: 2L,91
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueue,poll,Magic Number,The method contains a magic number: 2,113
akarnokd-misc,hu.akarnokd.queue,SpscLongLinkedArrayQueue,poll,Magic Number,The method contains a magic number: 2,113
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueueAtomic,offer,Magic Number,The method contains a magic number: 0x1_0000_0000L,59
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,SpscIntLinkedArrayQueue,Magic Number,The method contains a magic number: 4,41
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 0x1_0000_0000L,60
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 0x1_0000_0000L,60
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 0x2_0000_0000L,60
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,offer,Magic Number,The method contains a magic number: 0x1_0000_0000L,60
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,peek,Magic Number,The method contains a magic number: 0x3_0000_0000L,87
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,peek,Magic Number,The method contains a magic number: 0x2_0000_0000L,87
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,peek,Magic Number,The method contains a magic number: 0x1_0000_0000L,109
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,poll,Magic Number,The method contains a magic number: 0x1_0000_0000L,115
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,poll,Magic Number,The method contains a magic number: 0x3_0000_0000L,121
akarnokd-misc,hu.akarnokd.queue,SpscIntLinkedArrayQueue,poll,Magic Number,The method contains a magic number: 0x2_0000_0000L,121
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueuePerf,offerPollPrimitive,Magic Number,The method contains a magic number: 777,47
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueuePerf,offerPollObject,Magic Number,The method contains a magic number: 777,59
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueuePerf,offerCapacityPrimitive,Magic Number,The method contains a magic number: 777,80
akarnokd-misc,hu.akarnokd.queue,SpscIntArrayQueuePerf,offerCapacityObject,Magic Number,The method contains a magic number: 777,97
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,fromIterable,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,fromIterable,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,fromIterable,Magic Number,The method contains a magic number: 2,11
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,fromIterable,Magic Number,The method contains a magic number: 3,11
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,take,Magic Number,The method contains a magic number: 2,23
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,take,Magic Number,The method contains a magic number: 3,23
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,take,Magic Number,The method contains a magic number: 2,23
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,take,Magic Number,The method contains a magic number: 2,23
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,skip,Magic Number,The method contains a magic number: 2,30
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,skip,Magic Number,The method contains a magic number: 3,30
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,skip,Magic Number,The method contains a magic number: 2,30
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,skip,Magic Number,The method contains a magic number: 3,30
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,first,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,first,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 3,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 2,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 2,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 2,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 3,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 3,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,flatMapIterator,Magic Number,The method contains a magic number: 4,49
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,concatArray,Magic Number,The method contains a magic number: 2,56
akarnokd-misc,hu.akarnokd.enumerables,IEnumerableTest,concatArray,Magic Number,The method contains a magic number: 2,56
akarnokd-misc,hu.akarnokd.enumerables,IEnumerable,assertResult,Complex Method,Cyclomatic complexity of the method is 8,71
akarnokd-misc,hu.akarnokd.reactor,StreamRemainingTest,test,Magic Number,The method contains a magic number: 11,9
akarnokd-misc,hu.akarnokd.reactor,StreamRemainingTest,test,Magic Number,The method contains a magic number: 5,9
akarnokd-misc,hu.akarnokd.reactor,Reactor2Test,main,Magic Number,The method contains a magic number: 300,9
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test1,Empty catch clause,The method has an empty catch block.,14
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test1,Long Statement,The length of the statement ").doOnCancel(() -> System.out.println("Cancel")).timeout(Duration.ofSeconds(1L)).subscribeOn(Schedulers.boundedElastic()).onErrorResume(t -> Mono.fromCallable(() -> {" is 166.,14
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test1,Magic Number,The method contains a magic number: 10L,14
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test2,Magic Number,The method contains a magic number: 10L,36
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test3,Empty catch clause,The method has an empty catch block.,61
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test3,Long Statement,The length of the statement ").timeout(1`TimeUnit.SECONDS).subscribeOn(io.reactivex.schedulers.Schedulers.io()).onErrorResumeNext(( Throwable t) -> Mono.fromCallable(() -> {" is 144.,61
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test3,Magic Number,The method contains a magic number: 10L,61
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test4,Empty catch clause,The method has an empty catch block.,82
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test4,Magic Number,The method contains a magic number: 10L,82
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test5,Empty catch clause,The method has an empty catch block.,102
akarnokd-misc,hu.akarnokd.reactor,MonoTimeoutTest,test5,Magic Number,The method contains a magic number: 10L,102
akarnokd-misc,hu.akarnokd.reactor,FilterWhenTest,filterAllOut,Long Statement,The length of the statement "Flux.range(1`1000).doOnNext(v -> count[0]++).doOnRequest(System.out::println).filterWhen(o1 -> Mono.just(false)).flatMap(s -> Flux.just(new Object()).hide()).subscribe();" is 170.,11
akarnokd-misc,hu.akarnokd.reactor,FilterWhenTest,filterAllOut,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.reactor,FilterWhenTest,filterAllOut,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.reactor,DoOnSubscribeTest,test,Magic Number,The method contains a magic number: 100000,12
akarnokd-misc,hu.akarnokd.reactor,GroupParallel,parallelGroupComputation,Long Statement,The length of the statement "Flux.range(1`1000_000).groupBy(i -> i % 8).flatMap(g -> g).parallel().runOn(Schedulers.parallel()).sequential().subscribe(c -> {" is 128.,12
akarnokd-misc,hu.akarnokd.reactor,GroupParallel,parallelGroupComputation,Magic Number,The method contains a magic number: 1000_000,12
akarnokd-misc,hu.akarnokd.reactor,GroupParallel,parallelGroupComputation,Magic Number,The method contains a magic number: 8,12
akarnokd-misc,hu.akarnokd.reactor,GroupParallel,parallelGroupComputation,Magic Number,The method contains a magic number: 100,12
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Long Statement,The length of the statement "Flux.just(1`2`3).filter(s -> s > 4).zipWith(Flux.defer(() -> Flux.just(get1()`get2()`get3()))`(a`b) -> a + b).subscribe(System.out::println);" is 141.,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Long Statement,The length of the statement "Flux.just(1`2`3).filter(s -> s > 4).flatMap(a -> Flux.defer(() -> Flux.just(fromFlatMap()))).subscribe(System.out::println);" is 124.,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Magic Number,The method contains a magic number: 2,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Magic Number,The method contains a magic number: 3,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Magic Number,The method contains a magic number: 4,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Magic Number,The method contains a magic number: 2,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Magic Number,The method contains a magic number: 3,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,main,Magic Number,The method contains a magic number: 4,5
akarnokd-misc,hu.akarnokd.reactor,TestLazy,get2,Magic Number,The method contains a magic number: 2,27
akarnokd-misc,hu.akarnokd.reactor,TestLazy,get3,Magic Number,The method contains a magic number: 3,32
akarnokd-misc,hu.akarnokd.reactor,BufferWhenTest,test,Long Statement,The length of the statement "processor.asFlux().buffer(Duration.ofMillis(3000)`Duration.ofMillis(2000)).doOnNext(t -> System.out.println(String.format("tuple %s"`t))).subscribe();" is 150.,26
akarnokd-misc,hu.akarnokd.reactor,BufferWhenTest,test,Long Statement,The length of the statement "Flux.range(1`Integer.MAX_VALUE).delayElements(Duration.ofMillis(10)).doOnNext(i -> processor.tryEmitNext(new Wrapper(i))).doOnComplete(processor::tryEmitComplete).subscribe();" is 175.,26
akarnokd-misc,hu.akarnokd.reactor,BufferWhenTest,test,Magic Number,The method contains a magic number: 3000,26
akarnokd-misc,hu.akarnokd.reactor,BufferWhenTest,test,Magic Number,The method contains a magic number: 2000,26
akarnokd-misc,hu.akarnokd.reactor,BufferWhenTest,test,Magic Number,The method contains a magic number: 10,26
akarnokd-misc,hu.akarnokd.reactor,RxReactorInteropTest,doTest,Long Statement,The length of the statement "Observable<Integer> observable=Observable.just(1).doOnCompleted(() -> bool.set(true)).doOnUnsubscribe(() -> System.out.println("Unsubscribed!")).map(i -> i * 10);" is 162.,24
akarnokd-misc,hu.akarnokd.reactor,RxReactorInteropTest,doTest,Magic Number,The method contains a magic number: 10,24
akarnokd-misc,hu.akarnokd.reactor,RxReactorInteropTest,doTest,Magic Number,The method contains a magic number: 10,24
akarnokd-misc,hu.akarnokd.reactor,RxReactorInteropTest,doTest,Magic Number,The method contains a magic number: 100,24
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Long Statement,The length of the statement "Flux.just(1`2`3`6`7`10).flatMap(v -> Mono.delay(Duration.ofMillis(v * 1000)).doOnNext(w -> System.out.println("T=" + v)).map(w -> v)).transform(f -> delayedBufferAfterFirst(f`Duration.ofSeconds(2))).doOnNext(System.out::println).blockLast();" is 241.,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 3,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 6,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 7,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 1000,14
akarnokd-misc,hu.akarnokd.reactor,DelayedBuffer,main,Magic Number,The method contains a magic number: 2,14
akarnokd-misc,hu.akarnokd.reactor,BufferUntilTest,test,Magic Number,The method contains a magic number: 1000,14
akarnokd-misc,hu.akarnokd.reactor,BufferUntilTest,test,Magic Number,The method contains a magic number: 10,14
akarnokd-misc,hu.akarnokd.reactor,FluxMergeTest,name,Magic Number,The method contains a magic number: 1000,24
akarnokd-misc,hu.akarnokd.reactor,FluxMergeTest,name,Magic Number,The method contains a magic number: 1000,24
akarnokd-misc,hu.akarnokd.reactor,PickNextIndexed,test,Magic Number,The method contains a magic number: 8,13
akarnokd-misc,hu.akarnokd.reactor,PickNextIndexed,test,Magic Number,The method contains a magic number: 256,13
akarnokd-misc,hu.akarnokd.reactor,PickNextIndexed,test,Magic Number,The method contains a magic number: 1000,13
akarnokd-misc,hu.akarnokd.reactor,BackpressureProblem,fluxCreateDemoElasticScheduler2,Magic Number,The method contains a magic number: 1000,14
akarnokd-misc,hu.akarnokd.reactor,BackpressureProblem,fluxCreateDemoElasticScheduler,Empty catch clause,The method has an empty catch block.,33
akarnokd-misc,hu.akarnokd.reactor,BackpressureProblem,fluxCreateDemoElasticScheduler,Long Statement,The length of the statement ").onBackpressureError().subscribeOn(Schedulers.newSingle("production")).publishOn(Schedulers.boundedElastic()).subscribe(i -> {" is 127.,33
akarnokd-misc,hu.akarnokd.reactor,BackpressureProblem,fluxCreateDemoElasticScheduler,Magic Number,The method contains a magic number: 1000,33
akarnokd-misc,hu.akarnokd.reactor,BackpressureProblem,fluxCreateDemoElasticScheduler,Magic Number,The method contains a magic number: 1000,33
akarnokd-misc,hu.akarnokd.reactor,FlatMapMonoVoid,test,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,hu.akarnokd.reactor,FlatMapMonoVoid,test,Magic Number,The method contains a magic number: 1000,11
akarnokd-misc,(default package),GroupByConcatMapTest,test2,Long Statement,The length of the statement "Observable.range(1`20).groupBy(v -> v % 3).concatMap(g -> g.toList().toObservable()).toList().subscribe(System.out::println);" is 125.,10
akarnokd-misc,(default package),GroupByConcatMapTest,test2,Magic Number,The method contains a magic number: 20,10
akarnokd-misc,(default package),GroupByConcatMapTest,test2,Magic Number,The method contains a magic number: 3,10
akarnokd-misc,(default package),GroupByConcatMapTest,test1,Magic Number,The method contains a magic number: 20,19
akarnokd-misc,(default package),GroupByConcatMapTest,test1,Magic Number,The method contains a magic number: 3,19
akarnokd-misc,(default package),GroupByConcatMapTest,longTimeFunc,Long Statement,The length of the statement "return Arrays.asList(new String[]{"1"`"Foo"`"lat1-1"`"long1-1"}`new String[]{"1"`"Foo"`"lat1-2"`"long1-2"}`new String[]{"2"`"Bar"`"lat2-1"`"long2-1"}`new String[]{"1"`"Foo"`"lat1-3"`"long1-3"}`new String[]{"1"`"Foo"`"lat1-4"`"long1-4"}`new String[]{"3"`"Ping"`"lat3-1"`"long3-1"}`new String[]{"2"`"Bar"`"lat2-2"`"long2-2"}`new String[]{"1"`"Foo"`"lat1-5"`"long1-5"}`new String[]{"2"`"Bar"`"lat2-3"`"long2-3"}`new String[]{"2"`"Bar"`"lat2-4"`"long2-4"}`new String[]{"1"`"Foo"`"lat1-6"`"long1-6"}`new String[]{"1"`"Foo"`"lat1-7"`"long1-7"}`new String[]{"3"`"Ping"`"lat3-2"`"long3-2"}`new String[]{"3"`"Ping"`"lat3-3"`"long3-3"}`new String[]{"2"`"Bar"`"lat2-5"`"long2-5"}`new String[]{"3"`"Ping"`"lat3-4"`"long3-4"}`new String[]{"2"`"Bar"`"lat2-6"`"long2-6"}`new String[]{"3"`"Ping"`"lat3-5"`"long3-5"}`new String[]{"2"`"Bar"`"lat2-7"`"long2-7"}`new String[]{"2"`"Bar"`"lat2-8"`"long2-8"}`new String[]{"3"`"Ping"`"lat3-6"`"long3-6"}`new String[]{"2"`"Bar"`"lat2-9"`"long2-9"}`new String[]{"3"`"Ping"`"lat3-7"`"long3-7"}`new String[]{"2"`"Bar"`"lat2-10"`"long2-10"}`new String[]{"2"`"Bar"`"lat2-11"`"long2-11"}`new String[]{"4"`"Dev"`"lat4-1"`"long4-1"}`new String[]{"4"`"Dev"`"lat4-2"`"long4-2"}`new String[]{"4"`"Dev"`"lat4-3"`"long4-3"}`new String[]{"4"`"Dev"`"lat4-4"`"long4-4"}`new String[]{"4"`"Dev"`"lat4-5"`"long4-5"});" is 1323.,59
akarnokd-misc,(default package),GroupByConcatMapTest,so,Long Statement,The length of the statement "rx.Observable.defer(() -> rx.Observable.from(longTimeFunc())).doOnNext(strings -> sout("RX_TAG_FIRST"`Arrays.toString(strings))).groupBy(rows -> rows[0]).doOnNext(groupedObservable -> sout("RX_TAG_TWO"`groupedObservable.getKey())).concatMap(group -> group.collect(Shop::new`(shop`rows) -> {" is 290.,101
akarnokd-misc,(default package),GroupByConcatMapTest,so,Long Statement,The length of the statement ")).doOnNext(shop -> sout("RX_TAG_THREE"`String.valueOf(shop))).toList().doOnNext(shops -> sout("RX_TAG_FOUR"`String.valueOf(shops))).subscribeOn(Schedulers.io()).observeOn(Schedulers.computation()).subscribe(shops -> sout("RX_TAG_SUBSCRIBE"`String.valueOf(shops)));" is 265.,101
akarnokd-misc,(default package),GroupByConcatMapTest,so,Magic Number,The method contains a magic number: 2,101
akarnokd-misc,(default package),GroupByConcatMapTest,so,Magic Number,The method contains a magic number: 3,101
akarnokd-misc,(default package),GroupByConcatMapTest,so,Magic Number,The method contains a magic number: 1000,101
akarnokd-misc,servicetalk,PublishOnTest,test,Long Statement,The length of the statement "org.reactivestreams.Publisher<Integer> p=ReactiveStreamsAdapters.toReactiveStreamsPublisher(Publisher.from(1`2`3`4).subscribeOn(exec));" is 135.,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 2,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 3,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 4,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 100000,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 2000,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 10,12
akarnokd-misc,servicetalk,PublishOnTest,test,Magic Number,The method contains a magic number: 2000,12
akarnokd-misc,servicetalk,PublishOnOverrideTckTest,PublishOnOverrideTckTest,Magic Number,The method contains a magic number: 25,16
akarnokd-misc,servicetalk,PublishOnOverrideTckTest,after,Empty catch clause,The method has an empty catch block.,26
akarnokd-misc,servicetalk,PublishOnOverrideTckTest,after,Empty catch clause,The method has an empty catch block.,26
akarnokd-misc,servicetalk,PublishOnOverrideTckTest,createPublisher,Long Statement,The length of the statement "return ReactiveStreamsAdapters.toReactiveStreamsPublisher(io.servicetalk.concurrent.api.Publisher.from(items(elements)).publishOn(exec0).publishOn(exec));" is 154.,38
akarnokd-misc,servicetalk,PublishOnOverrideTckTest,maxElementsFromPublisher,Magic Number,The method contains a magic number: 1024,62
akarnokd-misc,hu.akarnokd.fallout76,EnemyCurveTableListing,main,Complex Conditional,The conditional expression e.name.toLowerCase().contains("armor_") && e.name.toLowerCase().contains("creature") && e.name.toLowerCase().endsWith("json") is complex.,11
akarnokd-misc,hu.akarnokd.fallout76,EnemyCurveTableListing,main,Complex Method,Cyclomatic complexity of the method is 14,11
akarnokd-misc,hu.akarnokd.fallout76,EnemyCurveTableListing,main,Long Statement,The length of the statement "if (e.name.toLowerCase().contains("armor_") && e.name.toLowerCase().contains("creature") && e.name.toLowerCase().endsWith("json")) {" is 132.,11
akarnokd-misc,hu.akarnokd.fallout76,EnemyCurveTableListing,main,Magic Number,The method contains a magic number: 6,11
akarnokd-misc,hu.akarnokd.fallout76,EnemyCurveTableListing,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,process,Magic Number,The method contains a magic number: 8,16
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,process,Magic Number,The method contains a magic number: 8,16
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,process,Magic Number,The method contains a magic number: 8,16
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,process,Magic Number,The method contains a magic number: 8,16
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,process,Magic Number,The method contains a magic number: 12,16
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,process,Magic Number,The method contains a magic number: 8,16
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Long Statement,The length of the statement "return (data[offset] & 0xFF) | ((data[offset + 1] & 0xFF) << 8) | ((data[offset + 2] & 0xFF) << 16)| ((data[offset + 3] & 0xFF) << 24);" is 135.,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 0xFF,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 0xFF,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 8,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 2,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 0xFF,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 16,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 3,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 0xFF,31
akarnokd-misc,hu.akarnokd.fallout76,TesStringsData,getInt32,Magic Number,The method contains a magic number: 24,31
akarnokd-misc,hu.akarnokd.fallout76,DataInputByteBuffer,readUnsignedByte,Magic Number,The method contains a magic number: 0xFF,61
akarnokd-misc,hu.akarnokd.fallout76,Ba2File,read,Magic Number,The method contains a magic number: 12,18
akarnokd-misc,hu.akarnokd.fallout76,Ba2File,read,Magic Number,The method contains a magic number: 24L,18
akarnokd-misc,hu.akarnokd.fallout76,Ba2File,read,Magic Number,The method contains a magic number: 36,18
akarnokd-misc,hu.akarnokd.fallout76,Ba2File,read,Magic Number,The method contains a magic number: 16,18
akarnokd-misc,hu.akarnokd.fallout76,Ba2FileCreator,main,Magic Number,The method contains a magic number: 24,8
akarnokd-misc,hu.akarnokd.fallout76,Ba2FileCreator,main,Magic Number,The method contains a magic number: 36,8
akarnokd-misc,hu.akarnokd.fallout76,Ba2FileCreator,main,Magic Number,The method contains a magic number: 0x0010_0100,8
akarnokd-misc,hu.akarnokd.fallout76,Ba2FileCreator,main,Magic Number,The method contains a magic number: 24,8
akarnokd-misc,hu.akarnokd.fallout76,Ba2FileCreator,main,Magic Number,The method contains a magic number: 36,8
akarnokd-misc,hu.akarnokd.fallout76,Ba2FileCreator,main,Magic Number,The method contains a magic number: 0xBAADF00D,8
akarnokd-misc,hu.akarnokd.fallout76,WeaponCurveTableListing,main,Complex Method,Cyclomatic complexity of the method is 9,11
akarnokd-misc,hu.akarnokd.fallout76,WeaponCurveTableListing,main,Magic Number,The method contains a magic number: 5,11
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Complex Conditional,The conditional expression line1.endsWith("`") && (line2.startsWith("}") || line2.startsWith("]")) is complex.,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Complex Method,Cyclomatic complexity of the method is 11,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Magic Number,The method contains a magic number: 10_000,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Magic Number,The method contains a magic number: 100_000,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Magic Number,The method contains a magic number: 100_000,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Magic Number,The method contains a magic number: 10_000,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Magic Number,The method contains a magic number: 10_000,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,main,Magic Number,The method contains a magic number: 1000,42
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Long Statement,The length of the statement "return "" + ((char)((v >> 0) & 0xFF)) + ((char)((v >> 8) & 0xFF))+ ((char)((v >> 16) & 0xFF))+ ((char)((v >> 24) & 0xFF));" is 122.,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 0xFF,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 8,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 0xFF,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 16,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 0xFF,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 24,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,intToChar,Magic Number,The method contains a magic number: 0xFF,266
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processTopGroups,Magic Number,The method contains a magic number: 4,276
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,getProgress,Magic Number,The method contains a magic number: 100.0,286
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Complex Conditional,The conditional expression !groupLabel.isEmpty() && (filterGroup == null || filterGroup.contains(groupLabel)) is complex.,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Complex Method,Cyclomatic complexity of the method is 10,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Long Parameter List,The method has 5 parameters. ,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Magic Number,The method contains a magic number: 6,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Magic Number,The method contains a magic number: 8,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Magic Number,The method contains a magic number: 24,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Magic Number,The method contains a magic number: 24,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Magic Number,The method contains a magic number: 24,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processInnerGroup,Magic Number,The method contains a magic number: 8,302
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Complex Conditional,The conditional expression listcount == 0 && conditionMode && !"CTDA".equals(fe.type) is complex.,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Complex Method,Cyclomatic complexity of the method is 65,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Long Method,The method has 239 lines of code.,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 4,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 8,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 4,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 1024,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 12,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 4,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 4,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 4,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 10,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 10,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 8,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 8,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 2,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 0xFF,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 256,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processRecords,Magic Number,The method contains a magic number: 24,374
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 4,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 5,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 6,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 7,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 4,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 8,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 9,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 4096,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 12,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 13,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 14,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 15,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 16,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 17,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 18,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 19,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 20,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 2,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 24,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 25,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 26,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,addCTDA,Magic Number,The method contains a magic number: 27,652
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processFields,Magic Number,The method contains a magic number: 4,702
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processFields,Magic Number,The method contains a magic number: 256,702
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processFields,Magic Number,The method contains a magic number: 2,702
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processFields,Magic Number,The method contains a magic number: 3,702
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,processFields,Magic Number,The method contains a magic number: 6,702
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 0xFF,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 0xFF,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 8,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 0xFF,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 16,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 0xFF,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 24,1105
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 0xFF,1110
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 0xFF,1110
akarnokd-misc,hu.akarnokd.fallout76,EsmExport,toInt,Magic Number,The method contains a magic number: 8,1110
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Complex Method,Cyclomatic complexity of the method is 13,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 0xFFFF,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 100,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 3,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 2,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 1000,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 800,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 22,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDFinder,main,Magic Number,The method contains a magic number: 22,15
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDScanner,main,Magic Number,The method contains a magic number: 0xFFFF,10
akarnokd-misc,hu.akarnokd.fallout76.old,EditorIDScanner,main,Magic Number,The method contains a magic number: 100,10
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Complex Conditional,The conditional expression drJson == null || erJson == null || rrJson == null is complex.,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Complex Method,Cyclomatic complexity of the method is 13,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Magic Number,The method contains a magic number: 7,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Magic Number,The method contains a magic number: 5,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Magic Number,The method contains a magic number: 6,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Magic Number,The method contains a magic number: 5,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Magic Number,The method contains a magic number: 5,20
akarnokd-misc,hu.akarnokd.fallout76.old,Fallout76EnemyInfo,main,Magic Number,The method contains a magic number: 8,20
akarnokd-misc,hu.akarnokd.misc,ScannerClose2,main,Magic Number,The method contains a magic number: 3,6
akarnokd-misc,hu.akarnokd.misc,ScannerClose2,main,Magic Number,The method contains a magic number: 2,6
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 5000,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 4,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 200,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 4,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 5000,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 200,8
akarnokd-misc,hu.akarnokd.misc,Button45,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.misc,Scaledown,main,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.misc,Scaledown,main,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.misc,Scaledown,main,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.misc,Scaledown,main,Magic Number,The method contains a magic number: 4,19
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,countPrimes,Complex Conditional,The conditional expression n == 0 || n == 1 || n == 2 is complex.,8
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,countPrimes,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,countPrimes,Magic Number,The method contains a magic number: 3,8
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,countPrimes,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,countPrimes2,Magic Number,The method contains a magic number: 2,29
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,main,Magic Number,The method contains a magic number: 30000,39
akarnokd-misc,hu.akarnokd.misc,PrimeCounter,main,Magic Number,The method contains a magic number: 100,39
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 30,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 90,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.misc,ImgRotate,main,Magic Number,The method contains a magic number: 4,11
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 11,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 16_000_000_000L,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 10,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 10,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 9,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 10,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 10,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 10,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 2,7
akarnokd-misc,hu.akarnokd.misc,DigitSwapper,main,Magic Number,The method contains a magic number: 10_000_000,7
akarnokd-misc,hu.akarnokd.misc,Scansort,main,Magic Number,The method contains a magic number: 10,22
akarnokd-misc,hu.akarnokd.misc,SimpleDateAdd,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.misc,LongestEventSub,main,Magic Number,The method contains a magic number: 2,6
akarnokd-misc,hu.akarnokd.misc,LongestEventSub,main,Magic Number,The method contains a magic number: 2,6
akarnokd-misc,hu.akarnokd.misc,ExpandKeysInMap,main,Long Statement,The length of the statement "var result=map.entrySet().stream().flatMap(kv -> kv.getKey().stream().map(k -> Map.entry(k`kv.getValue()))).collect(Collectors.toMap(k -> k.getKey()`v -> v.getValue()));" is 169.,10
akarnokd-misc,hu.akarnokd.misc,SortySort,main,Magic Number,The method contains a magic number: 2,24
akarnokd-misc,hu.akarnokd.misc,ExclusionForwardBack,compute,Complex Method,Cyclomatic complexity of the method is 8,8
akarnokd-misc,hu.akarnokd.misc,ExclusionForwardBack,compute,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.misc,Lead,main,Complex Method,Cyclomatic complexity of the method is 8,6
akarnokd-misc,hu.akarnokd.misc,Lead,main,Magic Number,The method contains a magic number: 2,6
akarnokd-misc,hu.akarnokd.misc,MonoAppended,main,Long Statement,The length of the statement "source.doOnNext(list -> list.add(0`"All")).subscribe(System.out::println`Throwable::printStackTrace`() -> System.out.println("Done"));" is 134.,9
akarnokd-misc,hu.akarnokd.misc,HasAllLetters,main,Magic Number,The method contains a magic number: 26,4
akarnokd-misc,hu.akarnokd.misc,HasAllLetters,main,Magic Number,The method contains a magic number: 26,4
akarnokd-misc,hu.akarnokd.misc,HasAllLetters,main,Magic Number,The method contains a magic number: 26,4
akarnokd-misc,hu.akarnokd.misc,BubblyVowels,sortByVowels,Complex Conditional,The conditional expression ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' is complex.,6
akarnokd-misc,hu.akarnokd.misc,CP037,main,Magic Number,The method contains a magic number: 5565,7
akarnokd-misc,hu.akarnokd.misc,Parking,main,Magic Number,The method contains a magic number: 10000,8
akarnokd-misc,hu.akarnokd.misc,Parking,main,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.misc,Rotator,state,Magic Number,The method contains a magic number: 6,10
akarnokd-misc,hu.akarnokd.misc,Rotator,state,Magic Number,The method contains a magic number: 4,10
akarnokd-misc,hu.akarnokd.misc,Rotator,state,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 6,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 4,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 2,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 2,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Magic Number,The method contains a magic number: 3,17
akarnokd-misc,hu.akarnokd.misc,Rotator,apply,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@48f753ee,17
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 1024,43
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 1024,43
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 32,43
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.misc,Rotator,main,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.misc,SplitNKeep,main,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.misc,Recolor,main,Magic Number,The method contains a magic number: 0xFF000000,10
akarnokd-misc,hu.akarnokd.misc,Recolor,main,Magic Number,The method contains a magic number: 0xA0A2A2,10
akarnokd-misc,hu.akarnokd.misc,ParallelSum,main,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.misc,ParallelSum,main,Magic Number,The method contains a magic number: 3,8
akarnokd-misc,hu.akarnokd.misc,ParallelSum,main,Magic Number,The method contains a magic number: 4,8
akarnokd-misc,hu.akarnokd.misc,ParallelSum,main,Magic Number,The method contains a magic number: 5,8
akarnokd-misc,hu.akarnokd.misc,MayBy,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.misc,MayBy,main,Magic Number,The method contains a magic number: 5,10
akarnokd-misc,hu.akarnokd.misc,MayBy,main,Magic Number,The method contains a magic number: 9,10
akarnokd-misc,hu.akarnokd.misc,MayBy,main,Magic Number,The method contains a magic number: 7,10
akarnokd-misc,hu.akarnokd.misc,MayBy,main,Magic Number,The method contains a magic number: 10,10
akarnokd-misc,hu.akarnokd.misc,MayBy,main,Magic Number,The method contains a magic number: 7,10
akarnokd-misc,hu.akarnokd.asm,ModuleWriting,main,Long Statement,The length of the statement "mw.visitExport("io.reactivex.rxjava3"`0`new String[]{"io/reactivex/rxjava3/annotations"`"io/reactivex/rxjava3/core"`"io/reactivex/rxjava3/disposables"`"io/reactivex/rxjava3/exceptions"`"io/reactivex/rxjava3/flowables"`"io/reactivex/rxjava3/functions"`"io/reactivex/rxjava3/observables"`"io/reactivex/rxjava3/observers"`"io/reactivex/rxjava3/operators"`"io/reactivex/rxjava3/parallel"`"io/reactivex/rxjava3/plugins"`"io/reactivex/rxjava3/processors"`"io/reactivex/rxjava3/schedulers"`"io/reactivex/rxjava3/subjects"`"io/reactivex/rxjava3/subscribers"});" is 552.,12
akarnokd-misc,hu.akarnokd.starfield,Crafter,main,Magic Number,The method contains a magic number: 15,8
akarnokd-misc,hu.akarnokd.starfield,Crafter,main,Magic Number,The method contains a magic number: 15,8
akarnokd-misc,hu.akarnokd.starfield,Crafter,main,Magic Number,The method contains a magic number: 1000,8
akarnokd-misc,hu.akarnokd.starfield,Crafter,main,Magic Number,The method contains a magic number: 5000,8
akarnokd-misc,hu.akarnokd.stream,StreamFilterMapCollect,main,Magic Number,The method contains a magic number: 2,8
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 1024,6
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 1024,6
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 2,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 36,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 16,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 22050,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 22050,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 8,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 128,18
akarnokd-misc,hu.akarnokd.imperium,WavExport,writeWav,Magic Number,The method contains a magic number: 0x80,18
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 0xFF,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 0xFF,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 256,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 2,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 0xFF,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 256,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,threeBytes,Magic Number,The method contains a magic number: 256,9
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Long Statement,The length of the statement "System.out.printf("%02d` Flags: %02X` V1: %06X` V2: %06X` V3: %06X` V4: %06X` Diff: %06X%n"`i`bb.get(offset)`threeBytes(bb`offset + 1)`offsetA`offsetB`offsetC`offsetC - offsetB);" is 178.,15
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Magic Number,The method contains a magic number: 4,15
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Magic Number,The method contains a magic number: 7,15
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Magic Number,The method contains a magic number: 10,15
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Magic Number,The method contains a magic number: 16,15
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Magic Number,The method contains a magic number: 0x3A40D,15
akarnokd-misc,hu.akarnokd.imperium,XMFExplorer,main,Magic Number,The method contains a magic number: 0xFFFF,15
akarnokd-misc,hu.akarnokd.io,LongClass,main,Magic Number,The method contains a magic number: 3,9
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,RunMonteCarlo,Long Statement,The length of the statement "System.out.printf("%12s : %.6f%% | %10d / %10d / %10d = %`6f%%` %n"`perItem[i].name`100d * countItem[i] / m`countItem[i]`total`m`100d * countItem[i] / total);" is 158.,11
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,RunMonteCarlo,Magic Number,The method contains a magic number: 50_000_000,11
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,RunMonteCarlo,Magic Number,The method contains a magic number: 100d,11
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,RunMonteCarlo,Magic Number,The method contains a magic number: 100d,11
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,RunMonteCarlo,Magic Number,The method contains a magic number: 100d,11
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Long Statement,The length of the statement "RunMonteCarlo(new Larvae("Azurae"`1)`new Larvae("Leani"`0.75)`new Larvae("Fensea"`0.5)`new Larvae("Galaxe"`0.75)`new Larvae("Abstreus"`0.2)`new Larvae("Empalio"`1));" is 165.,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Long Statement,The length of the statement "RunMonteCarlo(new Larvae("Penga"`0.7)`new Larvae("Chevrone"`0.6)`new Larvae("Aemel"`0.5)`new Larvae("Liux"`0.5)`new Larvae("Imeo"`0.8)`new Larvae("Serena"`0.7)`new Larvae("Golden"`0.15));" is 187.,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Long Statement,The length of the statement "RunMonteCarlo(new Larvae("Common"`1)`new Larvae("Uncommon"`0.5)`new Larvae("Rare"`0.2)`new Larvae("Nere"`0.05)`new Larvae("Fiorente"`0.05));" is 140.,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Long Statement,The length of the statement "RunMonteCarlo(new Larvae("Common"`1)`new Larvae("Uncommon"`0.5)`new Larvae("Rare"`0.2)`new Larvae("Nere"`0.05)`new Larvae("Lorpen"`0.05)`new Larvae("Fiorente"`0.05));" is 166.,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Long Statement,The length of the statement "RunMonteCarlo(new Larvae("Common"`1)`new Larvae("Uncommon"`0.5)`new Larvae("Rare"`0.2)`new Larvae("Nere"`0.05)`new Larvae("Lorpen"`0.05)`new Larvae("Fiorente"`0.05)`new Larvae("Alben"`0.05));" is 191.,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Long Statement,The length of the statement "RunMonteCarlo(new Larvae("Golden"`0.15)`new Larvae("Serena"`0.70)`new Larvae("Fiorente"`0.05)`new Larvae("Alben"`0.05)`new Larvae("Lorpen"`0.05));" is 146.,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.75,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.75,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.2,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.7,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.7,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.6,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.8,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.7,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.15,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.2,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.2,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.2,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.2,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.5,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.2,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.15,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.70,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,DropProbabilityCalc,main,Magic Number,The method contains a magic number: 0.05,47
akarnokd-misc,hu.akarnokd.theplanetcrafter,FileToByteArrayText,main,Magic Number,The method contains a magic number: 16,7
akarnokd-misc,hu.akarnokd.theplanetcrafter,CleanupCS,processFile,Complex Method,Cyclomatic complexity of the method is 9,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,FusionReactorFix,main,Complex Method,Cyclomatic complexity of the method is 11,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,FusionReactorFix,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,FusionReactorFix,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,FusionReactorFix,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,FusionReactorFix,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,FusionReactorFix,main,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,Area,Long Parameter List,The method has 8 parameters. ,14
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Long Statement,The length of the statement "var spawns=List.<Area>of(new Area("ParadiseLost"`1254`143`2929`98`42`117`Butterfly18Larvae`Butterfly17Larvae`Butterfly14Larvae`Butterfly13Larvae`Butterfly12Larvae)`new Area("Bassins"`631.6`66.9`1562.5`215.9`56.7`265.3`Butterfly11Larvae)`new Area("Mont"`1482.0`83.0`2173.0`433.8`70.7`429.5`Butterfly11Larvae`Butterfly13Larvae)`new Area("Waterfalls"`-520.0`151.0`678.0`398.0`82.1`419.4`Butterfly11Larvae`Butterfly12Larvae`Butterfly13Larvae)`new Area("GrandCanyon"`1907.0`61.0`201.0`516.6`77.7`541.6`Butterfly11Larvae)`new Area("Caves"`832.0`39.0`1089.0`175.9`65.0`149.3`Butterfly14Larvae)`new Area("Dunes"`1391.0`52.0`1268.0`310.0`56.7`321.4`Butterfly11Larvae)`new Area("BlackDesert"`-179.0`83.0`-679.0`551.4`70.7`548.7`Butterfly14Larvae)`new Area("Cave-Grotte"`267.0`126.4`1520.0`108.0`42.9`160.2`Butterfly12Larvae)`new Area("Under-ShroomRiver"`-205.0`-39.0`477.5`270.0`35.6`398.9`Butterfly15Larvae)`new Area("Crater"`-352.0`119.0`1466.0`360.8`130.7`314.1`Butterfly11Larvae`Butterfly13Larvae)`new Area("OrangeDesert"`821.0`83.0`-842.0`279.2`65.7`238.6`Butterfly13Larvae)`new Area("CavesTop"`825.0`170.7`1012.9`64.1`25.2`103.4`Butterfly11Larvae`Butterfly12Larvae`Butterfly13Larvae`Butterfly14Larvae));" is 1199.,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Long Statement,The length of the statement "var labels=Map.<String`String>of("Butterfly11Larvae"`"- Nere (11)"`"Butterfly12Larvae"`"- Lorpen (12)"`"Butterfly13Larvae"`"- Fiorente (13)"`"Butterfly14Larvae"`"- Alben (14)"`"Butterfly15Larvae"`"- Futura (15)"`"Butterfly16Larvae"`"- Imeo (16)"`"Butterfly17Larvae"`"- Serena (17)"`"Butterfly18Larvae"`"- Golden (18)");" is 319.,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1254,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 143,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2929,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 98,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 42,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 117,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 631.6,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 66.9,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1562.5,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 215.9,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 56.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 265.3,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1482.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 83.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2173.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 433.8,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 70.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 429.5,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 520.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 151.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 678.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 398.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 82.1,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 419.4,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1907.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 61.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 201.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 516.6,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 77.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 541.6,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 832.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 39.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1089.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 175.9,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 65.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 149.3,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1391.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 52.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1268.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 310.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 56.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 321.4,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 179.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 83.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 679.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 551.4,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 70.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 548.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 267.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 126.4,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1520.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 108.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 42.9,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 160.2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 205.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 39.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 477.5,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 270.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 35.6,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 398.9,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 352.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 119.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1466.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 360.8,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 130.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 314.1,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 821.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 83.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 842.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 279.2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 65.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 238.6,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 825.0,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 170.7,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 1012.9,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 64.1,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 25.2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 103.4,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 400,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 800,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2000,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2000,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 4000d,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 4000d,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 32,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 32,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 32,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 128,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 32,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 32,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 32,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 192,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 255,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 255,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 255,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 255,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 4,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 3,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,LarvaeMap,main,Magic Number,The method contains a magic number: 2,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 100,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 3000,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 1400,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2400,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 1000,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 500,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 40,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 30,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 4,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 4,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 3,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 4,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 3,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 4,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,BuildMap,buildMapOf,Magic Number,The method contains a magic number: 2,21
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoClient,main,Magic Number,The method contains a magic number: 200,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoClient,main,Magic Number,The method contains a magic number: 22526,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoClient,main,Magic Number,The method contains a magic number: 1000,16
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoClient,receive,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoHost,main,Magic Number,The method contains a magic number: 22526,17
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoHost,receive,Long Statement,The length of the statement "out.print("Constructs|209794798;EscapePod;0;;598.74`1.32`682.76;0.01`-0.49`0.01`0.87;;;;0|105036705;Magnesium;0;;;;;;;0|207020435;SpaceMultiplierOxygen;3;;-500`-500`-500;0`0`0`1;;;;0|204703510;SpaceMultiplierHeat;4;;-500`-500`-500;0`0`0`1;;;;0|205385369;SpaceMultiplierPressure;5;;-500`-500`-500;0`0`0`1;;;;0|209166350;SpaceMultiplierBiomass;6;;-500`-500`-500;0`0`0`1;;;;0|104659988;Container1;104659988;;907.2864`28.85556`48.36556;0.2354753`-0.2263354`0.0370391`0.944432;;...;;0|202378668;Iridium;0;;;;;;;0|202255064;Aluminium;0;;;;;;;0|208184984;Alloy;0;;;;;;;0|204780199;FabricBlue;0;;;;;;;0|205557023;astrofood;0;;;;;;;0|106606665;Container1;106606665;;908.7042`27.96467`51.12227;0.2148088`0.3484681`0.3030255`0.8605829;;...;;0|202048292;Aluminium;0;;;;;;;0|206113605;Aluminium;0;;;;;;;0|208869546;Seed2;0;;;;;;;0|207709924;FabricBlue;0;;;;;;;0|204015919;FabricBlue;0;;;;;;;0\r\n");" is 886.,37
akarnokd-misc,hu.akarnokd.theplanetcrafter,PositionEchoHost,receive,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,validParent,Complex Conditional,The conditional expression s.charAt(i) == '(' && Character.isDigit(s.charAt(i + 1)) && s.charAt(i + 2) == ')' is complex.,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,validParent,Complex Method,Cyclomatic complexity of the method is 8,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,validParent,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,validParent,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Complex Method,Cyclomatic complexity of the method is 8,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Long Statement,The length of the statement "List<String> first=new ArrayList<>(Arrays.asList(""`"-"`"("`"-("`"(-"`"(("`"-(("`"((("`"-((("`"((-"`"((-"`"(((-"`"(((-"));" is 122.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Long Statement,The length of the statement "List<String> second=new ArrayList<>(Arrays.asList(""`"+"`"-"`"*"`"+("`"-("`"*("`"/"`"^"`"^("`"+(("`"-(("`"*(("`"/("`"/(("`"^(("));" is 130.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Long Statement,The length of the statement "List<String> between=new ArrayList<>(Arrays.asList(""`"+"`"-"`"*"`")+"`"+("`")+("`")-"`"-("`")-("`")*"`"*("`")*("`"/"`"^"`")^"`"^("`")^("`"))+"`"+(("`"))+("`")+(("`"))+(("`"))-"`"-(("`"))-("`")-(("`"))-(("`"))*"`"*(("`"))*("`")*(("`"))*(("`")/"`"/("`")/("`"))/"`"/(("`"))/("`")/(("`"))/(("`"))^"`"^(("`"))^("`")^(("`"))^(("));" is 326.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Long Statement,The length of the statement "List<String> beforeLast=new ArrayList<>(Arrays.asList(""`"+"`"-"`"*"`")+"`")-"`")*"`"))+"`"))-"`"))*"`"^"`")^"`"))^"`"/"`")/"`"))/"));" is 134.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Long Statement,The length of the statement "System.out.printf("Total: %`d (%.6f%%)` Valid: %`d (%.6f%%)` Invalid: %`d%n"`mi.counter + 1`((mi.counter + 1) * 100d) / all`valid`(valid * 100d / (mi.counter + 1))`invalid);" is 173.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Long Statement,The length of the statement "System.out.printf("Total: %`d (%.6f%%)` Valid: %`d (%.6f%%)` Invalid: %`d%n"`mi.counter + 1`((mi.counter + 1) * 100d) / all`valid`(valid * 100d / (mi.counter + 1))`invalid);" is 173.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 6,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 10,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 2,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 2,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 100d,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 100d,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 100d,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,findExpression,Magic Number,The method contains a magic number: 100d,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to9,main,Magic Number,The method contains a magic number: 10958,225
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,validParent,Complex Conditional,The conditional expression s.charAt(i) == '(' && Character.isDigit(s.charAt(i + 1)) && s.charAt(i + 2) == ')' is complex.,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,validParent,Complex Method,Cyclomatic complexity of the method is 8,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,validParent,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,validParent,Magic Number,The method contains a magic number: 2,10
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Complex Conditional,The conditional expression result > 0 && result < 11112 && result == Math.floor(result) is complex.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Complex Method,Cyclomatic complexity of the method is 10,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Long Statement,The length of the statement "List<String> first=new ArrayList<>(Arrays.asList(""`"-"`"("`"-("`"(-"`"(("`"-(("`"((("`"-((("`"((-"`"((-"`"(((-"`"(((-"));" is 122.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Long Statement,The length of the statement "List<String> second=new ArrayList<>(Arrays.asList(""`"+"`"-"`"*"`"+("`"-("`"*("`"/"`"^"`"^("`"+(("`"-(("`"*(("`"/("`"/(("`"^(("));" is 130.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Long Statement,The length of the statement "List<String> between=new ArrayList<>(Arrays.asList(""`"+"`"-"`"*"`")+"`"+("`")+("`")-"`"-("`")-("`")*"`"*("`")*("`"/"`"^"`")^"`"^("`")^("`"))+"`"+(("`"))+("`")+(("`"))+(("`"))-"`"-(("`"))-("`")-(("`"))-(("`"))*"`"*(("`"))*("`")*(("`"))*(("`")/"`"/("`")/("`"))/"`"/(("`"))/("`")/(("`"))/(("`"))^"`"^(("`"))^("`")^(("`"))^(("));" is 326.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Long Statement,The length of the statement "List<String> beforeLast=new ArrayList<>(Arrays.asList(""`"+"`"-"`"*"`")+"`")-"`")*"`"))+"`"))-"`"))*"`"^"`")^"`"))^"`"/"`")/"`"))/"));" is 134.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Long Statement,The length of the statement "System.out.printf("Total: %`d (%.6f%%)` Valid: %`d (%.6f%%)` Invalid: %`d` Found: %`d%n"`mi.counter + 1`((mi.counter + 1) * 100d) / all`valid`(valid * 100d / (mi.counter + 1))`invalid`map.size());" is 196.,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 7,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 10,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 2,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 2,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 8,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 9,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 11112,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 100d,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,findExpression,Magic Number,The method contains a magic number: 100d,78
akarnokd-misc,hu.akarnokd.math,NumberFrom1to10NoConcat,main,Magic Number,The method contains a magic number: 11112,227
akarnokd-misc,hu.akarnokd.akka,AkkaHello,main,Magic Number,The method contains a magic number: 1000,41
akarnokd-misc,hu.akarnokd.akka,AkkaHello,main,Magic Number,The method contains a magic number: 1000,41
akarnokd-misc,hu.akarnokd.akka,AkkaHello,main,Magic Number,The method contains a magic number: 1000,41
akarnokd-misc,hu.akarnokd.akka,AkkaHello,main,Magic Number,The method contains a magic number: 1000,41
akarnokd-misc,hu.akarnokd.akka,AkkaRange,println,Magic Number,The method contains a magic number: 5,14
akarnokd-misc,hu.akarnokd.akka,AkkaRange,onSubscribe,Magic Number,The method contains a magic number: 5,21
akarnokd-misc,hu.akarnokd.akka,AkkaRange,main,Magic Number,The method contains a magic number: 1000,48
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableMappings,Long Statement,The length of the statement "canonicals.put("/rx/Observable.OnSubscribe.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/FlowableOnSubscribe.html");" is 142.,37
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableMappings,Long Statement,The length of the statement "canonicals.put("/rx/Observable.Operator.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/FlowableOperator.html");" is 136.,37
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableMappings,Long Statement,The length of the statement "canonicals.put("/rx/Observable.Transformer.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/FlowableTransformer.html");" is 142.,37
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableMappings,Long Statement,The length of the statement "canonicals.put("/rx/Subscriber.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/FlowableSubscriber.html");" is 129.,37
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableMappings,Long Statement,The length of the statement "canonicals.put("/rx/Emitter.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/FlowableEmitter.html");" is 123.,37
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObserverMappings,Long Statement,The length of the statement "canonicals.put("/rx/Subscription.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/disposables/Disposable.html");" is 130.,52
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObserverMappings,Long Statement,The length of the statement "canonicals.put("/rx/Notification.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Notification.html");" is 125.,52
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSchedulerMappings,Long Statement,The length of the statement "canonicals.put("/rx/Scheduler.Worker.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Scheduler.Worker.html");" is 133.,61
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSchedulerMappings,Long Statement,The length of the statement "canonicals.put("/rx/scheduler/Schedulers.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/schedulers/Schedulers.html");" is 137.,61
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSchedulerMappings,Long Statement,The length of the statement "canonicals.put("/rx/scheduler/TestScheduler.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/schedulers/TestScheduler.html");" is 143.,61
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSchedulerMappings,Long Statement,The length of the statement "canonicals.put("/rx/scheduler/TimeInterval.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/schedulers/Timed.html");" is 134.,61
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSchedulerMappings,Long Statement,The length of the statement "canonicals.put("/rx/scheduler/Timestamped.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/schedulers/Timed.html");" is 133.,61
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSchedulerMappings,Long Statement,The length of the statement "canonicals.put("/rx/scheduler/TrampolineScheduler.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/schedulers/Schedulers.html#trampoline%28%29");" is 163.,61
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addPluginMappings,Long Statement,The length of the statement "canonicals.put("/rx/plugins/RxJavaPlugins.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/plugins/RxJavaPlugins.html");" is 138.,78
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addPluginMappings,Long Statement,The length of the statement "canonicals.put("/rx/plugins/RxJavaHooks.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/plugins/RxJavaPlugins.html");" is 136.,78
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addPluginMappings,Long Statement,The length of the statement "canonicals.put("/rx/plugins/RxJavaCompletableExecutionHook.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/plugins/RxJavaPlugins.html");" is 155.,78
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addPluginMappings,Long Statement,The length of the statement "canonicals.put("/rx/plugins/RxJavaSingleExecutionHook.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/plugins/RxJavaPlugins.html");" is 150.,78
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addPluginMappings,Long Statement,The length of the statement "canonicals.put("/rx/plugins/RxJavaObservableExecutionHook.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/plugins/RxJavaPlugins.html");" is 154.,78
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addPluginMappings,Long Statement,The length of the statement "canonicals.put("/rx/plugins/RxJavaSchedulersHook.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/plugins/RxJavaPlugins.html");" is 145.,78
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addBackpressureMappings,Long Statement,The length of the statement "canonicals.put("/rx/BackpressureOverflow.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/BackpressureOverflowStrategy.html");" is 149.,93
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addBackpressureMappings,Long Statement,The length of the statement "canonicals.put("/rx/BackpressureOverflow.Strategy.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/BackpressureOverflowStrategy.html");" is 158.,93
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addBackpressureMappings,Long Statement,The length of the statement "canonicals.put("/rx/Emitter.BackpressureMode.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/BackpressureStrategy.html");" is 145.,93
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addBackpressureMappings,Long Statement,The length of the statement "canonicals.put("/rx/Producer.html"`"http://www.reactive-streams.org/reactive-streams-1.0.0-javadoc/org/reactivestreams/Subscription.html");" is 139.,93
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addAnnotationMappings,Long Statement,The length of the statement "canonicals.put("/rx/annotations/Beta.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/annotations/Beta.html");" is 128.,104
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addAnnotationMappings,Long Statement,The length of the statement "canonicals.put("/rx/annotations/Experimental.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/annotations/Experimental.html");" is 144.,104
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addExceptionMappings,Long Statement,The length of the statement "canonicals.put("/rx/exceptions/Exceptions.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/exceptions/Exceptions.html");" is 138.,111
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addExceptionMappings,Long Statement,The length of the statement "canonicals.put("/rx/exceptions/CompositeException.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/exceptions/CompositeException.html");" is 154.,111
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addExceptionMappings,Long Statement,The length of the statement "canonicals.put("/rx/exceptions/MissingBackpressureException.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/exceptions/MissingBackpressureException.html");" is 174.,111
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addExceptionMappings,Long Statement,The length of the statement "canonicals.put("/rx/exceptions/OnErrorNotImplementedException.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/exceptions/OnErrorNotImplementedException.html");" is 178.,111
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Action0.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Action.html");" is 129.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Action1.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Consumer.html");" is 131.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Action2.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/BiConsumer.html");" is 133.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/ActionN.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Consumer.html");" is 131.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Cancellable.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Cancellable.html");" is 138.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func0.html"`"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html");" is 122.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func1.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function.html");" is 129.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func2.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/BiFunction.html");" is 131.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func3.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function3.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func4.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function4.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func5.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function5.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func6.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function6.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func7.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function7.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func8.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function8.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Func9.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function9.html");" is 130.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/FuncN.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function.html");" is 129.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Action.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Action.html");" is 128.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/BiConsumer.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/BiConsumer.html");" is 136.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/BiFunction.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/BiFunction.html");" is 136.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/BooleanSupplier.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/BooleanSupplier.html");" is 146.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Consumer.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Consumer.html");" is 132.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function.html");" is 132.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function3.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function3.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function4.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function4.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function5.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function5.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function6.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function6.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function7.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function7.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function8.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function8.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/Function9.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/Function9.html");" is 134.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addFunctionMappings,Long Statement,The length of the statement "canonicals.put("/rx/functions/LongConsumer.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/functions/LongConsumer.html");" is 140.,122
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableTypeMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/operators/NotificationLite.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/internal/util/NotificationLite.html");" is 161.,187
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableTypeMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/operators/OperatorObserveOn.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/internal/operators/OperatorObserveOn.html");" is 168.,187
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addObservableTypeMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/operators/BlockingOperatorToFuture.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/internal/operators/BlockingOperatorToFuture.html");" is 182.,187
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSubscriptionMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/subscriptions/Subscriptions.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/disposables/Disposables.html");" is 155.,196
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSubscriptionMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/subscriptions/MultipleAssignmentSubscription.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/disposables/SerialDisposable.html");" is 177.,196
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSingleMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/util/SubscriptionList.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/disposables/CompositeDisposable.html");" is 157.,203
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addSingleMappings,Long Statement,The length of the statement "canonicals.put("/rx/internal/util/OpenHashSet.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/internal/util/OpenHashSet.html");" is 146.,203
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/singles/Single.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Single.html");" is 121.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/singles/Single.OnSubscribe.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/SingleOnSubscribe.html");" is 144.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/singles/Single.Operator.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/SingleOperator.html");" is 138.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/singles/Single.Transformer.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/SingleTransformer.html");" is 144.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/completable/Completable.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Completable.html");" is 135.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/completable/Completable.OnSubscribe.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/CompletableOnSubscribe.html");" is 158.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/completable/Completable.Operator.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/CompletableOperator.html");" is 152.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,addCompletableMappings,Long Statement,The length of the statement "canonicals.put("/rx/completable/Completable.Transformer.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/CompletableTransformer.html");" is 158.,210
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,init2x,Long Statement,The length of the statement "canonicals.put("/io/reactivex/disposables/Disposables.html"`"http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/disposables/Disposable.html");" is 151.,241
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,init2x,Magic Number,The method contains a magic number: 100,241
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,checkAndCacheURL,Magic Number,The method contains a magic number: 100,273
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,appendLink,Magic Number,The method contains a magic number: 2,320
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,appendLink,Magic Number,The method contains a magic number: 2,320
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,appendLink,Magic Number,The method contains a magic number: 2,320
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,process2x,Magic Number,The method contains a magic number: 14,361
akarnokd-misc,hu.akarnokd.rxjava.javadoc,AddCanonical,visitFile,Magic Number,The method contains a magic number: 14,363
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Complex Method,Cyclomatic complexity of the method is 12,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Long Statement,The length of the statement "PointValuePair result=solver.optimize(f`new LinearConstraintSet(constraints)`GoalType.MINIMIZE`new NonNegativeConstraint(true));" is 128.,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 40,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 40,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 0.2,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 0.1,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.linearprogramming,TaskTimeDetect,main,Magic Number,The method contains a magic number: 2,13
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,setup,Magic Number,The method contains a magic number: 2,34
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,setup,Magic Number,The method contains a magic number: 2,34
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,setup,Magic Number,The method contains a magic number: 2,34
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,setup,Magic Number,The method contains a magic number: 23345,34
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,setup,Magic Number,The method contains a magic number: 23345,34
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,serverLoop,Empty catch clause,The method has an empty catch block.,50
akarnokd-misc,hu.akarnokd.reactive.ipc,SocketNetworkNotification,send,Magic Number,The method contains a magic number: 1_000_000,76
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,BlockingPerf,setup,Magic Number,The method contains a magic number: 1_000_000,37
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,BlockingPerf,setup,Magic Number,The method contains a magic number: 777,37
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1_000_000,75
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,75
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,75
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,75
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,75
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).subscribeWith(new MyRx2Observer())`"range+consumer"`"Rx2Observable");" is 123.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).map(v -> v).subscribeWith(new MyRx2Observer())`"range+map+consumer"`"Rx2Observable");" is 139.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).map(v -> v).filter(v -> true).subscribeWith(new MyRx2Observer())`"range+map+filter+consumer"`"Rx2Observable");" is 164.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Observer())`"range+subscribeOn+consumer"`"Rx2Observable");" is 197.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Observer())`"range+observeOn+consumer"`"Rx2Observable");" is 193.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Observer())`"range+subscribeOn+observeOn+consumer"`"Rx2Observable");" is 267.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.AsyncSubject.create().subscribeWith(new MyRx2Observer())`"Async+consumer"`"Rx2Observable");" is 131.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.PublishSubject.create().subscribeWith(new MyRx2Observer())`"Publish+consumer"`"Rx2Observable");" is 135.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.ReplaySubject.create().subscribeWith(new MyRx2Observer())`"Replay+consumer"`"Rx2Observable");" is 133.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.BehaviorSubject.create().subscribeWith(new MyRx2Observer())`"Behavior+consumer"`"Rx2Observable");" is 137.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.UnicastSubject.create().subscribeWith(new MyRx2Observer())`"Unicast+consumer"`"Rx2Observable");" is 135.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).subscribeWith(new MyRx2Subscriber())`"range+consumer"`"Rx2Flowable");" is 121.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).map(v -> v).subscribeWith(new MyRx2Subscriber())`"range+map+consumer"`"Rx2Flowable");" is 137.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).map(v -> v).filter(v -> true).subscribeWith(new MyRx2Subscriber())`"range+map+filter+consumer"`"Rx2Flowable");" is 162.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Subscriber())`"range+subscribeOn+consumer"`"Rx2Flowable");" is 195.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Subscriber())`"range+observeOn+consumer"`"Rx2Flowable");" is 191.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Subscriber())`"range+subscribeOn+observeOn+consumer"`"Rx2Flowable");" is 265.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.AsyncProcessor.create().subscribeWith(new MyRx2Subscriber())`"Async+consumer"`"Rx2Flowable");" is 135.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.PublishProcessor.create().subscribeWith(new MyRx2Subscriber())`"Publish+consumer"`"Rx2Flowable");" is 139.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.ReplayProcessor.create().subscribeWith(new MyRx2Subscriber())`"Replay+consumer"`"Rx2Flowable");" is 137.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.BehaviorProcessor.create().subscribeWith(new MyRx2Subscriber())`"Behavior+consumer"`"Rx2Flowable");" is 141.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.UnicastProcessor.create().subscribeWith(new MyRx2Subscriber())`"Unicast+consumer"`"Rx2Flowable");" is 139.,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,AsyncPerf,setup,Long Statement,The length of the statement "pipelineRx2Flowable=arrayRx2F.subscribeOn(io.reactivex.schedulers.Schedulers.from(exec2)).observeOn(io.reactivex.schedulers.Schedulers.from(exec));" is 147.,36
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,AsyncPerf,setup,Long Statement,The length of the statement "pipelineRx2Observable=arrayRx2O.subscribeOn(io.reactivex.schedulers.Schedulers.from(exec2)).observeOn(io.reactivex.schedulers.Schedulers.from(exec));" is 149.,36
akarnokd-misc,hu.akarnokd.reactive.comparison.rx2,AsyncPerf,setup,Magic Number,The method contains a magic number: 777,36
akarnokd-misc,hu.akarnokd.reactive.comparison.consumers,PerfRxAsyncSingleSubscriber,await,Magic Number,The method contains a magic number: 1000,30
akarnokd-misc,hu.akarnokd.reactive.comparison.consumers,PerfRxAsyncSingleSubscriber,await,Magic Number,The method contains a magic number: 10,30
akarnokd-misc,hu.akarnokd.reactive.comparison.consumers,PerfAsyncConsumer,await,Magic Number,The method contains a magic number: 10,74
akarnokd-misc,hu.akarnokd.reactive.comparison.consumers,PerfAsyncConsumer,await,Magic Number,The method contains a magic number: 1000,79
akarnokd-misc,hu.akarnokd.reactive.comparison.consumers,PerfRxAsyncSubscriber,await,Magic Number,The method contains a magic number: 1000,41
akarnokd-misc,hu.akarnokd.reactive.comparison.consumers,PerfRxAsyncSubscriber,await,Magic Number,The method contains a magic number: 10,41
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,BlockingPerf,setup,Magic Number,The method contains a magic number: 1_000_000,34
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,BlockingPerf,setup,Magic Number,The method contains a magic number: 777,34
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1_000_000,38
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,38
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,38
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,38
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,38
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.Observable.range(1`10).map(v -> v).subscribe(new MyRxSubscriber())`"range+map+consumer"`"RxObservable");" is 125.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.Observable.range(1`10).map(v -> v).filter(v -> true).subscribe(new MyRxSubscriber())`"range+map+filter+consumer"`"RxObservable");" is 150.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.Observable.range(1`10).subscribeOn(Schedulers.computation()).subscribe(new MyRxSubscriber())`"range+subscribeOn+consumer"`"RxObservable");" is 159.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.Observable.range(1`10).observeOn(Schedulers.computation()).subscribe(new MyRxSubscriber())`"range+observeOn+consumer"`"RxObservable");" is 155.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.Observable.range(1`10).subscribeOn(Schedulers.computation()).observeOn(Schedulers.computation()).subscribe(new MyRxSubscriber())`"range+subscribeOn+observeOn+consumer"`"RxObservable");" is 205.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.subjects.PublishSubject.create().subscribe(new MyRxSubscriber())`"Publish+consumer"`"RxObservable");" is 121.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.subjects.BehaviorSubject.create().subscribe(new MyRxSubscriber())`"Behavior+consumer"`"RxObservable");" is 123.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> rx.subjects.UnicastSubject.create().subscribe(new MyRxSubscriber())`"Unicast+consumer"`"RxObservable");" is 121.,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,MemoryPerf,main,Magic Number,The method contains a magic number: 10,68
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,AsyncPerf,setup,Magic Number,The method contains a magic number: 777,31
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,StreamingPerf,setup,Magic Number,The method contains a magic number: 777,47
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,StreamingPerf,setup,Magic Number,The method contains a magic number: 1_000_000,47
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,StreamingPerf,setup,Magic Number,The method contains a magic number: 777,47
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,StreamingPerf,setup,Magic Number,The method contains a magic number: 2,47
akarnokd-misc,hu.akarnokd.reactive.comparison.rx1,StreamingPerf,setup,Magic Number,The method contains a magic number: 2,47
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,BlockingPerf,setup,Magic Number,The method contains a magic number: 1_000_000,28
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,BlockingPerf,setup,Magic Number,The method contains a magic number: 777,28
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1_000_000,44
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,44
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,44
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,44
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,44
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Flux.range(1`10).map(v -> v).subscribeWith(new MyReactorSubscriber())`"range+map+consumer"`"ReactorFlux");" is 124.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Flux.range(1`10).map(v -> v).filter(v -> true).subscribeWith(new MyReactorSubscriber())`"range+map+filter+consumer"`"ReactorFlux");" is 149.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Flux.range(1`10).subscribeOn(reactor.core.scheduler.Schedulers.parallel()).subscribeWith(new MyReactorSubscriber())`"range+subscribeOn+consumer"`"ReactorFlux");" is 178.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Flux.range(1`10).publishOn(reactor.core.scheduler.Schedulers.parallel()).subscribeWith(new MyReactorSubscriber())`"range+observeOn+consumer"`"ReactorFlux");" is 174.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Flux.range(1`10).subscribeOn(reactor.core.scheduler.Schedulers.parallel()).publishOn(reactor.core.scheduler.Schedulers.parallel()).subscribeWith(new MyReactorSubscriber())`"range+subscribeOn+observeOn+consumer"`"ReactorFlux");" is 244.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Sinks.many().multicast().directBestEffort().asFlux().subscribeWith(new MyReactorSubscriber())`"Publish+consumer"`"ReactorFlux");" is 146.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Sinks.many().replay().all().asFlux().subscribeWith(new MyReactorSubscriber())`"Replay+consumer"`"ReactorFlux");" is 129.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> Sinks.many().unicast().onBackpressureBuffer().asFlux().subscribeWith(new MyReactorSubscriber())`"Unicast+consumer"`"ReactorFlux");" is 148.,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,MemoryPerf,main,Magic Number,The method contains a magic number: 10,75
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,AsyncPerf,setup,Long Statement,The length of the statement "pipelineReactorFlux=arrayFlux.subscribeOn(reactor.core.scheduler.Schedulers.fromExecutor(exec2)).publishOn(reactor.core.scheduler.Schedulers.fromExecutor(exec));" is 161.,32
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,AsyncPerf,setup,Magic Number,The method contains a magic number: 777,32
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,SubjectPerf,rangeReactorReplayProcessor,Magic Number,The method contains a magic number: 128,40
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,SubjectPerf,rangeReactorUnicastProcessor,Magic Number,The method contains a magic number: 128,45
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,StreamingPerf,setup,Magic Number,The method contains a magic number: 777,49
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,StreamingPerf,setup,Magic Number,The method contains a magic number: 1_000_000,49
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,StreamingPerf,setup,Magic Number,The method contains a magic number: 777,49
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,StreamingPerf,setup,Magic Number,The method contains a magic number: 2,49
akarnokd-misc,hu.akarnokd.reactive.comparison.reactor,StreamingPerf,setup,Magic Number,The method contains a magic number: 2,49
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsyncPerf,queueDrainAtomic1,Magic Number,The method contains a magic number: 2,20
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsyncPerf,queueDrainAtomic2,Magic Number,The method contains a magic number: 2,38
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsyncPerf,queueDrainAtomic3,Magic Number,The method contains a magic number: 2,57
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsyncPerf,queueDrainAtomic4,Magic Number,The method contains a magic number: 2,81
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsyncPerf,queueDrainAtomic5,Magic Number,The method contains a magic number: 2,100
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsync3Perf,queueDrainAtomic1,Magic Number,The method contains a magic number: 3,20
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsync3Perf,queueDrainAtomic2,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsync3Perf,queueDrainAtomic3,Magic Number,The method contains a magic number: 3,57
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsync3Perf,queueDrainAtomic4,Magic Number,The method contains a magic number: 3,81
akarnokd-misc,hu.akarnokd.atomics,QueueDrainAsync3Perf,queueDrainAtomic5,Magic Number,The method contains a magic number: 3,100
akarnokd-misc,hu.akarnokd.comparison,OnesTypesFlatMapPerf,setup,Magic Number,The method contains a magic number: 777,47
akarnokd-misc,hu.akarnokd.comparison,Util,findPath,Magic Number,The method contains a magic number: 13,30
akarnokd-misc,hu.akarnokd.comparison,ZipPerf,setup,Magic Number,The method contains a magic number: 777,38
akarnokd-misc,hu.akarnokd.comparison,ZipPerf,setup,Magic Number,The method contains a magic number: 777,38
akarnokd-misc,hu.akarnokd.comparison,ZipPerf,setup,Magic Number,The method contains a magic number: 100,38
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsFlatMapPerf,setup,Long Statement,The length of the statement "akRangeFlatMapJust=s -> Source.range(1`times).flatMapMerge(maxConcurrent`v -> Source.single(v)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 176.,36
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsFlatMapPerf,setup,Long Statement,The length of the statement "akRangeConcatMapJust=s -> Source.range(1`times).flatMapConcat(v -> Source.single(v)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 165.,36
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "flatMapAkkaAkka=s -> Source.from(outerIterable).flatMapMerge(4`v -> Source.from(innerIterable)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 176.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "concatMapAkkaAkka=s -> Source.from(outerIterable).flatMapConcat(v -> Source.from(innerIterable)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 177.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "flatMapAkkaRx=s -> Source.from(outerIterable).flatMapMerge(4`v -> Source.fromPublisher(innerRx)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 177.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "concatMapAkkaRx=s -> Source.from(outerIterable).flatMapConcat(v -> Source.fromPublisher(innerRx)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 178.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "concatMapAkkaRxAkka=s -> Flowable.fromPublisher(Source.from(outerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).concatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).subscribe(s);" is 266.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "flatMapAkkaRxAkka=s -> Flowable.fromPublisher(Source.from(outerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).flatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)`4).subscribe(s);" is 264.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "concatMapRxAkka=outerRx.concatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer));" is 134.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Long Statement,The length of the statement "flatMapRxAkka=outerRx.flatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)`4);" is 132.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 777,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 1_000_000,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 888,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapAkkaAkka,Magic Number,The method contains a magic number: 1_000_000,135
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapAkkaAkka,Magic Number,The method contains a magic number: 120,135
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapAkkaAkka,Magic Number,The method contains a magic number: 1_000_000,142
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapAkkaAkka,Magic Number,The method contains a magic number: 120,142
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapAkkaRx,Magic Number,The method contains a magic number: 1_000_000,149
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapAkkaRx,Magic Number,The method contains a magic number: 120,149
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapAkkaRx,Magic Number,The method contains a magic number: 1_000_000,156
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapAkkaRx,Magic Number,The method contains a magic number: 120,156
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapRxAkka,Magic Number,The method contains a magic number: 1_000_000,163
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapRxAkka,Magic Number,The method contains a magic number: 120,163
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapRxAkka,Magic Number,The method contains a magic number: 1_000_000,171
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapRxAkka,Magic Number,The method contains a magic number: 120,171
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapAkkaRxAkka,Magic Number,The method contains a magic number: 1_000_000,178
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapAkkaRxAkka,Magic Number,The method contains a magic number: 120,178
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapAkkaRxAkka,Magic Number,The method contains a magic number: 1_000_000,186
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapAkkaRxAkka,Magic Number,The method contains a magic number: 120,186
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapRxRx,Magic Number,The method contains a magic number: 1_000_000,193
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,concatMapRxRx,Magic Number,The method contains a magic number: 120,193
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapRxRx,Magic Number,The method contains a magic number: 1_000_000,201
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,flatMapRxRx,Magic Number,The method contains a magic number: 120,201
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,main,Long Statement,The length of the statement "Flowable.fromPublisher(s -> Flowable.fromPublisher(Source.from(outerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).flatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).subscribe(s)).subscribe(System.out::println);" is 299.,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,main,Magic Number,The method contains a magic number: 100,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,main,Magic Number,The method contains a magic number: 777,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,main,Magic Number,The method contains a magic number: 100,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsCrossMapPerf,main,Magic Number,The method contains a magic number: 888,208
akarnokd-misc,hu.akarnokd.comparison,CharsTakeSkipConcatPerf,take,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison,CharsTakeSkipConcatPerf,skip,Magic Number,The method contains a magic number: 3,51
akarnokd-misc,hu.akarnokd.comparison,CharsTakeSkipConcatPerf,concat,Long Statement,The length of the statement "Flowable.concatArray(StringFlowable.characters("jezebel").take(3)`StringFlowable.characters("jezebel").skip(3)).subscribe(new PerfConsumer(bh));" is 144.,56
akarnokd-misc,hu.akarnokd.comparison,CharsTakeSkipConcatPerf,concat,Magic Number,The method contains a magic number: 3,56
akarnokd-misc,hu.akarnokd.comparison,CharsTakeSkipConcatPerf,concat,Magic Number,The method contains a magic number: 3,56
akarnokd-misc,hu.akarnokd.comparison,LogSumPerf,setup,Long Statement,The length of the statement "rx1Observable=rx.Observable.from(array).map(v -> v == 0 ? (long)Math.log10(v) + 1 : 1L).compose(o -> rx.observables.MathObservable.sumLong(o));" is 143.,33
akarnokd-misc,hu.akarnokd.comparison,LogSumPerf,setup,Long Statement,The length of the statement "rx2Observable=io.reactivex.Observable.fromArray(array).map(v -> v == 0 ? (long)Math.log10(v) + 1 : 1L).compose(o -> hu.akarnokd.rxjava2.math.MathObservable.sumLong(o));" is 168.,33
akarnokd-misc,hu.akarnokd.comparison,LogSumPerf,setup,Long Statement,The length of the statement "rx2Flowable=io.reactivex.Flowable.fromArray(array).map(v -> v == 0 ? (long)Math.log10(v) + 1 : 1L).compose(f -> hu.akarnokd.rxjava2.math.MathFlowable.sumLong(f));" is 162.,33
akarnokd-misc,hu.akarnokd.comparison,LogSumPerf,setup,Long Statement,The length of the statement "rx2Parallel=io.reactivex.Flowable.fromArray(array).parallel().runOn(Schedulers.computation()).map(v -> v == 0 ? (long)Math.log10(v) + 1 : 1L).reduce((a`b) -> a + b);" is 165.,33
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,setup,Magic Number,The method contains a magic number: 60,37
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,setup,Magic Number,The method contains a magic number: 10,37
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,setup,Magic Number,The method contains a magic number: 10,37
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,setup,Magic Number,The method contains a magic number: 26,37
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,streamSerial,Magic Number,The method contains a magic number: 4,66
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,streamParallel,Magic Number,The method contains a magic number: 4,79
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Serial,Magic Number,The method contains a magic number: 4,92
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel,Magic Number,The method contains a magic number: 4,106
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel2,Magic Number,The method contains a magic number: 4,121
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2oSerial,Magic Number,The method contains a magic number: 4,136
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2oParallel,Magic Number,The method contains a magic number: 4,150
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2oParallel2,Magic Number,The method contains a magic number: 4,165
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rxSerial,Magic Number,The method contains a magic number: 4,180
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rxParallel,Magic Number,The method contains a magic number: 4,194
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rxParallel2,Long Statement,The length of the statement "return rx.Observable.just(r).subscribeOn(rx.schedulers.Schedulers.computation()).flatMap(rs -> rx.Observable.from(rs.split("\\s")));" is 132.,210
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rxParallel2,Magic Number,The method contains a magic number: 4,210
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rxParallel3,Magic Number,The method contains a magic number: 7,226
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rxParallel3,Magic Number,The method contains a magic number: 4,226
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel4,Magic Number,The method contains a magic number: 7,246
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel4,Magic Number,The method contains a magic number: 4,246
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel3a,Magic Number,The method contains a magic number: 16,264
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel3a,Magic Number,The method contains a magic number: 7,264
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel3a,Magic Number,The method contains a magic number: 4,264
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel3b,Magic Number,The method contains a magic number: 16,282
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel3b,Magic Number,The method contains a magic number: 7,282
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel3b,Magic Number,The method contains a magic number: 4,282
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2nParallel3,Magic Number,The method contains a magic number: 7,301
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2nParallel3,Magic Number,The method contains a magic number: 4,301
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel2b,Long Statement,The length of the statement "return Flowable.just(r).subscribeOn(Schedulers.computation()).flatMapIterable(v -> v).flatMap(rs -> Flowable.fromArray(rs.split("\\s")));" is 137.,316
akarnokd-misc,hu.akarnokd.comparison,StreamVsRxJava,rx2Parallel2b,Magic Number,The method contains a magic number: 4,316
akarnokd-misc,hu.akarnokd.comparison,OnesTypesFlatMap2Perf,setup,Magic Number,The method contains a magic number: 777,47
akarnokd-misc,hu.akarnokd.comparison,FlattenCrossMapPerf,setup,Magic Number,The method contains a magic number: 777,31
akarnokd-misc,hu.akarnokd.comparison,FlattenCrossMapPerf,setup,Magic Number,The method contains a magic number: 1000000,31
akarnokd-misc,hu.akarnokd.comparison,FlattenCrossMapPerf,setup,Magic Number,The method contains a magic number: 888,31
akarnokd-misc,hu.akarnokd.comparison,FlattenCrossMapPerf,setup,Magic Number,The method contains a magic number: 128,31
akarnokd-misc,hu.akarnokd.comparison,ParallelPerf,setup,Long Statement,The length of the statement "flowableFJ=ParallelFlowable.from(Flowable.range(0`count)).runOn(Schedulers.from(ForkJoinPool.commonPool())).filter(v -> {" is 121.,31
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "flatMapAkkaAkka=s -> Source.from(outerIterable).flatMapMerge(4`v -> Source.from(innerIterable)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 176.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "concatMapAkkaAkka=s -> Source.from(outerIterable).flatMapConcat(v -> Source.from(innerIterable)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 177.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "flatMapAkkaRx=s -> Source.from(outerIterable).flatMapMerge(4`v -> Source.fromPublisher(innerRx)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 177.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "concatMapAkkaRx=s -> Source.from(outerIterable).flatMapConcat(v -> Source.fromPublisher(innerRx)).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer).subscribe(s);" is 178.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "concatMapAkkaRxAkka=s -> Flux.from(Source.from(outerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).concatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).subscribe(s);" is 253.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "flatMapAkkaRxAkka=s -> Flux.from(Source.from(outerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).flatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)`4).subscribe(s);" is 251.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "concatMapRxAkka=outerRx.concatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer));" is 134.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Long Statement,The length of the statement "flatMapRxAkka=outerRx.flatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)`4);" is 132.,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 777,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 1_000_000,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 888,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,setup,Magic Number,The method contains a magic number: 4,52
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapAkkaAkka,Magic Number,The method contains a magic number: 1_000_000,135
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapAkkaAkka,Magic Number,The method contains a magic number: 120,135
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapAkkaAkka,Magic Number,The method contains a magic number: 1_000_000,142
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapAkkaAkka,Magic Number,The method contains a magic number: 120,142
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapAkkaRx,Magic Number,The method contains a magic number: 1_000_000,149
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapAkkaRx,Magic Number,The method contains a magic number: 120,149
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapAkkaRx,Magic Number,The method contains a magic number: 1_000_000,156
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapAkkaRx,Magic Number,The method contains a magic number: 120,156
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapRxAkka,Magic Number,The method contains a magic number: 1_000_000,163
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapRxAkka,Magic Number,The method contains a magic number: 120,163
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapRxAkka,Magic Number,The method contains a magic number: 1_000_000,171
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapRxAkka,Magic Number,The method contains a magic number: 120,171
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapAkkaRxAkka,Magic Number,The method contains a magic number: 1_000_000,178
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapAkkaRxAkka,Magic Number,The method contains a magic number: 120,178
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapAkkaRxAkka,Magic Number,The method contains a magic number: 1_000_000,186
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapAkkaRxAkka,Magic Number,The method contains a magic number: 120,186
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapRxRx,Magic Number,The method contains a magic number: 1_000_000,193
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,concatMapRxRx,Magic Number,The method contains a magic number: 120,193
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapRxRx,Magic Number,The method contains a magic number: 1_000_000,201
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,flatMapRxRx,Magic Number,The method contains a magic number: 120,201
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,main,Long Statement,The length of the statement "Flux.from(s -> Flux.from(Source.from(outerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).flatMap(v -> Source.from(innerIterable).runWith(Sink.asPublisher(AsPublisher.WITHOUT_FANOUT)`materializer)).subscribe(s)).subscribe(System.out::println);" is 273.,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,main,Magic Number,The method contains a magic number: 100,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,main,Magic Number,The method contains a magic number: 777,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,main,Magic Number,The method contains a magic number: 100,208
akarnokd-misc,hu.akarnokd.comparison,AkkaStreamsReactorCrossMapPerf,main,Magic Number,The method contains a magic number: 888,208
akarnokd-misc,hu.akarnokd.comparison,SingleFlatMapIterablePerf,setup,Magic Number,The method contains a magic number: 777,36
akarnokd-misc,hu.akarnokd.comparison,MaterializationBenchmarkFanInOutPerf,setup,Magic Number,The method contains a magic number: 2,48
akarnokd-misc,hu.akarnokd.comparison,MaterializationBenchmarkFanInOutPerf,main,Magic Number,The method contains a magic number: 10,194
akarnokd-misc,hu.akarnokd.comparison,MaterializationBenchmarkFanInOutPerf,main,Magic Number,The method contains a magic number: 100000,194
akarnokd-misc,hu.akarnokd.comparison.classic,ClassicAsyncPerf,await,Magic Number,The method contains a magic number: 1000,64
akarnokd-misc,hu.akarnokd.comparison.classic,ClassicAsyncPerf,await,Magic Number,The method contains a magic number: 5,64
akarnokd-misc,hu.akarnokd.comparison.classic,ForEachPerf,setup,Magic Number,The method contains a magic number: 1000,22
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 193.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerIx.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 184.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 144.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMap(map -> map.entrySet()).map(blank).sumLong();" is 123.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> score2=word -> histoOfLetters.apply(word).flatMap(map -> map.entrySet()).map(letterScore).sumInt();" is 130.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> score3=word -> Ix.concatArray(score2.apply(word)`bonusForDoubleLetter.apply(word)).sumInt().map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 171.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "IxFunction<IxFunction<String`Ix<Integer>>`Ix<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Ix.from(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 339.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMap(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 192.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 5,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 5,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 2,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 7,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 50,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxOpt,measureThroughput,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`FluentIterable<Integer>> letterScore=entry -> FluentIterable.from(new Integer[]{letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a'])});" is 243.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> toIntegerFluentIterable=string -> FluentIterable.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 157.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> collect(toIntegerFluentIterable.apply(word)`() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 206.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`FluentIterable<Long>> blank=entry -> FluentIterable.of(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 177.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Long>> nBlanks=word -> sumLong(histoOfLetters.apply(word).transformAndConcat(map -> FluentIterable.from(() -> map.entrySet().iterator())).transformAndConcat(blank));" is 196.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Boolean>> checkBlanks=word -> nBlanks.apply(word).transformAndConcat(l -> FluentIterable.of(l <= 2L));" is 133.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> score2=word -> sumInt(histoOfLetters.apply(word).transformAndConcat(map -> FluentIterable.from(() -> map.entrySet().iterator())).transformAndConcat(letterScore));" is 203.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> first3=word -> FluentIterable.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 145.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> last3=word -> FluentIterable.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 143.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> bonusForDoubleLetter=word -> maxInt(toBeMaxed.apply(word).transformAndConcat(scoreOfALetter));" is 135.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> score3=word -> sumInt(FluentIterable.concat(score2.apply(word)`score2.apply(word)`bonusForDoubleLetter.apply(word)`bonusForDoubleLetter.apply(word)`FluentIterable.of(word.length() == 7 ? 50 : 0)));" is 238.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "Function<Function<String`FluentIterable<Integer>>`FluentIterable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> collect(FluentIterable.from(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first().get())`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 394.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=collect(buildHistoOnScore.apply(score3).transformAndConcat(map -> FluentIterable.from(() -> map.entrySet().iterator())).limit(3)`() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 242.,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 5,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 5,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 2L,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 3,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 3,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 7,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 50,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuava,measureThroughput,Magic Number,The method contains a magic number: 3,68
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(blank));" is 149.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(letterScore));" is 156.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> v * 2 + (word.length() == 7 ? 50 : 0));" is 188.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 367.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flattenAsFlowable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 202.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 5,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 5,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 2L,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 2,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 7,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 50,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt3,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flowable<Integer>> letterScore=entry -> Flowable.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 216.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> toIntegerFlowable=string -> Flowable.fromIterable(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 147.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 192.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flowable<Long>> blank=entry -> Flowable.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 167.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMapPublisher(map -> Flowable.fromIterable(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum);" is 185.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score2=word -> histoOfLetters.apply(word).flatMapPublisher(map -> Flowable.fromIterable(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum);" is 196.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> first3=word -> Flowable.fromIterable(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 141.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> last3=word -> Flowable.fromIterable(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 139.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> toBeMaxed=word -> Flowable.just(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 139.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).flatMap(scoreOfALetter).reduce(Integer::max);" is 128.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score3=word -> Maybe.merge(Arrays.asList(score2.apply(word)`score2.apply(word)`bonusForDoubleLetter.apply(word)`bonusForDoubleLetter.apply(word)`Maybe.just(word.length() == 7 ? 50 : 0))).reduce(Integer::sum);" is 240.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Maybe<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingGet()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 379.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapPublisher(map -> Flowable.fromIterable(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 241.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 2L,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 7,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 50,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Flowable,main,Magic Number,The method contains a magic number: 10,182
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 192.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).toFlowable().flatMapIterable(map -> map.entrySet()).map(blank));" is 160.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).toFlowable().flatMapIterable(map -> map.entrySet()).map(letterScore));" is 167.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 188.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Flowable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> new ParallelFromBatchPublisher<>(Flowable.fromIterable(shakespeareWords)`parallelism`Flowable.bufferSize()).runOn(scheduler`prefetch).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 463.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 5,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 5,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 2L,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 3,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 3,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 2,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 7,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 50,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelDiag,measureThroughput,Magic Number,The method contains a magic number: 3,54
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Complex Method,Cyclomatic complexity of the method is 13,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Long Statement,The length of the statement "sum2+=letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 131.,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 5,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 5,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 2L,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 3,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 3,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 2,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 7,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 50,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithDirect,measureThroughput,Magic Number,The method contains a magic number: 4,33
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerObservable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 194.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Long>> nBlanks=word -> MathObservable.sumLong(new SingleFlatMapIterableObservable<>(histoOfLetters.apply(word)`map -> map.entrySet()).map(blank));" is 173.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> score2=word -> MathObservable.sumInt(new SingleFlatMapIterableObservable<>(histoOfLetters.apply(word)`map -> map.entrySet()).map(letterScore));" is 180.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> bonusForDoubleLetter=word -> MathObservable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 128.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> score3=word -> MathObservable.sumInt(Observable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 194.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Observable<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 371.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=new SingleFlatMapIterableObservable<>(buildHistoOnScore.apply(score3)`map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 222.,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 2,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 7,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 50,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,45
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IEnumerable<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerIx.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 191.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IEnumerable<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(blank).sumLong();" is 138.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IEnumerable<Integer>> score2=word -> histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(letterScore).sumInt();" is 145.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IEnumerable<Integer>> score3=word -> IEnumerable.concatArray(score2.apply(word)`bonusForDoubleLetter.apply(word)).sumInt().map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 187.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`IEnumerable<Integer>>`IEnumerable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> IEnumerable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 370.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIEOpt,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "return histoOfLetters.apply(word).flatMap(map -> Seq.seq(map.entrySet())).map(blank).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0L).map(v -> sum[0]);" is 154.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "return histoOfLetters.apply(word).flatMap(map -> Seq.seq(map.entrySet())).map(letterScore).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0).map(v -> sum[0]);" is 159.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "return toBeMaxed.apply(word).flatMap(scoreOfALetter).map(v -> max[0]=Math.max(max[0]`v)).skip(Long.MAX_VALUE).append(0).map(v -> max[0]);" is 137.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "return Seq.concat(score2.apply(word)`bonusForDoubleLetter.apply(word)).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0).map(v -> {" is 132.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "return Seq.seq(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).findFirst().orElse(false)).map(word -> {" is 144.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`List<String>>>)() -> map.entrySet().iterator())).take(3).scanLeft(new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 256.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 5,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 5,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 2,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 7,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 50,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLOpt,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerObservable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 194.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Long>> nBlanks=word -> MathObservable.sumLong(histoOfLetters.apply(word).flattenAsObservable(map -> map.entrySet()).map(blank));" is 155.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> score2=word -> MathObservable.sumInt(histoOfLetters.apply(word).flattenAsObservable(map -> map.entrySet()).map(letterScore));" is 162.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> bonusForDoubleLetter=word -> MathObservable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 128.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> score3=word -> MathObservable.sumInt(Observable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 194.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Observable<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 371.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flattenAsObservable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 204.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 2,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 7,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 50,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ObservableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Long`NotUsed>> nBlanks=word -> histoOfLetters.apply(word).mapConcat(map -> map.entrySet()).map(blank).reduce((a`b) -> a + b);" is 148.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Integer`NotUsed>> score2=word -> histoOfLetters.apply(word).mapConcat(map -> map.entrySet()).map(letterScore).reduce((a`b) -> a + b);" is 156.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Integer`NotUsed>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).map(scoreOfALetter).reduce((a`b) -> Math.max(a`b));" is 143.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Integer`NotUsed>> score3=word -> score2.apply(word).concat(bonusForDoubleLetter.apply(word)).reduce((a`b) -> a + b).map(v -> v * 2 + (word.length() == 7 ? 50 : 0));" is 187.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Source<Integer`NotUsed>>`Source<TreeMap<Integer`List<String>>`NotUsed>> buildHistoOnScore=score -> {" is 125.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Long Statement,The length of the statement "return Source.from(shakespeareWords).filter(scrabbleWords::contains).flatMapConcat(( String word) -> checkBlanks.apply(word).filter(v -> v).map(v -> word)).flatMapConcat(word -> score.apply(word).map(key -> {" is 208.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 5,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 5,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 2,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 7,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 50,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamOpt,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 192.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(blank));" is 149.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(letterScore));" is 156.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word).map(v -> v * 2)`bonusForDoubleLetter.apply(word).map(v -> v * 2)`Flowable.just(word.length() == 7 ? 50 : 0)));" is 215.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).compose(FlowableTransformers.filterAsync(checkBlanks)).compose(FlowableTransformers.mapAsync(score`(word`key) -> new Object[]{word`key})).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` Object[] o) -> {" is 448.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=new SingleFlatMapIterableFlowable<>(buildHistoOnScore.apply(score3)`map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 220.,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 5,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 5,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 2L,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 3,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 3,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 2,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 2,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 7,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 50,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt2,measureThroughput,Magic Number,The method contains a magic number: 3,44
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 188.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerIx.invoke(word).aggregate(new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 191.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 139.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Long>> nBlanks=word -> histoOfLetters.invoke(word).selectManyIterable(map -> map.entrySet()).select(blank).sumLong();" is 148.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> score2=word -> histoOfLetters.invoke(word).selectManyIterable(map -> map.entrySet()).select(letterScore).sumInt();" is 155.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> toBeMaxed=word -> ObservableBuilder.from(Reactive.concat(first3.invoke(word)`last3.invoke(word)));" is 139.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> bonusForDoubleLetter=word -> toBeMaxed.invoke(word).select(scoreOfALetter).max();" is 122.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> score3=word -> ObservableBuilder.from(Reactive.concat(score2.invoke(word)`bonusForDoubleLetter.invoke(word))).sumInt().select(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 211.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`ObservableBuilder<Integer>>`ObservableBuilder<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> ObservableBuilder.from(shakespeareWords).where(scrabbleWords::contains).where(word -> checkBlanks.invoke(word).first()).aggregate(new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 369.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.invoke(score3).selectManyIterable(map -> map.entrySet()).take(3).aggregate(new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 5,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 5,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 2,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 7,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 50,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JOpt,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flux<Integer>> letterScore=entry -> Flux.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 208.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> toIntegerStream=string -> Flux.fromIterable(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 137.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> Flux.from(toIntegerStream.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 198.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flux<Long>> blank=entry -> Flux.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 159.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Long>> nBlanks=word -> Flux.from(histoOfLetters.apply(word).flatMap(map -> Flux.fromIterable(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum));" is 182.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> score2=word -> Flux.from(histoOfLetters.apply(word).flatMap(map -> Flux.fromIterable(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum));" is 193.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> first3=word -> Flux.fromIterable(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 133.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> last3=word -> Flux.fromIterable(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 131.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> toBeMaxed=word -> Flux.just(first3.apply(word)`last3.apply(word)).flatMap(Stream -> Stream);" is 123.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> bonusForDoubleLetter=word -> Flux.from(toBeMaxed.apply(word).flatMap(scoreOfALetter).reduce(Integer::max));" is 138.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> score3=word -> Flux.from(Flux.just(score2.apply(word).map(v -> v * 2)`bonusForDoubleLetter.apply(word).map(v -> v * 2)`Flux.just(word.length() == 7 ? 50 : 0)).flatMap(Stream -> Stream).reduce(Integer::sum));" is 238.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flux<Integer>>`Flux<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flux.from(Flux.fromIterable(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).toIterable().iterator().next()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 399.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=Flux.from(buildHistoOnScore.apply(score3).flatMap(map -> Flux.fromIterable(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 238.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Beta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Long`NotUsed>> nBlanks=word -> histoOfLetters.apply(word).mapConcat(map -> map.entrySet()).map(blank).reduce((a`b) -> a + b);" is 148.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Integer`NotUsed>> score2=word -> histoOfLetters.apply(word).mapConcat(map -> map.entrySet()).map(letterScore).reduce((a`b) -> a + b);" is 156.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Integer`NotUsed>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).map(scoreOfALetter).reduce((a`b) -> Math.max(a`b));" is 143.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Source<Integer`NotUsed>> score3=word -> score2.apply(word).map(v -> v * 2).concat(bonusForDoubleLetter.apply(word).map(v -> v * 2)).concat(Source.single(word.length() == 7 ? 50 : 0)).reduce((a`b) -> a + b);" is 222.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Source<Integer`NotUsed>>`Source<TreeMap<Integer`List<String>>`NotUsed>> buildHistoOnScore=score -> {" is 125.,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 5,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 5,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 3,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 3,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 2,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 2,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 7,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 50,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithAkkaStreamBeta,measureThroughput,Magic Number,The method contains a magic number: 3,64
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,localSetup,Magic Number,The method contains a magic number: 10,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,localSetup,Magic Number,The method contains a magic number: 60,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlux.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 186.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<Long>> nBlanks=word -> MathFlux.sumLong(histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(blank));" is 139.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<Integer>> score2=word -> MathFlux.sumInt(histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(letterScore));" is 146.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<Integer>> score3=word -> MathFlux.sumInt(Flux.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 176.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Mono<Integer>>`Mono<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flux.fromIterable(shakespeareWords).parallel(6).runOn(scheduler).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).block()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 378.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 5,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 5,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 2,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 7,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 50,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 6,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,56
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`Observable<Integer>> letterScore=entry -> Observable.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 217.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> toIntegerObservable=string -> Observable.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 142.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerObservable.call(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 194.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`Observable<Long>> blank=entry -> Observable.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 168.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Long>> nBlanks=word -> histoOfLetters.call(word).flatMap(map -> Observable.from(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum);" is 171.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> score2=word -> histoOfLetters.call(word).flatMap(map -> Observable.from(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum);" is 182.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> first3=word -> Observable.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 134.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> last3=word -> Observable.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 132.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> toBeMaxed=word -> Observable.just(first3.call(word)`last3.call(word)).flatMap(observable -> observable);" is 138.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> bonusForDoubleLetter=word -> toBeMaxed.call(word).flatMap(scoreOfALetter).reduce(Integer::max);" is 129.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> score3=word -> Observable.just(score2.call(word)`score2.call(word)`bonusForDoubleLetter.call(word)`bonusForDoubleLetter.call(word)`Observable.just(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable).reduce(Integer::sum);" is 266.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`Observable<Integer>>`Observable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.from(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.call(word).toBlocking().first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 382.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.call(score3).flatMap(map -> Observable.from(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 225.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 5,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 5,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 2L,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 7,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 50,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 188.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerObservable.call(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 194.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 139.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Long>> nBlanks=word -> MathObservable.sumLong(histoOfLetters.call(word).flatMapIterable(map -> map.entrySet()).map(blank));" is 147.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> score2=word -> MathObservable.sumInteger(histoOfLetters.call(word).flatMapIterable(map -> map.entrySet()).map(letterScore));" is 158.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> bonusForDoubleLetter=word -> MathObservable.max(toBeMaxed.call(word).map(scoreOfALetter));" is 124.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> score3=word -> MathObservable.sumInteger(Observable.concat(score2.call(word)`bonusForDoubleLetter.call(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 193.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`Observable<Integer>>`Observable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.from(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.call(word).toBlocking().first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 365.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.call(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 199.,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 5,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 5,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 2L,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 3,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 3,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 2,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 7,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 50,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Opt,measureThroughput,Magic Number,The method contains a magic number: 3,72
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`FluentIterable<Integer>> letterScore=entry -> FluentIterable.of(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 226.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> toIntegerFluentIterable=string -> FluentIterable.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 157.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> collect(toIntegerFluentIterable.apply(word)`() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 206.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`FluentIterable<Long>> blank=entry -> FluentIterable.of(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 177.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Long>> nBlanks=word -> sumLong(histoOfLetters.apply(word).transformAndConcat(map -> FluentIterable.from(() -> map.entrySet().iterator())).transformAndConcat(blank));" is 196.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Boolean>> checkBlanks=word -> nBlanks.apply(word).transformAndConcat(l -> FluentIterable.of(l <= 2L));" is 133.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> score2=word -> sumInt(histoOfLetters.apply(word).transformAndConcat(map -> FluentIterable.from(() -> map.entrySet().iterator())).transformAndConcat(letterScore));" is 203.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> first3=word -> FluentIterable.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 145.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> last3=word -> FluentIterable.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 143.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> bonusForDoubleLetter=word -> maxInt(toBeMaxed.apply(word).transformAndConcat(scoreOfALetter));" is 135.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> score3=word -> sumInt(FluentIterable.concat(score2.apply(word).transform(v -> v * 2)`bonusForDoubleLetter.apply(word).transform(v -> v * 2)`FluentIterable.of(word.length() == 7 ? 50 : 0)));" is 230.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`FluentIterable<Integer>>`FluentIterable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> collect(FluentIterable.from(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first().get())`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 394.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=collect(buildHistoOnScore.apply(score3).transformAndConcat(map -> FluentIterable.from(() -> map.entrySet().iterator())).limit(3)`() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 242.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 5,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 5,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 2,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 2,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 7,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 50,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaBeta,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<Entry<Integer`LongWrapper>`Ix<Integer>> letterScore=entry -> Ix.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 206.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> toIntegerIx=string -> Ix.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 123.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerIx.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 184.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<Entry<Integer`LongWrapper>`Ix<Long>> blank=entry -> Ix.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 157.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMap(map -> Ix.from(() -> map.entrySet().iterator())).flatMap(blank).sumLong();" is 153.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> score2=word -> histoOfLetters.apply(word).flatMap(map -> Ix.from(() -> map.entrySet().iterator())).flatMap(letterScore).sumInt();" is 160.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> first3=word -> Ix.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 123.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> last3=word -> Ix.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 121.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> toBeMaxed=word -> Ix.fromArray(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 134.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> score3=word -> Ix.fromArray(score2.apply(word)`score2.apply(word)`bonusForDoubleLetter.apply(word)`bonusForDoubleLetter.apply(word)`Ix.just(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable).sumInt();" is 244.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "IxFunction<IxFunction<String`Ix<Integer>>`Ix<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Ix.from(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 356.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMap(map -> Ix.from(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 218.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIx,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Long Statement,The length of the statement "ToIntFunction<Entry<Integer`Long>> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min(entry.getValue().intValue()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 181.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Long Statement,The length of the statement "Function<String`Map<Integer`Long>> histoOfLetters=word -> chars(word).boxed().collect(Collectors.groupingBy(( Integer v) -> v`Collectors.counting()));" is 150.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Long Statement,The length of the statement "ToLongFunction<Entry<Integer`Long>> blank=entry -> Long.max(0L`entry.getValue() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 130.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Long Statement,The length of the statement "Function<String`Integer> score3=word -> 2 * (score2.apply(word) + bonusForDoubleLetter.applyAsInt(word)) + (word.length() == 7 ? 50 : 0);" is 137.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Integer>`Map<Integer`List<String>>> buildHistoOnScore=score -> buildShakerspeareWordsStream().filter(scrabbleWords::contains).filter(checkBlanks).collect(Collectors.groupingBy(score`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`Collectors.toList()));" is 296.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList=Stream.of(buildHistoOnScore.apply(score3).entrySet()).limit(3).collect(Collectors.toList());" is 136.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 4,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSABeta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "ToIntFunction<Entry<Integer`Long>> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min(entry.getValue().intValue()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 181.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "Function<String`Map<Integer`Long>> histoOfLetters=word -> word.chars().boxed().collect(Collectors.groupingBy(Function.identity()`Collectors.counting()));" is 153.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "ToLongFunction<Entry<Integer`Long>> blank=entry -> Long.max(0L`entry.getValue() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 130.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "Function<String`IntStream> toBeMaxed=word -> Stream.of(first3.apply(word)`last3.apply(word)).flatMapToInt(Function.identity());" is 127.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "Function<String`Integer> score3=word -> (score2.apply(word) + bonusForDoubleLetter.applyAsInt(word)) + (score2.apply(word) + bonusForDoubleLetter.applyAsInt(word)) + (word.length() == 7 ? 50 : 0);" is 196.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Integer>`Map<Integer`List<String>>> buildHistoOnScore=score -> buildShakerspeareWordsStream().filter(scrabbleWords::contains).filter(checkBlanks).collect(Collectors.groupingBy(score`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`Collectors.toList()));" is 296.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList=buildHistoOnScore.apply(score3).entrySet().stream().limit(3).collect(Collectors.toList());" is 134.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 2,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 3,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 4,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 7,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 50,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreams,measureThroughput,Magic Number,The method contains a magic number: 3,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Observable<Integer>> letterScore=entry -> Observable.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 220.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> toIntegerObservable=string -> Observable.fromIterable(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 153.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerObservable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 194.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Observable<Long>> blank=entry -> Observable.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 171.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMapObservable(map -> Observable.fromIterable(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum);" is 188.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score2=word -> histoOfLetters.apply(word).flatMapObservable(map -> Observable.fromIterable(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum);" is 199.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> first3=word -> Observable.fromIterable(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 145.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> last3=word -> Observable.fromIterable(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 143.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> toBeMaxed=word -> Observable.just(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 143.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).flatMap(scoreOfALetter).reduce(Integer::max);" is 128.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score3=word -> Observable.fromArray(score2.apply(word).map(v -> v * 2)`bonusForDoubleLetter.apply(word).map(v -> v * 2)`Maybe.just(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable.toObservable()).reduce(Integer::sum);" is 263.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Maybe<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.fromIterable(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingGet()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 381.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapObservable(map -> Observable.fromIterable(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 244.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 2,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 7,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 50,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ObservableBeta,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<String`ReactiveSeq<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerIx.apply(word).scanLeft(new HashMap<Integer`MutableLong>()`(map`value) -> {" is 166.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<String`ReactiveSeq<Integer>> score2=word -> histoOfLetters.apply(word).flatMapI(map -> map.entrySet()).map(letterScore).scanLeft(0`(a`b) -> a + b).takeRight(1);" is 169.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<String`ReactiveSeq<Integer>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).map(scoreOfALetter).scanLeft(0`(a`b) -> Math.max(a`b)).takeRight(1);" is 157.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<String`ReactiveSeq<Integer>> score3=word -> score2.apply(word).append(bonusForDoubleLetter.apply(word)).scanLeft(0`(a`b) -> a + b).takeRight(1).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 201.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`ReactiveSeq<Integer>>`ReactiveSeq<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> ReactiveSeq.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).firstValue()).scanLeft(new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`(map`word) -> {" is 331.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapI(map -> map.entrySet()).take(3).scanLeft(new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 188.,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 5,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 5,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 2,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 7,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 50,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithCyclopsReactOpt,measureThroughput,Magic Number,The method contains a magic number: 3,40
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Long Statement,The length of the statement "ToIntFunction<Entry<Integer`Long>> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min(entry.getValue().intValue()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 181.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Long Statement,The length of the statement "Function<String`Map<Integer`Long>> histoOfLetters=word -> chars(word).boxed().collect(Collectors.groupingBy(v -> v`Collectors.counting()));" is 139.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Long Statement,The length of the statement "ToLongFunction<Entry<Integer`Long>> blank=entry -> Long.max(0L`entry.getValue() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 130.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Long Statement,The length of the statement "Function<String`Integer> score3=word -> (score2.apply(word) + bonusForDoubleLetter.applyAsInt(word)) + (score2.apply(word) + bonusForDoubleLetter.applyAsInt(word)) + (word.length() == 7 ? 50 : 0);" is 196.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Integer>`Map<Integer`List<String>>> buildHistoOnScore=score -> buildShakerspeareWordsStream().filter(scrabbleWords::contains).filter(checkBlanks).collect(Collectors.groupingBy(score`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`Collectors.toList()));" is 296.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList=Stream.of(buildHistoOnScore.apply(score3).entrySet()).limit(3).collect(Collectors.toList());" is 136.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 4,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithLSA,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 192.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).toFlowable().flatMapIterable(map -> map.entrySet()).map(blank));" is 160.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).toFlowable().flatMapIterable(map -> map.entrySet()).map(letterScore));" is 167.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 188.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Flowable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(shakespeareWords).parallel(6).runOn(scheduler).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 398.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 5,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 5,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 2,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 7,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 50,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 6,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Seq<Integer>> letterScore=entry -> Seq.of(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 204.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "Function<String`Seq<Integer>> toIntegerIx=string -> Seq.seq(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 122.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Seq<Long>> blank=entry -> Seq.of(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 155.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "return histoOfLetters.apply(word).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).flatMap(blank).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0L).map(v -> sum[0]);" is 217.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "return histoOfLetters.apply(word).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).flatMap(letterScore).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0).map(v -> sum[0]);" is 222.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "Function<String`Seq<Integer>> first3=word -> Seq.seq(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 122.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "Function<String`Seq<Integer>> toBeMaxed=word -> Seq.of(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 127.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "return toBeMaxed.apply(word).flatMap(scoreOfALetter).map(v -> max[0]=Math.max(max[0]`v)).skip(Long.MAX_VALUE).append(0).map(v -> max[0]);" is 137.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "return Seq.of(score2.apply(word)`score2.apply(word)`bonusForDoubleLetter.apply(word)`bonusForDoubleLetter.apply(word)`Seq.of(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0).map(v -> {" is 250.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "return Seq.seq((Iterable<String>)() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).findFirst().orElse(false)).map(word -> {" is 179.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`List<String>>>)() -> map.entrySet().iterator())).take(3).scanLeft(new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 256.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 5,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 5,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 2L,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 7,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 50,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOL,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`ObservableBuilder<Integer>> letterScore=entry -> ObservableBuilder.from(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 231.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> toIntegerIx=string -> ObservableBuilder.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 148.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerIx.invoke(word).aggregate(new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 191.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`ObservableBuilder<Long>> blank=entry -> ObservableBuilder.from(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 182.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Long>> nBlanks=word -> histoOfLetters.invoke(word).selectMany((Func1<HashMap<Integer`LongWrapper>`Observable<Entry<Integer`LongWrapper>>>)map -> ObservableBuilder.from((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).selectMany(blank).sumLong();" is 303.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Boolean>> checkBlanks=word -> nBlanks.invoke(word).selectMany((Func1<Long`Observable<Boolean>>)l -> ObservableBuilder.from(l <= 2L));" is 164.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> score2=word -> histoOfLetters.invoke(word).selectMany((Func1<HashMap<Integer`LongWrapper>`Observable<Entry<Integer`LongWrapper>>>)map -> ObservableBuilder.from((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).selectMany(letterScore).sumInt();" is 310.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> first3=word -> ObservableBuilder.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 148.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> last3=word -> ObservableBuilder.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 146.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> toBeMaxed=word -> ObservableBuilder.from(first3.invoke(word)`last3.invoke(word)).selectMany(Functions.identity());" is 155.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> bonusForDoubleLetter=word -> toBeMaxed.invoke(word).selectMany(scoreOfALetter).max();" is 126.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> score3=word -> ObservableBuilder.from(score2.invoke(word).select(v -> v * 2)`bonusForDoubleLetter.invoke(word).select(v -> v * 2)`ObservableBuilder.from(word.length() == 7 ? 50 : 0)).selectMany(Functions.identity()).sumInt();" is 266.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`ObservableBuilder<Integer>>`ObservableBuilder<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> ObservableBuilder.from((Iterable<String>)() -> shakespeareWords.iterator()).where(scrabbleWords::contains).where(word -> checkBlanks.invoke(word).first()).aggregate(new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 404.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.invoke(score3).selectMany((Func1<TreeMap<Integer`List<String>>`Observable<Entry<Integer`List<String>>>>)map -> ObservableBuilder.from((Iterable<Map.Entry<Integer`List<String>>>)() -> map.entrySet().iterator())).take(3).aggregate(new ArrayList<Entry<Integer`List<String>>>()`( ArrayList<Entry<Integer`List<String>>> list` Entry<Integer`List<String>> entry) -> {" is 423.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 5,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 5,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 2,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 2,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 7,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 50,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4JBeta,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Seq<Integer>> letterScore=entry -> Seq.of(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 204.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Seq<Integer>> toIntegerIx=string -> Seq.seq(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 122.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Seq<Long>> blank=entry -> Seq.of(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 155.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "return histoOfLetters.apply(word).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).flatMap(blank).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0L).map(v -> sum[0]);" is 217.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "return histoOfLetters.apply(word).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).flatMap(letterScore).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0).map(v -> sum[0]);" is 222.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Seq<Integer>> first3=word -> Seq.seq(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 122.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Seq<Integer>> toBeMaxed=word -> Seq.of(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 127.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "return toBeMaxed.apply(word).flatMap(scoreOfALetter).map(v -> max[0]=Math.max(max[0]`v)).skip(Long.MAX_VALUE).append(0).map(v -> max[0]);" is 137.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "return Seq.of(score2.apply(word).map(v -> v * 2)`bonusForDoubleLetter.apply(word).map(v -> v * 2)`Seq.of(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable).map(v -> sum[0]+=v).skip(Long.MAX_VALUE).append(0).map(v -> {" is 230.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "return Seq.seq((Iterable<String>)() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).findFirst().orElse(false)).map(word -> {" is 179.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMap(map -> Seq.seq((Iterable<Map.Entry<Integer`List<String>>>)() -> map.entrySet().iterator())).take(3).scanLeft(new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 256.,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 5,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 5,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 2,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 2,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 7,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 50,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithJOOLBeta,measureThroughput,Magic Number,The method contains a magic number: 3,38
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<HashMap<Integer`MutableLong>>> histoOfLetters=word -> collect(toIntegerFluentIterable.apply(word)`() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 206.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Long>> nBlanks=word -> sumLong(histoOfLetters.apply(word).transformAndConcat(map -> map.entrySet()).transform(blank));" is 149.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> score2=word -> sumInt(histoOfLetters.apply(word).transformAndConcat(map -> map.entrySet()).transform(letterScore));" is 156.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> bonusForDoubleLetter=word -> maxInt(toBeMaxed.apply(word).transform(scoreOfALetter));" is 126.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<String`FluentIterable<Integer>> score3=word -> sumInt(score2.apply(word).append(bonusForDoubleLetter.apply(word))).transform(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 178.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`FluentIterable<Integer>>`FluentIterable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> collect(FluentIterable.from(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first().get())`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 377.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=collect(buildHistoOnScore.apply(score3).transformAndConcat(map -> map.entrySet()).limit(3)`() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 204.,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 5,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 5,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 3,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 3,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 2,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 7,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 50,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithGuavaOpt,measureThroughput,Magic Number,The method contains a magic number: 3,61
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flux<Integer>> letterScore=entry -> Flux.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 208.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> toIntegerStream=string -> Flux.fromIterable(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 137.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> Flux.from(toIntegerStream.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 198.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flux<Long>> blank=entry -> Flux.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 159.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Long>> nBlanks=word -> Flux.from(histoOfLetters.apply(word).flatMap(map -> Flux.fromIterable(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum));" is 182.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> score2=word -> Flux.from(histoOfLetters.apply(word).flatMap(map -> Flux.fromIterable(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum));" is 193.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> first3=word -> Flux.fromIterable(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 133.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> last3=word -> Flux.fromIterable(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 131.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> toBeMaxed=word -> Flux.just(first3.apply(word)`last3.apply(word)).flatMap(Stream -> Stream);" is 123.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> bonusForDoubleLetter=word -> Flux.from(toBeMaxed.apply(word).flatMap(scoreOfALetter).reduce(Integer::max));" is 138.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<String`Flux<Integer>> score3=word -> Flux.from(Flux.just(score2.apply(word)`score2.apply(word)`bonusForDoubleLetter.apply(word)`bonusForDoubleLetter.apply(word)`Flux.just(word.length() == 7 ? 50 : 0)).flatMap(Stream -> Stream).reduce(Integer::sum));" is 258.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flux<Integer>>`Flux<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flux.from(Flux.fromIterable(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).toIterable().iterator().next()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 399.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=Flux.from(buildHistoOnScore.apply(score3).flatMap(map -> Flux.fromIterable(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 238.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`Observable<Integer>> letterScore=entry -> Observable.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 217.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> toIntegerObservable=string -> Observable.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 142.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerObservable.call(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 194.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`Observable<Long>> blank=entry -> Observable.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 168.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Long>> nBlanks=word -> histoOfLetters.call(word).flatMap(map -> Observable.from(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum);" is 171.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> score2=word -> histoOfLetters.call(word).flatMap(map -> Observable.from(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum);" is 182.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> first3=word -> Observable.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 134.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> last3=word -> Observable.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 132.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> toBeMaxed=word -> Observable.just(first3.call(word)`last3.call(word)).flatMap(observable -> observable);" is 138.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> bonusForDoubleLetter=word -> toBeMaxed.call(word).flatMap(scoreOfALetter).reduce(Integer::max);" is 129.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<String`Observable<Integer>> score3=word -> Observable.just(score2.call(word).map(v -> v * 2)`bonusForDoubleLetter.call(word).map(v -> v * 2)`Observable.just(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable).reduce(Integer::sum);" is 248.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`Observable<Integer>>`Observable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.from(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.call(word).toBlocking().first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 382.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.call(score3).flatMap(map -> Observable.from(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 225.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava1Beta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 192.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(blank));" is 149.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(letterScore));" is 156.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> v * 2 + (word.length() == 7 ? 50 : 0));" is 188.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 367.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flattenAsFlowable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 202.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 7,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 50,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableOpt,main,Magic Number,The method contains a magic number: 100,205
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlux.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 186.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<Long>> nBlanks=word -> MathFlux.sumLong(histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(blank));" is 139.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<Integer>> score2=word -> MathFlux.sumInt(histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(letterScore));" is 146.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<String`Mono<Integer>> score3=word -> MathFlux.sumInt(Flux.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 176.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Mono<Integer>>`Mono<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flux.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).block()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 349.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 5,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 2L,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 2,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 7,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 50,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithReactor3Opt,measureThroughput,Magic Number,The method contains a magic number: 3,43
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 192.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(blank));" is 149.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).flattenAsFlowable(map -> map.entrySet()).map(letterScore));" is 156.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> v * 2 + (word.length() == 7 ? 50 : 0));" is 188.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 367.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flattenAsFlowable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 202.,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 5,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 2,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 7,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 50,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava3FlowableOpt,measureThroughput,Magic Number,The method contains a magic number: 3,42
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`ObservableBuilder<Integer>> letterScore=entry -> ObservableBuilder.from(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 231.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> toIntegerIx=string -> ObservableBuilder.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 148.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerIx.invoke(word).aggregate(new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 191.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`LongWrapper>`ObservableBuilder<Long>> blank=entry -> ObservableBuilder.from(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 182.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Long>> nBlanks=word -> histoOfLetters.invoke(word).selectMany((Func1<HashMap<Integer`LongWrapper>`Observable<Entry<Integer`LongWrapper>>>)map -> ObservableBuilder.from((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).selectMany(blank).sumLong();" is 303.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Boolean>> checkBlanks=word -> nBlanks.invoke(word).selectMany((Func1<Long`Observable<Boolean>>)l -> ObservableBuilder.from(l <= 2L));" is 164.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> score2=word -> histoOfLetters.invoke(word).selectMany((Func1<HashMap<Integer`LongWrapper>`Observable<Entry<Integer`LongWrapper>>>)(map) -> ObservableBuilder.from((Iterable<Map.Entry<Integer`LongWrapper>>)() -> map.entrySet().iterator())).selectMany(letterScore).sumInt();" is 312.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> first3=word -> ObservableBuilder.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 148.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> last3=word -> ObservableBuilder.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 146.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> toBeMaxed=word -> ObservableBuilder.from(first3.invoke(word)`last3.invoke(word)).selectMany(Functions.identity());" is 155.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> bonusForDoubleLetter=word -> toBeMaxed.invoke(word).selectMany(scoreOfALetter).max();" is 126.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<String`ObservableBuilder<Integer>> score3=word -> ObservableBuilder.from(score2.invoke(word)`score2.invoke(word)`bonusForDoubleLetter.invoke(word)`bonusForDoubleLetter.invoke(word)`ObservableBuilder.from(word.length() == 7 ? 50 : 0)).selectMany(Functions.identity()).sumInt();" is 282.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`ObservableBuilder<Integer>>`ObservableBuilder<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> ObservableBuilder.from((Iterable<String>)() -> shakespeareWords.iterator()).where(scrabbleWords::contains).where(word -> checkBlanks.invoke(word).first()).aggregate(new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 404.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.invoke(score3).selectMany((Func1<TreeMap<Integer`List<String>>`Observable<Entry<Integer`List<String>>>>)map -> ObservableBuilder.from((Iterable<Map.Entry<Integer`List<String>>>)() -> map.entrySet().iterator())).take(3).aggregate(new ArrayList<Entry<Integer`List<String>>>()`( ArrayList<Entry<Integer`List<String>>> list` Entry<Integer`List<String>> entry) -> {" is 423.,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 5,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 5,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 2L,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 7,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 50,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithR4J,measureThroughput,Magic Number,The method contains a magic number: 3,39
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 192.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Long>> nBlanks=word -> MathFlowable.sumLong(histoOfLetters.apply(word).toFlowable().flatMapIterable(map -> map.entrySet()).map(blank));" is 160.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score2=word -> MathFlowable.sumInt(histoOfLetters.apply(word).toFlowable().flatMapIterable(map -> map.entrySet()).map(letterScore));" is 167.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> bonusForDoubleLetter=word -> MathFlowable.max(toBeMaxed.apply(word).map(scoreOfALetter));" is 124.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> score3=word -> MathFlowable.sumInt(Flowable.concat(score2.apply(word)`bonusForDoubleLetter.apply(word))).map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 188.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Flowable<Integer>>`Flowable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(shakespeareWords).parallel(6).runOn(scheduler).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingFirst()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 398.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 5,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 5,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 2,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 7,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 50,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 6,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2ParallelOpt,measureThroughput,Magic Number,The method contains a magic number: 3,46
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 188.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`IterableBuilder<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerIterableBuilder.invoke(word).scan(new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 197.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 139.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`IterableBuilder<Long>> nBlanks=word -> histoOfLetters.invoke(word).selectMany(map -> map.entrySet()).select(blank).sumLong();" is 138.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`IterableBuilder<Integer>> score2=word -> histoOfLetters.invoke(word).selectMany(map -> map.entrySet()).select(letterScore).sumInt();" is 145.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<String`IterableBuilder<Integer>> score3=word -> score2.invoke(word).concat(bonusForDoubleLetter.invoke(word)).sumInt().select(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 176.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "Func1<Func1<String`IterableBuilder<Integer>>`IterableBuilder<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> IterableBuilder.from(shakespeareWords).where(scrabbleWords::contains).where(word -> checkBlanks.invoke(word).first()).scan(new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 358.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.invoke(score3).selectMany(map -> map.entrySet()).take(3).scan(new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 187.,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 5,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 5,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 3,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 3,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 2,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 7,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 50,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithI4JOpt,measureThroughput,Magic Number,The method contains a magic number: 3,41
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<Entry<Integer`LongWrapper>`Ix<Integer>> letterScore=entry -> Ix.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 206.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> toIntegerIx=string -> Ix.from(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 123.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerIx.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 184.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<Entry<Integer`LongWrapper>`Ix<Long>> blank=entry -> Ix.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 157.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMap(map -> Ix.from(() -> map.entrySet().iterator())).flatMap(blank).sumLong();" is 153.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> score2=word -> histoOfLetters.apply(word).flatMap(map -> Ix.from(() -> map.entrySet().iterator())).flatMap(letterScore).sumInt();" is 160.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> first3=word -> Ix.from(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 123.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> last3=word -> Ix.from(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 121.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> toBeMaxed=word -> Ix.fromArray(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 134.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<String`Ix<Integer>> score3=word -> Ix.fromArray(score2.apply(word).map(v -> v * 2)`bonusForDoubleLetter.apply(word).map(v -> v * 2)`Ix.just(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable).sumInt();" is 224.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "IxFunction<IxFunction<String`Ix<Integer>>`Ix<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Ix.from(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 356.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMap(map -> Ix.from(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 218.,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 5,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 5,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 2,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 2,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 7,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 50,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIxBeta,measureThroughput,Magic Number,The method contains a magic number: 3,65
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flowable<Integer>> letterScore=entry -> Flowable.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 216.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> toIntegerFlowable=string -> Flowable.fromIterable(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 147.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerFlowable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 192.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Flowable<Long>> blank=entry -> Flowable.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 167.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMapPublisher(map -> Flowable.fromIterable(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum);" is 185.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score2=word -> histoOfLetters.apply(word).flatMapPublisher(map -> Flowable.fromIterable(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum);" is 196.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> first3=word -> Flowable.fromIterable(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 141.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> last3=word -> Flowable.fromIterable(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 139.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Flowable<Integer>> toBeMaxed=word -> Flowable.just(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 139.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).flatMap(scoreOfALetter).reduce(Integer::max);" is 128.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score3=word -> Maybe.merge(Arrays.asList(score2.apply(word).map(v -> v * 2)`bonusForDoubleLetter.apply(word).map(v -> v * 2)`Maybe.just(word.length() == 7 ? 50 : 0))).reduce(Integer::sum);" is 220.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Maybe<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Flowable.fromIterable(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingGet()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 379.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapPublisher(map -> Flowable.fromIterable(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 241.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2FlowableBeta,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Integer> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 191.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IObservable<HashMap<Integer`MutableLong>>> histoOfLetters=word -> toIntegerIx.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`MutableLong> map` Integer value) -> {" is 191.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`MutableLong>`Long> blank=entry -> Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 142.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IObservable<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(blank).sumLong();" is 138.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IObservable<Integer>> score2=word -> histoOfLetters.apply(word).flatMapIterable(map -> map.entrySet()).map(letterScore).sumInt();" is 145.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<String`IObservable<Integer>> score3=word -> IObservable.concatArray(score2.apply(word)`bonusForDoubleLetter.apply(word)).sumInt().map(v -> 2 * v + (word.length() == 7 ? 50 : 0));" is 187.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "Function<Function<String`IObservable<Integer>>`IObservable<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> IObservable.fromIterable(shakespeareWords).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).first()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 370.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapIterable(map -> map.entrySet()).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 200.,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 5,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 2L,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 2,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 7,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 50,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithIObsOpt,measureThroughput,Magic Number,The method contains a magic number: 3,36
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Observable<Integer>> letterScore=entry -> Observable.just(letterScores[entry.getKey() - 'a'] * Integer.min((int)entry.getValue().get()`scrabbleAvailableLetters[entry.getKey() - 'a']));" is 220.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> toIntegerObservable=string -> Observable.fromIterable(IterableSpliterator.of(string.chars().boxed().spliterator()));" is 153.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Single<HashMap<Integer`LongWrapper>>> histoOfLetters=word -> toIntegerObservable.apply(word).collect(() -> new HashMap<>()`( HashMap<Integer`LongWrapper> map` Integer value) -> {" is 194.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<Entry<Integer`LongWrapper>`Observable<Long>> blank=entry -> Observable.just(Long.max(0L`entry.getValue().get() - scrabbleAvailableLetters[entry.getKey() - 'a']));" is 171.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Long>> nBlanks=word -> histoOfLetters.apply(word).flatMapObservable(map -> Observable.fromIterable(() -> map.entrySet().iterator())).flatMap(blank).reduce(Long::sum);" is 188.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score2=word -> histoOfLetters.apply(word).flatMapObservable(map -> Observable.fromIterable(() -> map.entrySet().iterator())).flatMap(letterScore).reduce(Integer::sum);" is 199.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> first3=word -> Observable.fromIterable(IterableSpliterator.of(word.chars().boxed().limit(3).spliterator()));" is 145.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> last3=word -> Observable.fromIterable(IterableSpliterator.of(word.chars().boxed().skip(3).spliterator()));" is 143.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Observable<Integer>> toBeMaxed=word -> Observable.just(first3.apply(word)`last3.apply(word)).flatMap(observable -> observable);" is 143.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> bonusForDoubleLetter=word -> toBeMaxed.apply(word).flatMap(scoreOfALetter).reduce(Integer::max);" is 128.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<String`Maybe<Integer>> score3=word -> Observable.fromArray(score2.apply(word)`score2.apply(word)`bonusForDoubleLetter.apply(word)`bonusForDoubleLetter.apply(word)`Maybe.just(word.length() == 7 ? 50 : 0)).flatMap(observable -> observable.toObservable()).reduce(Integer::sum);" is 283.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Maybe<Integer>>`Single<TreeMap<Integer`List<String>>>> buildHistoOnScore=score -> Observable.fromIterable(() -> shakespeareWords.iterator()).filter(scrabbleWords::contains).filter(word -> checkBlanks.apply(word).blockingGet()).collect(() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`( TreeMap<Integer`List<String>> map` String word) -> {" is 381.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList2=buildHistoOnScore.apply(score3).flatMapObservable(map -> Observable.fromIterable(() -> map.entrySet().iterator())).take(3).collect(() -> new ArrayList<Entry<Integer`List<String>>>()`(list`entry) -> {" is 244.,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 5,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 2L,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 7,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 50,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithRxJava2Observable,measureThroughput,Magic Number,The method contains a magic number: 3,37
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "ToIntFunction<Entry<Integer`Long>> letterScore=entry -> letterScores[entry.getKey() - 'a'] * Integer.min(entry.getValue().intValue()`scrabbleAvailableLetters[entry.getKey() - 'a']);" is 181.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Map<Integer`Long>> histoOfLetters=word -> word.chars().boxed().collect(Collectors.groupingBy(Function.identity()`Collectors.counting()));" is 153.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "ToLongFunction<Entry<Integer`Long>> blank=entry -> Long.max(0L`entry.getValue() - scrabbleAvailableLetters[entry.getKey() - 'a']);" is 130.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "Function<String`IntStream> toBeMaxed=word -> Stream.of(first3.apply(word)`last3.apply(word)).flatMapToInt(Function.identity());" is 127.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "Function<String`Integer> score3=word -> 2 * (score2.apply(word) + bonusForDoubleLetter.applyAsInt(word)) + (word.length() == 7 ? 50 : 0);" is 137.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "Function<Function<String`Integer>`Map<Integer`List<String>>> buildHistoOnScore=score -> buildShakerspeareWordsStream().filter(scrabbleWords::contains).filter(checkBlanks).collect(Collectors.groupingBy(score`() -> new TreeMap<Integer`List<String>>(Comparator.reverseOrder())`Collectors.toList()));" is 296.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Long Statement,The length of the statement "List<Entry<Integer`List<String>>> finalList=buildHistoOnScore.apply(score3).entrySet().stream().limit(3).collect(Collectors.toList());" is 134.,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 5,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 2,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 3,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 4,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 2,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 7,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 50,35
akarnokd-misc,hu.akarnokd.comparison.scrabble,ShakespearePlaysScrabbleWithStreamsBeta,measureThroughput,Magic Number,The method contains a magic number: 3,35
