Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
rx2,hu.akarnokd.reactive.comparison.rx2,BlockingPerf,setup,Magic Number,The method contains a magic number: 1_000_000,37
rx2,hu.akarnokd.reactive.comparison.rx2,BlockingPerf,setup,Magic Number,The method contains a magic number: 777,37
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1_000_000,75
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,75
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,75
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 1024.0,75
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,checkMemory,Magic Number,The method contains a magic number: 200,75
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).subscribeWith(new MyRx2Observer())`"range+consumer"`"Rx2Observable");" is 123.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).map(v -> v).subscribeWith(new MyRx2Observer())`"range+map+consumer"`"Rx2Observable");" is 139.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).map(v -> v).filter(v -> true).subscribeWith(new MyRx2Observer())`"range+map+filter+consumer"`"Rx2Observable");" is 164.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Observer())`"range+subscribeOn+consumer"`"Rx2Observable");" is 197.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Observer())`"range+observeOn+consumer"`"Rx2Observable");" is 193.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Observable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Observer())`"range+subscribeOn+observeOn+consumer"`"Rx2Observable");" is 267.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.AsyncSubject.create().subscribeWith(new MyRx2Observer())`"Async+consumer"`"Rx2Observable");" is 131.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.PublishSubject.create().subscribeWith(new MyRx2Observer())`"Publish+consumer"`"Rx2Observable");" is 135.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.ReplaySubject.create().subscribeWith(new MyRx2Observer())`"Replay+consumer"`"Rx2Observable");" is 133.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.BehaviorSubject.create().subscribeWith(new MyRx2Observer())`"Behavior+consumer"`"Rx2Observable");" is 137.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.subjects.UnicastSubject.create().subscribeWith(new MyRx2Observer())`"Unicast+consumer"`"Rx2Observable");" is 135.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).subscribeWith(new MyRx2Subscriber())`"range+consumer"`"Rx2Flowable");" is 121.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).map(v -> v).subscribeWith(new MyRx2Subscriber())`"range+map+consumer"`"Rx2Flowable");" is 137.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).map(v -> v).filter(v -> true).subscribeWith(new MyRx2Subscriber())`"range+map+filter+consumer"`"Rx2Flowable");" is 162.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Subscriber())`"range+subscribeOn+consumer"`"Rx2Flowable");" is 195.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Subscriber())`"range+observeOn+consumer"`"Rx2Flowable");" is 191.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.Flowable.range(1`10).subscribeOn(io.reactivex.schedulers.Schedulers.computation()).observeOn(io.reactivex.schedulers.Schedulers.computation()).subscribeWith(new MyRx2Subscriber())`"range+subscribeOn+observeOn+consumer"`"Rx2Flowable");" is 265.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.AsyncProcessor.create().subscribeWith(new MyRx2Subscriber())`"Async+consumer"`"Rx2Flowable");" is 135.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.PublishProcessor.create().subscribeWith(new MyRx2Subscriber())`"Publish+consumer"`"Rx2Flowable");" is 139.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.ReplayProcessor.create().subscribeWith(new MyRx2Subscriber())`"Replay+consumer"`"Rx2Flowable");" is 137.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.BehaviorProcessor.create().subscribeWith(new MyRx2Subscriber())`"Behavior+consumer"`"Rx2Flowable");" is 141.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Long Statement,The length of the statement "checkMemory(() -> io.reactivex.processors.UnicastProcessor.create().subscribeWith(new MyRx2Subscriber())`"Unicast+consumer"`"Rx2Flowable");" is 139.,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,MemoryPerf,main,Magic Number,The method contains a magic number: 10,105
rx2,hu.akarnokd.reactive.comparison.rx2,AsyncPerf,setup,Long Statement,The length of the statement "pipelineRx2Flowable=arrayRx2F.subscribeOn(io.reactivex.schedulers.Schedulers.from(exec2)).observeOn(io.reactivex.schedulers.Schedulers.from(exec));" is 147.,36
rx2,hu.akarnokd.reactive.comparison.rx2,AsyncPerf,setup,Long Statement,The length of the statement "pipelineRx2Observable=arrayRx2O.subscribeOn(io.reactivex.schedulers.Schedulers.from(exec2)).observeOn(io.reactivex.schedulers.Schedulers.from(exec));" is 149.,36
rx2,hu.akarnokd.reactive.comparison.rx2,AsyncPerf,setup,Magic Number,The method contains a magic number: 777,36
